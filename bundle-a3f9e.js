"use strict";
(() => {
  var __defProp = Object.defineProperty;
  var __defProps = Object.defineProperties;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
      if (__hasOwnProp.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b)) {
        if (__propIsEnum.call(b, prop))
          __defNormalProp(a, prop, b[prop]);
      }
    return a;
  };
  var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
  var __decorateClass = (decorators, target, key, kind) => {
    var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
    for (var i = decorators.length - 1, decorator; i >= 0; i--)
      if (decorator = decorators[i])
        result = (kind ? decorator(target, key, result) : decorator(result)) || result;
    if (kind && result)
      __defProp(target, key, result);
    return result;
  };

  // src/util/engine.ts
  var SoundManager = Laya.SoundManager;

  // src/util/util.ts
  var gameRandomSeed = 1;
  function getFixed(num, point) {
    if (!point)
      point = 3;
    return +num.toFixed(point);
  }
  function pad(num, length = 2) {
    let str = num.toString();
    while (str.length < length) {
      str = "0" + str;
    }
    return str;
  }
  function isPositiveInteger(str) {
    return /^\d+$/.test(str);
  }
  function getAxisAngle(x1, y1, x2, y2) {
    let angle = Math.atan2(y2 - y1, x2 - x1) * (-180 / Math.PI);
    if (angle < 0) {
      angle += 360;
      return getFixed(angle);
    }
    return getFixed(angle);
  }
  function getDirectionByAngle(angle) {
    if (angle > 315 || angle <= 45) {
      return 2 /* RIGHT */;
    }
    if (angle > 45 && angle <= 135) {
      return 3 /* UP */;
    }
    if (angle > 135 && angle <= 225) {
      return 1 /* LEFT */;
    }
    if (angle > 225 && angle <= 315) {
      return 4 /* DOWN */;
    }
  }
  function axisToGrid(x, y) {
    let row = Math.min(Math.floor(Math.max(0, y) / GridHeight), GameRows - 1);
    let col = Math.min(Math.floor(Math.max(0, x) / GridWidth), GameCols - 1);
    return { row, col };
  }
  function getRowByY(y) {
    let row = Math.floor(y / GridHeight);
    return row;
  }
  function getColByX(x) {
    let col = Math.floor(x / GridWidth);
    return col;
  }
  function gridToAxis(row, col) {
    let x = getFixed(col * GridWidth);
    let y = getFixed(row * GridHeight);
    return { x, y };
  }
  function isColliding(rect1, rect2) {
    return !(rect2.x > getFixed(rect1.x + rect1.width) || getFixed(rect2.x + rect2.width) < rect1.x || rect2.y > getFixed(rect1.y + rect1.height) || getFixed(rect2.y + rect2.height) < rect1.y);
  }
  function playMusic(url) {
    SoundManager.stopMusic();
    if (GameConfig.startMusic) {
      SoundManager.playMusic(url, 0, null, 0);
    }
  }
  function stopMusic() {
    SoundManager.stopMusic();
  }
  function playSound(url) {
    if (GameConfig.startMusic) {
      SoundManager.playSound(url, 1, null, null, 0);
    }
  }
  function stopAll() {
    SoundManager.stopAll();
  }
  var deepClone = (obj) => {
    if (typeof obj !== "object" || obj === null) {
      return obj;
    }
    const res = Array.isArray(obj) ? [] : {};
    for (const key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        res[key] = deepClone(obj[key]);
      }
    }
    return res;
  };
  var setGameRandomSeed = (seed) => {
    gameRandomSeed = seed;
  };
  var randomBySeed = (seed) => {
    return Math.round((seed * 9301 + 49297) % 233280);
  };
  var MyRandom = () => {
    let seed = randomBySeed(gameRandomSeed);
    gameRandomSeed = seed;
    return getFixed(seed / 233280);
  };
  var getUrlParams = (url) => {
    const paramsRegex = /[?&]+([^=&]+)=([^&]*)/gi;
    const params = {};
    let match;
    while (match = paramsRegex.exec(url)) {
      params[match[1]] = match[2];
    }
    return params;
  };
  var isEquip = (type) => {
    return type >= 100 && type < 3e3;
  };
  var isCanXiangqianEquip = (equip) => {
    return equip.type >= 100 && equip.type < 3e3 && !equip.autoXiangQian;
  };
  var isCanQianghuaEquip = (equip) => {
    if (equip.type < 100 || equip.type >= 3e3)
      return false;
    if (equip.qianghuaLevel === 5)
      return false;
    if (equip.goodsId === equip.goodsType)
      return false;
    return true;
  };
  var isCanJinglianEquip = (equip) => {
    if (equip.goodsId === equip.goodsType)
      return false;
    if (equip.gaojingLevel === 9)
      return false;
    return true;
  };
  var isQianghuashi = (type) => {
    return type === 5003 || type === 5004 || type === 5005 || type === 5006 || type === 5007;
  };
  var isJinglianshi = (type) => {
    return type === 5001;
  };
  var isGaojing = (type) => {
    return type === 5002;
  };
  var isCanFenjieEquip = (goodsInfo) => {
    return !!goodsInfo.stoneType;
  };
  var getEquipHp = (equip) => {
    if (!equip)
      return 0;
    return (equip.hp || 0) + (equip.jinglianHp || 0) + (equip.qianghuaHp || 0);
  };
  var getEquipMp = (equip) => {
    if (!equip)
      return 0;
    return (equip.mp || 0) + (equip.jinglianMp || 0) + (equip.qianghuaMp || 0);
  };
  var getEquipPower = (equip) => {
    if (!equip)
      return 0;
    return (equip.power || 0) + (equip.jinglianPower || 0) + (equip.qianghuaPower || 0);
  };
  var getEquipKillValue = (equip) => {
    if (!equip)
      return 0;
    return (equip.killValue || 0) + (equip.qianghuaKillValue || 0);
  };
  var getEquipLuckyValue = (equip) => {
    if (!equip)
      return 0;
    return (equip.luckyValue || 0) + (equip.qianghuaLuckyValue || 0);
  };
  var getFenjieResult = (goodsInfo) => {
    if (!goodsInfo || !goodsInfo.stoneType)
      return "无法获得任何物品";
    let qutity = goodsInfo.stoneType % 10;
    switch (qutity) {
      case 1:
        return "无法获得任何物品";
      case 2:
        return "将获得一块普通幻石";
      case 3:
        return "将获得12-18块普通幻石";
      case 4:
        return "将获得12-18块精致幻石";
      case 5:
        return "将获得12-18块卓越幻石";
    }
    return "无法获得任何物品";
  };
  var getUrlImg = (img) => {
    return ServiceIp + img;
  };

  // src/util/GameData.ts
  var DeviceWidth = Laya.Browser.width > Laya.Browser.height ? getFixed(Laya.Browser.width) : getFixed(Laya.Browser.height);
  var DeviceHeight = Laya.Browser.width > Laya.Browser.height ? getFixed(Laya.Browser.height) : getFixed(Laya.Browser.width);
  var PixelRatio = getFixed(Laya.Browser.pixelRatio);
  var MapWidth = getFixed(640 * PixelRatio);
  var MapHeight = getFixed(596 * PixelRatio);
  var GridWidth = getFixed(40 * PixelRatio);
  var GridHeight = getFixed(40 * PixelRatio);
  var MapMarginTop = getFixed(36 * PixelRatio);
  var ScaleRate = getFixed(DeviceHeight / MapHeight);
  var BASE_SPEED = getFixed(GridWidth * 3 * 1.3 / 5);
  console.log("device width:" + DeviceWidth);
  console.log("device height" + DeviceHeight);
  console.log("pixelRatio:" + PixelRatio);
  console.log("mapHeight:" + MapHeight);
  console.log("scaleRate:", ScaleRate);
  console.log("Gridwidth:", GridWidth);
  var AllowOffset = 0;
  console.log("AllowOffset:" + AllowOffset);
  var THRESHOLD = getFixed(15 * PixelRatio);
  var BgRate = getFixed(DeviceHeight * (800 / 600) / 800);
  console.log("bgRate:", BgRate);
  var GameRows = 14;
  var GameCols = 16;
  var ServiceIp = "http://www.crazystone.top/crazystone/";
  var OtherWidth = +((DeviceWidth - DeviceHeight * (MapWidth / MapHeight)) / 2).toFixed(2);
  var GameWidth = DeviceWidth - OtherWidth * 2;
  var RowToYMap = [];
  var ColToXMap = [];
  var AllStoneOffsetY = 12 * PixelRatio;
  for (let i = -2; i < GameCols; i++) {
    let { x, y } = gridToAxis(i, i);
    RowToYMap[i] = y;
    ColToXMap[i] = x;
  }
  var GameConfig = {
    startMusic: 1
  };

  // src/util/common/Common.ts
  var isDebugger = getUrlParams(location.href).isDebugger ? true : false;
  var version = "1.144";
  var MaxZOrder = 99999;
  var OneFrameTime = 66;
  var StoneOffsetY = -12 * PixelRatio;
  var MapIdToName = {
    "1": "xiaoguocun",
    "2": "changancheng",
    "3": "luanshilin",
    "4": "liushahe",
    "5": "wanfudong",
    "6": "cuizhulin",
    "7": "binglingcheng",
    "8": "huoyandong",
    "11": "qingguan",
    "21": "xiaoguocun-huan",
    "22": "changancheng-huan",
    "23": "luanshilin-huan",
    "24": "liushahe-huan",
    "25": "wanfudong-huan",
    "26": "cuizhulin-huan",
    "27": "binglingcheng-huan",
    "28": "huoyandong-huan",
    "99": "wujinshilian"
  };
  var BoxType = /* @__PURE__ */ ((BoxType3) => {
    BoxType3[BoxType3["obstacle"] = -1] = "obstacle";
    BoxType3[BoxType3["fire"] = 100] = "fire";
    BoxType3[BoxType3["ice"] = 101] = "ice";
    BoxType3[BoxType3["baoxiang"] = 102] = "baoxiang";
    BoxType3[BoxType3["xiaoguocun1"] = 110] = "xiaoguocun1";
    BoxType3[BoxType3["xiaoguocun2"] = 111] = "xiaoguocun2";
    BoxType3[BoxType3["xiaoguocun3"] = 112] = "xiaoguocun3";
    BoxType3[BoxType3["changancheng1"] = 201] = "changancheng1";
    BoxType3[BoxType3["changancheng2"] = 202] = "changancheng2";
    BoxType3[BoxType3["luanshilin1"] = 301] = "luanshilin1";
    BoxType3[BoxType3["luanshilin2"] = 302] = "luanshilin2";
    BoxType3[BoxType3["luanshilin3"] = 303] = "luanshilin3";
    BoxType3[BoxType3["luanshilin4"] = 304] = "luanshilin4";
    BoxType3[BoxType3["wanfu1"] = 501] = "wanfu1";
    BoxType3[BoxType3["bingling1"] = 701] = "bingling1";
    BoxType3[BoxType3["qingguan1"] = 999] = "qingguan1";
    BoxType3[BoxType3["qingguan2"] = 998] = "qingguan2";
    BoxType3[BoxType3["huoyan"] = -100] = "huoyan";
    return BoxType3;
  })(BoxType || {});
  var BoxNoRefreshMap = {
    102: 1
    // 宝箱
  };
  var GoodsTypeMap = {
    1: "xigua",
    2: "baozi",
    3: "apple"
  };
  var guanqiaType = {
    monster: "monster",
    linghun: "linghun",
    pickup: "pickup"
  };
  var TeamColor = [
    "",
    "#F848A8",
    "#F87038",
    "#F8C020",
    "#40FC38",
    "#0080FF",
    "#A034F8"
  ];
  var DirectionMap = {
    1: "left",
    2: "right",
    3: "up",
    4: "down"
  };
  var PlayerStatusMap = {
    0: "空闲",
    1: "房间中",
    2: "游戏中"
  };
  var RoleJobName = {
    [0 /* SHENGNV */]: "shengnv",
    [1 /* NVXIA */]: "nvxia",
    [2 /* HEIHUO */]: "heihuo",
    [3 /* JIANKE */]: "jianke"
  };
  var jinglianMap = {
    0: {
      rate: [1, 1, 1, 1],
      exp: [12, 90, 435, 2503, 6041, 19897, 65895, 111255, 368400],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    1: {
      rate: [0.9, 0.95, 1, 1],
      exp: [14, 108, 522, 2878, 6241, 28456, 67084, 117465, 580065],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    2: {
      rate: [0.8, 0.86, 0.91, 0.97],
      exp: [17, 130, 627, 3210, 6477, 32227, 69934, 119986, 804345],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    3: {
      rate: [0.7, 0.77, 0.85, 0.93],
      exp: [20, 156, 752, 3507, 6811, 33489, 70558, 120679, 1107888],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    4: {
      rate: [0.6, 0.7, 0.8, 0.89],
      exp: [24, 187, 903, 3858, 7287, 35732, 73774, 134476, 1477823],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    5: {
      rate: [0.5, 0.62, 0.74, 0.85],
      exp: [28, 225, 1083, 4171, 8051, 38965, 78125, 148890, 1921988],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    6: {
      rate: [0.4, 0.55, 0.68, 0.81],
      exp: [34, 286, 1360, 4681, 9543, 43652, 86946, 167763, 2448557],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    7: {
      rate: [0.3, 0.46, 0.62, 0.77],
      exp: [39, 329, 1572, 5079, 10519, 45916, 88376, 180022, 3066472],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    },
    8: {
      rate: [0.2, 0.38, 0.55, 0.73],
      exp: [45, 378, 1847, 5540, 13953, 51252, 95653, 218515, 3783264],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 1, 2, 2, 3, 4, 4, 5, 7],
          pingfen: [1, 1, 2, 2, 3, 4, 4, 5, 7]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 1, 2, 2, 2, 3],
          pingfen: [5, 5, 5, 5, 5, 10, 10, 10, 15]
        }
      }
    }
  };
  var gaojingMap = {
    0: {
      rate: [1, 1, 1, 1],
      exp: [206, 1564, 9032, 30104, 66431, 304823, 751048, 1304275, 7013548],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    1: {
      rate: [0.8, 0.86, 0.91, 0.97],
      exp: [226, 1664, 10032, 32104, 68431, 315885, 763055, 1594915, 7582002],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    2: {
      rate: [0.8, 0.86, 0.91, 0.97],
      exp: [246, 1764, 11032, 35104, 70431, 323856, 777124, 1752845, 7911654],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    3: {
      rate: [0.7, 0.77, 0.85, 0.93],
      exp: [266, 1864, 12032, 38104, 70431, 357311, 788936, 1932441, 8241307],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    4: {
      rate: [0.6, 0.7, 0.8, 0.89],
      exp: [286, 1964, 13032, 41104, 85431, 371337, 801740, 2132146, 8570959],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    5: {
      rate: [0.5, 0.62, 0.74, 0.85],
      exp: [306, 2064, 14032, 43104, 95431, 393229, 822641, 2341849, 8900611],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    6: {
      rate: [0.4, 0.55, 0.68, 0.81],
      exp: [326, 2164, 15032, 45104, 105431, 417583, 844596, 2519815, 9230263],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    7: {
      rate: [0.3, 0.46, 0.62, 0.77],
      exp: [346, 2264, 16032, 47104, 115431, 431388, 867321, 2739635, 9559916],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    },
    8: {
      rate: [0.2, 0.38, 0.55, 0.73],
      exp: [366, 2364, 17032, 49104, 125431, 458945, 889384, 2918644, 9889568],
      props: {
        "head": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "body": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "wing": {
          key: "jinglianHp",
          value: [1, 2, 3, 3, 4, 4, 5, 7, 8],
          pingfen: [1, 2, 3, 3, 4, 4, 5, 7, 8]
        },
        "hand": {
          key: "jinglianPower",
          value: [1, 1, 1, 1, 2, 2, 2, 3, 4],
          pingfen: [5, 5, 5, 5, 10, 10, 10, 15, 20]
        }
      }
    }
  };
  var GateServerIp = "47.97.17.96";
  var GateServerPort = 3014;

  // src/runtime/CreateRoleScene.generated.ts
  var CreateRoleSceneBase = class extends Laya.Scene {
  };

  // src/util/request.ts
  var request = (route, param, cb) => {
    let pomelo = window.pomelo;
    return pomelo.request(route, param, (res) => {
      cb && cb(res);
    });
  };

  // src/util/fsm/state.ts
  var State = class {
    constructor(stateName, fsm, path = "", loop = false, interval = 100, force = false, x = 0, y = 0) {
      this.stateName = stateName;
      this.fsm = fsm;
      this.path = path;
      this.loop = loop;
      this.interval = interval;
      this.force = force;
      this.x = x;
      this.y = y;
      this.ani = new Laya.Animation();
      this.ani.source = this.path;
      this.ani.loop = loop;
      this.ani.name = stateName;
      this.ani.interval = this.interval;
      this.ani.scale(PixelRatio, PixelRatio);
      if (this.x) {
        this.ani.x = this.x;
      }
      if (this.y) {
        this.ani.y = this.y;
      }
    }
    enter() {
    }
    exit() {
    }
    run() {
      if (!this.path) {
        return;
      }
      if (this.fsm.removeCB) {
        this.fsm.removeCB.bind(this.fsm.owner)();
      } else {
        this.fsm.owner.removeChildren();
      }
      this.fsm.owner.addChild(this.ani);
      this.ani.play(0, this.loop);
      if (this.fsm.completeCb) {
        this.ani.once(Laya.Event.COMPLETE, this, () => {
          this.fsm.completeCb.bind(this.fsm.owner)(this.stateName);
        });
      }
    }
  };

  // src/util/fsm/StateMachine.ts
  var getInitParamsTrigger = () => {
    return {
      type: "Trigger" /* Trigger */,
      value: false
    };
  };
  var StateMachine = class extends Laya.Component {
    constructor() {
      super(...arguments);
      this._currentState = null;
      this.params = /* @__PURE__ */ new Map();
      this.stateMachines = /* @__PURE__ */ new Map();
      this.direction = 4 /* DOWN */;
    }
    getParams(paramName) {
      if (this.params.has(paramName)) {
        return this.params.get(paramName).value;
      }
    }
    setCompleteCB(cb) {
      this.completeCb = cb;
    }
    setRemoveCB(cb) {
      this.removeCB = cb;
    }
    setParams(paramName, value) {
      if (this.params.has(paramName)) {
        this.currentStateName = paramName;
        this.params.get(paramName).value = value;
        this.run();
        this.resetTrigger();
      }
    }
    setSubParams(paramName, value) {
    }
    get currentState() {
      return this._currentState;
    }
    set currentState(newState) {
      if (!newState || this._currentState === newState) {
        return;
      }
      this._currentState = newState;
      this._currentState.run();
    }
    resetTrigger() {
      for (const [, value] of this.params) {
        if (value.type === "Trigger" /* Trigger */) {
          value.value = false;
        }
      }
    }
  };

  // src/util/fsm/SubStateMachine.ts
  var SubStateMachine = class {
    constructor(fsm) {
      this.fsm = fsm;
      this._currentState = null;
      this.params = /* @__PURE__ */ new Map();
      this.stateMachines = /* @__PURE__ */ new Map();
    }
    getParams(paramName) {
      if (this.params.has(paramName)) {
        return this.params.get(paramName).value;
      }
    }
    setParams(paramName, value) {
      if (this.params.has(paramName)) {
        this.params.get(paramName).value = value;
        this.run();
        this.resetTrigger();
      }
    }
    resetTrigger() {
      for (const [, value] of this.params) {
        if (value.type === "Trigger" /* Trigger */) {
          value.value = false;
        }
      }
    }
    get currentState() {
      return this._currentState;
    }
    set currentState(newState) {
      if (!newState) {
        return;
      }
      this._currentState = newState;
      this._currentState.run();
    }
  };

  // src/util/fsm/DirectionStateMachine.ts
  var DirectionStateMachine = class extends SubStateMachine {
    constructor(stateName, fsm, path, loop = false, interval = 100, force = false) {
      super(fsm);
      this.initParams();
      this.stateMachines.set(DirectionMap[1 /* LEFT */], new State(stateName, fsm, `${path}-${DirectionMap[1 /* LEFT */]}.atlas`, loop, interval, force));
      this.stateMachines.set(DirectionMap[2 /* RIGHT */], new State(stateName, fsm, `${path}-${DirectionMap[2 /* RIGHT */]}.atlas`, loop, interval, force));
      this.stateMachines.set(DirectionMap[3 /* UP */], new State(stateName, fsm, `${path}-${DirectionMap[3 /* UP */]}.atlas`, loop, interval, force));
      this.stateMachines.set(DirectionMap[4 /* DOWN */], new State(stateName, fsm, `${path}-${DirectionMap[4 /* DOWN */]}.atlas`, loop, interval, force));
    }
    initParams() {
      this.params.set(DirectionMap[1 /* LEFT */], getInitParamsTrigger());
      this.params.set(DirectionMap[2 /* RIGHT */], getInitParamsTrigger());
      this.params.set(DirectionMap[3 /* UP */], getInitParamsTrigger());
      this.params.set(DirectionMap[4 /* DOWN */], getInitParamsTrigger());
    }
    run() {
      this.currentState = this.stateMachines.get(DirectionMap[this.fsm.direction]);
    }
  };

  // src/entity/Entity.ts
  var Entity = class extends Laya.Sprite {
    get state() {
      return this._state;
    }
    set state(newState) {
      this._state = newState;
      if (!this.fsm)
        return;
      this.fsm.setParams(newState, true);
    }
    get direction() {
      return this._direction;
    }
    set direction(newDirection) {
      this._direction = newDirection;
      if (!this.fsm)
        return;
      this.fsm.direction = newDirection;
      let subfsm = this.fsm.stateMachines.get(this._state);
      if (subfsm && subfsm instanceof DirectionStateMachine) {
        subfsm.setParams(DirectionMap[newDirection], true);
      }
    }
  };

  // src/entity/equip/EquipStateMachine.ts
  var DeadDoubleEquipIdMap = {
    "jianke-businiaozhichi": 1,
    "jianke-yeguangbeichi": 1,
    "heihuo-huoyanchi": 1,
    "shengnv-yicaidiechi": 1,
    "nvxia-rongxiuyuyi": 1
  };
  var EquipStateMachine = class extends StateMachine {
    init(owner, info) {
      this.owner = owner;
      this.info = info;
      this.initParams();
      this.initStateMachines();
    }
    initParams() {
      this.params.set("default" /* default */, getInitParamsTrigger());
      this.params.set("move" /* move */, getInitParamsTrigger());
      this.params.set("push" /* push */, getInitParamsTrigger());
      this.params.set("hurt" /* hurt */, getInitParamsTrigger());
      this.params.set("dead" /* dead */, getInitParamsTrigger());
    }
    initStateMachines() {
      this.stateMachines.set("default" /* default */, new DirectionStateMachine("default" /* default */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.name}-default`, true, 160));
      this.stateMachines.set("move" /* move */, new DirectionStateMachine("move" /* move */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.name}-move`, true, 120));
      this.stateMachines.set("push" /* push */, new DirectionStateMachine("push" /* push */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.name}-push`, false, 40, true));
      this.stateMachines.set("hurt" /* hurt */, new DirectionStateMachine("hurt" /* hurt */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.name}-hurt`, false, 40, true));
      if (this.info.parentName && DeadDoubleEquipIdMap[this.info.parentName]) {
        this.stateMachines.set("dead" /* dead */, new State("dead" /* dead */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.name}-dead.atlas`, false, 160, true));
      } else {
        this.stateMachines.set("dead" /* dead */, new State("dead" /* dead */, this, `${ServiceIp}images/equip/${this.info.parentName || this.info.name}/${this.info.parentName || this.info.name}-dead.atlas`, false, 160, true));
      }
    }
    run() {
      if (!this.currentState) {
        this.currentState = this.stateMachines.get("default" /* default */);
        return;
      }
      switch (this.currentState) {
        case this.stateMachines.get("default" /* default */):
          if (this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.params.get("push" /* push */).value) {
            this.currentState = this.stateMachines.get("push" /* push */);
          } else if (this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("move" /* move */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.params.get("push" /* push */).value) {
            this.currentState = this.stateMachines.get("push" /* push */);
          } else if (this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("push" /* push */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          }
          if (this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("hurt" /* hurt */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("dead" /* dead */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          }
          break;
      }
    }
  };

  // src/entity/equip/Equip.ts
  var { regClass } = Laya;
  var Equip = class extends Entity {
    constructor(id, info) {
      super();
      // public ani = new Laya.Animation()
      this.playing = false;
      this.id = id;
      this.info = info;
      if (!this.info)
        return;
      this.fsm = new EquipStateMachine();
      this.fsm.init(this, this.info);
      this.setAction("default" /* default */);
    }
    initFsmCB() {
      this.fsm.setCompleteCB(this.stateAniEnd);
    }
    stateAniEnd(state) {
      if (state !== "dead" /* dead */ && state !== "default" /* default */) {
        let role = this.parent;
        role && role.setStateDefault();
      } else if (state === "dead" /* dead */) {
        let role = this.parent;
        role.deadStop();
      }
    }
    // createFrames () {
    //     // 静止
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-default-up.atlas`, `${this.name}-default-up`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-default-down.atlas`, `${this.name}-default-down`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-default-right.atlas`, `${this.name}-default-right`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-default-left.atlas`, `${this.name}-default-left`)
    //     // 行走
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-move-up.atlas`, `${this.name}-move-up`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-move-down.atlas`, `${this.name}-move-down`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-move-right.atlas`, `${this.name}-move-right`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-move-left.atlas`, `${this.name}-move-left`)
    //     // 推
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-push-up.atlas`, `${this.name}-push-up`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-push-down.atlas`, `${this.name}-push-down`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-push-right.atlas`, `${this.name}-push-right`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-push-left.atlas`, `${this.name}-push-left`)
    //     // 受伤
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-hurt-up.atlas`, `${this.name}-hurt-up`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-hurt-down.atlas`, `${this.name}-hurt-down`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-hurt-right.atlas`, `${this.name}-hurt-right`)
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-hurt-left.atlas`, `${this.name}-hurt-left`)
    //     // 死亡
    //     Laya.Animation.createFrames(`${ServiceIp}images/equip/${this.name}/${this.name}-dead.atlas`, `${this.name}-dead`)
    // }
    setDirection(direction) {
      if (this.direction === direction)
        return;
      this.direction = direction;
    }
    setAction(action, loop) {
      if (this.state === action)
        return;
      if (!this.info)
        return;
      let x = this.info[`${action}x`];
      if (x) {
        this.x = x;
      }
      let y = this.info[`${action}y`];
      if (y) {
        this.y = y;
      }
      this.state = action;
    }
  };
  Equip = __decorateClass([
    regClass("rxYwH1p_RdW2d9qIijbWsQ")
  ], Equip);

  // src/runtime/GameScene.generated.ts
  var GameSceneBase = class extends Laya.Scene {
  };

  // src/global/EventManager.ts
  var EventManager = class _EventManager {
    constructor() {
      this.map = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _EventManager();
      }
      return this.instance;
    }
    on(event, cb, ctx) {
      if (this.map.has(event)) {
        this.map.get(event).push({ cb, ctx });
      } else {
        this.map.set(event, [{ cb, ctx }]);
      }
    }
    off(event, cb, ctx) {
      if (this.map.has(event)) {
        const index = this.map.get(event).findIndex((i) => cb === i.cb && i.ctx === ctx);
        index > -1 && this.map.get(event).splice(index, 1);
      }
    }
    emit(event, ...params) {
      if (this.map.has(event)) {
        this.map.get(event).forEach(({ cb, ctx }) => {
          cb.apply(ctx, params);
        });
      }
    }
    clear() {
      this.map.clear();
    }
  };

  // src/util/res/img.ts
  var roomBgUrl = `${ServiceIp}images/room/bg1.2`;
  var roomBtnUrl = `${ServiceIp}images/room/btn1.0`;
  var goodsBagUrl = `${ServiceIp}images/goods/bag1.4`;
  var goodsDefaultUrl = `${ServiceIp}images/goods/default1.4`;
  var myUiUrl = `${ServiceIp}images/ui/my-ui1.2`;
  var collectUrl = `${ServiceIp}images/goods/collect1.0`;
  var coverUrl = `${ServiceIp}images/map/cover1.1`;
  var stoneUrl = `${ServiceIp}images/map/stone1.0`;

  // src/util/common/Goods.ts
  var QutityColor = {
    [1 /* Normal */]: "white",
    [2 /* Jingzhi */]: "#fd114d",
    [3 /* Zhuoyue */]: "blue",
    [4 /* Feifan */]: "#4cfa09",
    [5 /* Wanmei */]: "yellow"
  };
  var EquipNeedGoodsMap = {
    "head10": [
      { type: 6001, count: 1 },
      { type: 6003, count: 1 }
    ],
    "head20": [
      { type: 6001, count: 3 },
      { type: 6003, count: 3 }
    ],
    "head30": [
      { type: 6001, count: 5 },
      { type: 6003, count: 5 }
    ],
    "head40": [
      { type: 6001, count: 7 },
      { type: 6003, count: 7 }
    ],
    "head50": [
      { type: 6001, count: 9 },
      { type: 6003, count: 9 },
      { type: 6008, count: 1 }
    ],
    "head60": [
      { type: 6001, count: 11 },
      { type: 6003, count: 11 },
      { type: 6008, count: 2 }
    ],
    "head70": [
      { type: 6001, count: 13 },
      { type: 6003, count: 13 },
      { type: 6008, count: 3 }
    ],
    "head80": [
      { type: 6001, count: 15 },
      { type: 6003, count: 15 },
      { type: 6008, count: 4 }
    ],
    "wing10": [
      { type: 6003, count: 1 },
      { type: 6002, count: 1 }
    ],
    "wing20": [
      { type: 6003, count: 3 },
      { type: 6002, count: 3 }
    ],
    "wing30": [
      { type: 6003, count: 5 },
      { type: 6002, count: 5 }
    ],
    "wing40": [
      { type: 6003, count: 7 },
      { type: 6002, count: 7 }
    ],
    "wing50": [
      { type: 6003, count: 9 },
      { type: 6002, count: 9 },
      { type: 6007, count: 1 }
    ],
    "wing60": [
      { type: 6003, count: 11 },
      { type: 6002, count: 11 },
      { type: 6007, count: 2 }
    ],
    "wing70": [
      { type: 6003, count: 13 },
      { type: 6002, count: 13 },
      { type: 6007, count: 3 }
    ],
    "wing80": [
      { type: 6003, count: 15 },
      { type: 6002, count: 15 },
      { type: 6007, count: 4 }
    ],
    "body10": [
      { type: 6001, count: 1 },
      { type: 6004, count: 1 }
    ],
    "body20": [
      { type: 6001, count: 3 },
      { type: 6004, count: 3 }
    ],
    "body30": [
      { type: 6001, count: 5 },
      { type: 6004, count: 5 }
    ],
    "body40": [
      { type: 6001, count: 7 },
      { type: 6004, count: 7 }
    ],
    "body50": [
      { type: 6001, count: 9 },
      { type: 6004, count: 9 },
      { type: 6006, count: 1 }
    ],
    "body60": [
      { type: 6001, count: 11 },
      { type: 6004, count: 11 },
      { type: 6006, count: 2 }
    ],
    "body70": [
      { type: 6001, count: 13 },
      { type: 6004, count: 13 },
      { type: 6006, count: 3 }
    ],
    "body80": [
      { type: 6001, count: 15 },
      { type: 6004, count: 15 },
      { type: 6006, count: 4 }
    ],
    "hand10": [
      { type: 6002, count: 1 },
      { type: 6004, count: 1 }
    ],
    "hand20": [
      { type: 6002, count: 3 },
      { type: 6004, count: 3 }
    ],
    "hand30": [
      { type: 6002, count: 5 },
      { type: 6004, count: 5 }
    ],
    "hand40": [
      { type: 6002, count: 7 },
      { type: 6004, count: 7 }
    ],
    "hand50": [
      { type: 6002, count: 9 },
      { type: 6004, count: 9 },
      { type: 6005, count: 1 }
    ],
    "hand60": [
      { type: 6002, count: 11 },
      { type: 6004, count: 11 },
      { type: 6005, count: 2 }
    ],
    "hand70": [
      { type: 6002, count: 13 },
      { type: 6004, count: 13 },
      { type: 6005, count: 3 }
    ],
    "hand80": [
      { type: 6002, count: 15 },
      { type: 6004, count: 15 },
      { type: 6005, count: 4 }
    ]
  };
  var GoodsInfo = {
    // 1-100：经验、金币、元宝等
    1: {
      type: 1,
      img: `${goodsDefaultUrl}/jingyandou.png`
    },
    4: {
      type: 4,
      img: `${goodsDefaultUrl}/yinyuanbao.png`
    },
    5: {
      type: 5,
      img: `${goodsDefaultUrl}/jinyuanbao.png`
    },
    6: {
      type: 6,
      img: `${goodsDefaultUrl}/power.png`
    },
    7: {
      type: 7,
      img: `${goodsDefaultUrl}/speed.png`
    },
    8: {
      type: 8,
      img: `${goodsDefaultUrl}/blood-little.png`
    },
    9: {
      type: 9,
      img: `${goodsDefaultUrl}/blood-big.png`
    },
    10: {
      type: 10,
      img: `${goodsDefaultUrl}/lingli.png`
    },
    30: {
      name: "50点卡",
      type: 30,
      typeDesc: "点卡",
      qutity: 1 /* Normal */,
      desc: "使用后获得5000游戏币，也可以用来交易。",
      img: `${goodsBagUrl}/dianka-50.png`,
      bgImg: `${goodsBagUrl}/dianka-50.png`
    },
    31: {
      name: "100点卡",
      type: 31,
      typeDesc: "点卡",
      qutity: 1 /* Normal */,
      desc: "使用后获得10000游戏币，也可以用来交易。",
      img: `${goodsBagUrl}/dianka-100.png`,
      bgImg: `${goodsBagUrl}/dianka-100.png`
    },
    32: {
      name: "200点卡",
      type: 32,
      typeDesc: "点卡",
      qutity: 1 /* Normal */,
      desc: "使用后获得20000游戏币，也可以用来交易。",
      img: `${goodsBagUrl}/dianka-200.png`,
      bgImg: `${goodsBagUrl}/dianka-200.png`
    },
    33: {
      name: "500点卡",
      type: 33,
      typeDesc: "点卡",
      qutity: 1 /* Normal */,
      desc: "使用后获得50000游戏币，也可以用来交易。",
      img: `${goodsBagUrl}/dianka-500.png`,
      bgImg: `${goodsBagUrl}/dianka-500.png`
    },
    // 100-3000, 100-500套装等特殊装备，500-800面饰、800-1000配件、1000-1500头（圣女、女侠、黑火、剑客、通用按顺序各100）、1500-2000翅膀、2000-2500衣服、2500-3000手套
    801: {
      name: "铜戒指",
      type: 801,
      typeDesc: "配件",
      qutity: 1 /* Normal */,
      desc: "这是一枚纪念结婚的铜戒指，具有神奇的力量。",
      img: `${goodsBagUrl}/equip-tongjiezhi.png`,
      bgImg: `${goodsBagUrl}/equip-tongjiezhi.png`,
      part: "peijian",
      power: 2
    },
    802: {
      name: "银戒指",
      type: 802,
      typeDesc: "配件",
      qutity: 3 /* Zhuoyue */,
      desc: "这是一枚纪念结婚的银戒指，具有神奇的力量。",
      img: `${goodsBagUrl}/equip-yinjiezhi.png`,
      bgImg: `${goodsBagUrl}/equip-yinjiezhi.png`,
      part: "peijian",
      level: 1,
      limit: "通用" /* General */,
      power: 4
    },
    803: {
      name: "金戒指",
      type: 803,
      typeDesc: "配件",
      qutity: 4 /* Feifan */,
      desc: "这是一枚纪念结婚的金戒指，具有神奇的力量。",
      img: `${goodsBagUrl}/equip-jinjiezhi.png`,
      bgImg: `${goodsBagUrl}/equip-jinjiezhi.png`,
      part: "peijian",
      level: 1,
      limit: "通用" /* General */,
      power: 6
    },
    804: {
      name: "钻石戒指",
      type: 804,
      typeDesc: "配件",
      qutity: 5 /* Wanmei */,
      desc: "这是一枚纪念结婚的钻石戒指，具有神奇的力量。",
      img: `${goodsBagUrl}/equip-zuanshijiezhi.png`,
      bgImg: `${goodsBagUrl}/equip-zuanshijiezhi.png`,
      part: "peijian",
      level: 1,
      limit: "通用" /* General */,
      power: 8
    },
    1001: {
      name: "闪闪小灯笼",
      type: 1001,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "一闪一闪小灯笼。",
      img: `${goodsBagUrl}/equip-shanshanxiaodenglong.png`,
      bgImg: `${goodsBagUrl}/equip-shanshanxiaodenglong.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "wing"
    },
    1002: {
      name: "闪闪小灯笼",
      type: 1002,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "一闪一闪小灯笼。",
      img: `${goodsBagUrl}/equip-shanshanxiaodenglong.png`,
      bgImg: `${goodsBagUrl}/equip-shanshanxiaodenglong.png`,
      level: 1,
      limit: "通用" /* General */,
      autoXiangQian: true,
      stoneType: 5185,
      part: "wing"
    },
    // 头
    1050: {
      name: "冰晶冷月",
      type: 1050,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "以大块冰晶雕琢成圣石作为头饰，是圣女的象征。",
      img: `${goodsBagUrl}/equip-shengnv-bingjinglengyue.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-bingjinglengyue.png`,
      level: 50,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "head"
    },
    1070: {
      name: "凤凰羽饰",
      type: 1070,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "生长于冰原地区稀有凤凰，头上有一枝黄色羽毛，以此制作的头饰相当华贵。",
      img: `${goodsBagUrl}/equip-shengnv-fenghuangyushi.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-fenghuangyushi.png`,
      level: 70,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "head"
    },
    1080: {
      name: "流光冰饰",
      type: 1080,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "难得异域寒冰，雕琢的如此精致细腻，处处流光溢彩。",
      img: `${goodsBagUrl}/equip-liuguangbingshi.png`,
      bgImg: `${goodsBagUrl}/equip-liuguangbingshi.png`,
      level: 80,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "head"
    },
    1150: {
      name: "霓虹缨络",
      type: 1150,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "以红霞色莲花和丝线编织成的头部装饰，体现少女的清雅。",
      img: `${goodsBagUrl}/equip-nvxia-nihongyingluo.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-nihongyingluo.png`,
      level: 50,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "head"
    },
    1170: {
      name: "金莲",
      type: 1170,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "纯金打造的头饰，一般为皇族方可佩戴。",
      img: `${goodsBagUrl}/equip-nvxia-jinlian.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-jinlian.png`,
      level: 70,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "head"
    },
    1180: {
      name: "容绣裘冠",
      type: 1180,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "华丽丽的头饰，周围有松软的裘绒丝丝飘动。",
      img: `${goodsBagUrl}/equip-rongxiuqiuguan.png`,
      bgImg: `${goodsBagUrl}/equip-rongxiuqiuguan.png`,
      level: 80,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "head"
    },
    1250: {
      name: "紫金角盔",
      type: 1250,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "据说是火神打造的角盔，在神界的大战役中，留落人间，虽然残缺，但非一般凡品能比拟。",
      img: `${goodsBagUrl}/equip-heihuo-zijinjiaokui.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-zijinjiaokui.png`,
      level: 50,
      limit: "黑火之子专用" /* Heihuo */,
      part: "head"
    },
    1270: {
      name: "红龙盔",
      type: 1270,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "晶石为龙眼珠化石碎片，存有龙的力量，把它镶嵌在头盔上，能得到龙的力量。",
      img: `${goodsBagUrl}/equip-heihuo-honglongkui.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-honglongkui.png`,
      level: 70,
      limit: "黑火之子专用" /* Heihuo */,
      part: "head"
    },
    1280: {
      name: "赤羽怒顶",
      type: 1280,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "冲天的火羽仿佛是一种警告，神圣而不可侵犯。",
      img: `${goodsBagUrl}/equip-chiyunuding.png`,
      bgImg: `${goodsBagUrl}/equip-chiyunuding.png`,
      level: 80,
      limit: "黑火之子专用" /* Heihuo */,
      part: "head"
    },
    1350: {
      name: "黄金蟠龙盔",
      type: 1350,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "黄金铸造的头盔，盔上有蟠龙吞月的图案，戴上去威武不凡。",
      img: `${goodsBagUrl}/equip-jianke-huangjinpanlongkui.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-huangjinpanlongkui.png`,
      level: 50,
      limit: "少年剑客专用" /* Jianke */,
      part: "head"
    },
    1370: {
      name: "不死鸟之盔",
      type: 1370,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "白金打造的头盔，上面附有不死鸟的灵魂。",
      img: `${goodsBagUrl}/equip-jianke-businiaozhikui.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-businiaozhikui.png`,
      level: 70,
      limit: "少年剑客专用" /* Jianke */,
      part: "head"
    },
    1380: {
      name: "夜映星盔",
      type: 1380,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "黑暗中散发着冷冷的光，犹如星辰。",
      img: `${goodsBagUrl}/equip-yeyingxingkui.png`,
      bgImg: `${goodsBagUrl}/equip-yeyingxingkui.png`,
      level: 80,
      limit: "少年剑客专用" /* Jianke */,
      part: "head"
    },
    1401: {
      name: "小鸡头饰",
      type: 1401,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "极为稀有的头饰，只有内测玩家才可能得到。",
      img: `${goodsBagUrl}/equip-xiaojitoushi.png`,
      bgImg: `${goodsBagUrl}/equip-xiaojitoushi.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "head"
    },
    1402: {
      name: "天使光环",
      type: 1402,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "暂无描述。",
      img: `${goodsDefaultUrl}/equip-tianshiguanghuan.png`,
      bgImg: `${goodsBagUrl}/equip-tianshiguanghuan.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "head"
    },
    1403: {
      name: "布老虎头套",
      type: 1403,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "民族气息很浓的布老虎头套，做工很好，很漂亮",
      img: `${goodsDefaultUrl}/equip-bulaohutou.png`,
      bgImg: `${goodsBagUrl}/equip-bulaohutou.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "head"
    },
    1405: {
      name: "螃蟹帽",
      type: 1405,
      typeDesc: "头饰",
      qutity: 1 /* Normal */,
      desc: "去海边戴这个帽子，绝对拉风。",
      img: `${goodsDefaultUrl}/equip-pangxiemao.png`,
      bgImg: `${goodsBagUrl}/equip-pangxiemao.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "head"
    },
    // 翅膀 1500-2000翅膀
    1550: {
      name: "冰晶落霞",
      type: 1550,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "晚霞色的丝带，上挂冰晶小珠，闪闪生光如银河飘带。",
      img: `${goodsBagUrl}/equip-shengnv-bingjingluoxia.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-bingjingluoxia.png`,
      level: 50,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "wing"
    },
    1570: {
      name: "凤翼天翔",
      type: 1570,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "冰蓝色的翅膀，是冰原凤凰的特征，以之制作的背饰，让穿戴者有空中飞翔的感觉。",
      img: `${goodsBagUrl}/equip-shengnv-fengyitianxiang.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-fengyitianxiang.png`,
      level: 70,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "wing",
      double: true
    },
    1580: {
      name: "溢彩蝶翅",
      type: 1580,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "彩翅闪着流动的光，她就是幻境中的仙。",
      img: `${goodsBagUrl}/equip-yicaidiechi.png`,
      bgImg: `${goodsBagUrl}/equip-yicaidiechi.png`,
      level: 80,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "wing",
      double: true
    },
    1650: {
      name: "圆月弯刀",
      type: 1650,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "漂亮的弯刀，像月牙一样，是女侠的配刀。",
      img: `${goodsBagUrl}/equip-nvxia-yuanyuewandao.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-yuanyuewandao.png`,
      level: 50,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "wing"
    },
    1670: {
      name: "荷叶如意",
      type: 1670,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "荷叶状的金如意，一看便知非凡品，不知是哪朝名匠的作品。",
      img: `${goodsBagUrl}/equip-nvxia-heyeruyi.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-heyeruyi.png`,
      level: 70,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "wing"
    },
    1680: {
      name: "容绣羽翼",
      type: 1680,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "雍容华贵的羽翼，照耀背部灼灼生辉。",
      img: `${goodsBagUrl}/equip-rongxiuyuyi.png`,
      bgImg: `${goodsBagUrl}/equip-rongxiuyuyi.png`,
      level: 80,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "wing",
      double: true
    },
    1750: {
      name: "紫裘披风",
      type: 1750,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "紫裘相当稀有，据说上面留有那神奇生物的灵魂。",
      img: `${goodsBagUrl}/equip-heihuo-ziqiupifeng.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-ziqiupifeng.png`,
      level: 50,
      limit: "黑火之子专用" /* Heihuo */,
      part: "wing"
    },
    1770: {
      name: "龙之翼",
      type: 1770,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "据说是一只幼红龙的留下的翅膀，能随主人意志而扇动，产生暗红的火焰。",
      img: `${goodsBagUrl}/equip-heihuo-longzhiyi.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-longzhiyi.png`,
      level: 70,
      limit: "黑火之子专用" /* Heihuo */,
      part: "wing",
      double: true
    },
    1780: {
      name: "火焰翅",
      type: 1780,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "集合千百年来炼化的火凤凰之羽，是上古圣物。",
      img: `${goodsBagUrl}/equip-huoyanchi.png`,
      bgImg: `${goodsBagUrl}/equip-huoyanchi.png`,
      level: 80,
      limit: "黑火之子专用" /* Heihuo */,
      part: "wing",
      double: true
    },
    1850: {
      name: "黄金偃月刀",
      type: 1850,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "雕金蟠龙双手大刀,有开山碎石之势,能碎金断玉。",
      img: `${goodsBagUrl}/equip-jianke-huangjinyanyuedao.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-huangjinyanyuedao.png`,
      level: 50,
      limit: "少年剑客专用" /* Jianke */,
      part: "wing"
    },
    1870: {
      name: "不死鸟之翅",
      type: 1870,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "以白金和不死鸟羽毛制作而成的背饰，感应使用者的灵力而燃起夺目火光。",
      img: `${goodsBagUrl}/equip-jianke-businiaozhichi.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-businiaozhichi.png`,
      level: 70,
      limit: "少年剑客专用" /* Jianke */,
      part: "wing",
      double: true
    },
    1880: {
      name: "夜光背翅",
      type: 1880,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "紫晶能量爆发，神圣的光芒笼罩四周。",
      img: `${goodsBagUrl}/equip-yeguangbeichi.png`,
      bgImg: `${goodsBagUrl}/equip-yeguangbeichi.png`,
      level: 80,
      limit: "少年剑客专用" /* Jianke */,
      part: "wing",
      double: true
    },
    1901: {
      name: "天使翅",
      type: 1901,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "暂无描述",
      img: `${goodsDefaultUrl}/equip-tianshichi.png`,
      bgImg: `${goodsBagUrl}/equip-tianshichi.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "wing"
    },
    1903: {
      name: "布老虎尾巴",
      type: 1903,
      typeDesc: "背饰",
      qutity: 1 /* Normal */,
      desc: "配对布老虎头饰制作的背饰，很调皮。",
      img: `${goodsDefaultUrl}/equip-bulaohuweiba.png`,
      bgImg: `${goodsBagUrl}/equip-bulaohuweiba.png`,
      level: 1,
      limit: "通用" /* General */,
      part: "wing"
    },
    // 衣服2000-2500衣服、
    2050: {
      name: "冰晶初阳",
      type: 2050,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "以奇妙材质制作的衣服，散发着初升太阳的光芒。",
      img: `${goodsBagUrl}/equip-shengnv-bingjingchuyang.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-bingjingchuyang.png`,
      level: 50,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "body"
    },
    2070: {
      name: "凤凰华衣",
      type: 2070,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "冰原凤凰的绒毛散发着金光，以之制作华衣，高贵，只有是冰灵城皇族方可穿戴。",
      img: `${goodsBagUrl}/equip-shengnv-fenghuanghuayi.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-fenghuanghuayi.png`,
      level: 70,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "body"
    },
    2080: {
      name: "冰芒圣服",
      type: 2080,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "寒冰纯净的光芒洒落，正衬冰凌绝美气质。",
      img: `${goodsBagUrl}/equip-bingmangshengfu.png`,
      bgImg: `${goodsBagUrl}/equip-bingmangshengfu.png`,
      level: 80,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "body"
    },
    2150: {
      name: "霓虹彩衣",
      type: 2150,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "以数种不同颜色的珍稀蚕丝纺织成的女衣，轻盈而美丽。",
      img: `${goodsBagUrl}/equip-nvxia-nihongcaiyi.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-nihongcaiyi.png`,
      level: 50,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "body"
    },
    2170: {
      name: "凤披",
      type: 2170,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "皇族女性的尊贵之衣。",
      img: `${goodsBagUrl}/equip-nvxia-fengpi.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-fengpi.png`,
      level: 70,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "body"
    },
    2180: {
      name: "容绣锦服",
      type: 2180,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "穿着裘绒装饰的锦服，像贵妇一样出巡。",
      img: `${goodsBagUrl}/equip-rongxiujinfu.png`,
      bgImg: `${goodsBagUrl}/equip-rongxiujinfu.png`,
      level: 80,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "body"
    },
    2250: {
      name: "猎人装",
      type: 2250,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "赏金猎人的衣着，简单中隐藏着不为人知的力量。从来没人知道，他腰间包包里装的是什么。",
      img: `${goodsBagUrl}/equip-heihuo-lierenzhuang.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-lierenzhuang.png`,
      level: 50,
      limit: "黑火之子专用" /* Heihuo */,
      part: "body"
    },
    2270: {
      name: "红龙鳞甲",
      type: 2270,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "以红龙的鳞片缝制的鳞甲，刀枪不入。",
      img: `${goodsBagUrl}/equip-heihuo-honglonglinjia.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-honglonglinjia.png`,
      level: 70,
      limit: "黑火之子专用" /* Heihuo */,
      part: "body"
    },
    2280: {
      name: "御殿狂甲",
      type: 2280,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "暗红色的线条，犹如熔岩过隙，汹涌逼人。",
      img: `${goodsBagUrl}/equip-yudiankuangjia.png`,
      bgImg: `${goodsBagUrl}/equip-yudiankuangjia.png`,
      level: 80,
      limit: "黑火之子专用" /* Heihuo */,
      part: "body"
    },
    2350: {
      name: "黄金龙鳞甲",
      type: 2350,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "用金丝与龙鳞编缀而成，穿着者有如战龙在身，勇不可挡。",
      img: `${goodsBagUrl}/equip-jianke-huangjinlonglinjia.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-huangjinlonglinjia.png`,
      level: 50,
      limit: "少年剑客专用" /* Jianke */,
      part: "body"
    },
    2370: {
      name: "不死鸟之甲",
      type: 2370,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "白金打造的铠甲，以不死鸟之血绘制图案。",
      img: `${goodsBagUrl}/equip-jianke-businiaozhijia.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-businiaozhijia.png`,
      level: 70,
      limit: "少年剑客专用" /* Jianke */,
      part: "body"
    },
    2380: {
      name: "夜战幻甲",
      type: 2380,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "紫晶镶嵌，体现剑客的沉稳魅力。",
      img: `${goodsBagUrl}/equip-yezhanhuanjia.png`,
      bgImg: `${goodsBagUrl}/equip-yezhanhuanjia.png`,
      level: 80,
      limit: "少年剑客专用" /* Jianke */,
      part: "body"
    },
    2401: {
      name: "天使衣-男",
      type: 2401,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "暂无描述",
      img: `${goodsDefaultUrl}/equip-nantianshiyi.png`,
      bgImg: `${goodsBagUrl}/equip-nantianshiyi.png`,
      level: 1,
      limit: "男性角色专用" /* Boy */,
      part: "body"
    },
    2402: {
      name: "天使衣-女",
      type: 2402,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "暂无描述",
      img: `${goodsDefaultUrl}/equip-nvtianshiyi.png`,
      bgImg: `${goodsBagUrl}/equip-nvtianshiyi.png`,
      level: 1,
      limit: "女性角色专用" /* Girl */,
      part: "body"
    },
    2403: {
      name: "布老虎衣-男",
      type: 2403,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "配对布老虎头饰制作的衣服，很帅气。",
      img: `${goodsDefaultUrl}/equip-nanbulaohuyi.png`,
      bgImg: `${goodsBagUrl}/equip-nanbulaohuyi.png`,
      level: 1,
      limit: "男性角色专用" /* Boy */,
      part: "body"
    },
    2404: {
      name: "布老虎衣-女",
      type: 2404,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "配对布老虎头饰制作的衣服，很漂亮。",
      img: `${goodsDefaultUrl}/equip-nvbulaohuyi.png`,
      bgImg: `${goodsBagUrl}/equip-nvbulaohuyi.png`,
      level: 1,
      limit: "女性角色专用" /* Girl */,
      part: "body"
    },
    2405: {
      name: "沙滩装-男",
      type: 2405,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "去海边这套衣服完美啦。",
      img: `${goodsDefaultUrl}/equip-nanshatanzhuang.png`,
      bgImg: `${goodsBagUrl}/equip-nanshatanzhuang.png`,
      level: 1,
      limit: "男性角色专用" /* Boy */,
      part: "body"
    },
    2406: {
      name: "沙滩装-女",
      type: 2406,
      typeDesc: "衣服",
      qutity: 1 /* Normal */,
      desc: "去海边这套衣服完美啦。",
      img: `${goodsDefaultUrl}/equip-nvshatanzhuang.png`,
      bgImg: `${goodsBagUrl}/equip-nvshatanzhuang.png`,
      level: 1,
      limit: "女性角色专用" /* Girl */,
      part: "body"
    },
    // 手套
    2550: {
      name: "冰晶晨星",
      type: 2550,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "冰晶雕琢的指环，如星星一样闪亮。",
      img: `${goodsBagUrl}/equip-shengnv-bingjingxingchen.png`,
      bgImg: `${goodsBagUrl}/equip-shengnv-bingjingxingchen.png`,
      level: 50,
      limit: "冰凌圣女专用" /* Shengnv */,
      part: "hand"
    },
    2650: {
      name: "霓虹指环",
      type: 2650,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "据说是能吸引霞光的石头，打磨成形后镶于戒指上，很受欢迎。",
      img: `${goodsBagUrl}/equip-nvxia-nihongzhihuan.png`,
      bgImg: `${goodsBagUrl}/equip-nvxia-nihongzhihuan.png`,
      level: 50,
      limit: "机灵女侠专用" /* Nvxia */,
      part: "hand"
    },
    2750: {
      name: "黑火指环",
      type: 2750,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "很特别的护腕，由奇特材料制作，很容易起火，但却久烧不毁。",
      img: `${goodsBagUrl}/equip-heihuo-heihuoshouhuan.png`,
      bgImg: `${goodsBagUrl}/equip-heihuo-heihuoshouhuan.png`,
      level: 50,
      limit: "黑火之子专用" /* Heihuo */,
      part: "hand"
    },
    2760: {
      name: "龙之护腕",
      type: 2760,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "用红龙骨化石制作的护腕，带着灼热的气息。",
      img: `${goodsBagUrl}/equip-longzhihuwan.png`,
      bgImg: `${goodsBagUrl}/equip-longzhihuwan.png`,
      level: 60,
      limit: "黑火之子专用" /* Heihuo */,
      part: "hand"
    },
    2850: {
      name: "黄金游龙腕",
      type: 2850,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "黄金手腕，腕上有游龙缠绕，金光闪闪。",
      img: `${goodsBagUrl}/equip-jianke-huangjinyoulongwan.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-huangjinyoulongwan.png`,
      level: 50,
      limit: "少年剑客专用" /* Jianke */,
      part: "hand"
    },
    2870: {
      name: "不死鸟之爪",
      type: 2870,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "以白金打造的护腕，上雕有不死鸟符文。",
      img: `${goodsBagUrl}/equip-jianke-businiaozhizhua.png`,
      bgImg: `${goodsBagUrl}/equip-jianke-businiaozhizhua.png`,
      level: 70,
      limit: "少年剑客专用" /* Jianke */,
      part: "hand"
    },
    2901: {
      name: "花漾金镯",
      type: 2901,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "灵动的花季时光，闪闪的秀气金镯",
      img: `${goodsBagUrl}/equip-girl-huayangjinzhuo.png`,
      bgImg: `${goodsBagUrl}/equip-girl-huayangjinzhuo.png`,
      level: 50,
      limit: "女性角色专用" /* Girl */,
      part: "hand"
    },
    2903: {
      name: "布老虎手套-男",
      type: 2903,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "配对布老虎头套制作的手套，帅气哦。",
      img: `${goodsBagUrl}/equip-nanbulaohushoutao.png`,
      bgImg: `${goodsBagUrl}/equip-nanbulaohushoutao.png`,
      level: 1,
      limit: "男性角色专用" /* Boy */,
      part: "hand"
    },
    2904: {
      name: "布老虎手套-女",
      type: 2904,
      typeDesc: "手套",
      qutity: 1 /* Normal */,
      desc: "配对布老虎头套制作的手套，漂亮哦。",
      img: `${goodsBagUrl}/equip-nvbulaohushoutao.png`,
      bgImg: `${goodsBagUrl}/equip-nvbulaohushoutao.png`,
      level: 1,
      limit: "女性角色专用" /* Girl */,
      part: "hand"
    },
    3001: {
      name: "鸡毛",
      type: 3001,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "一根小鸡毛，可以进行合成。",
      img: `${goodsDefaultUrl}/jimao.png`,
      bgImg: `${goodsBagUrl}/jimao.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3002, min: 0, max: 1 }
      ]
    },
    3002: {
      name: "精致的鸡毛",
      type: 3002,
      typeDesc: "物品",
      qutity: 2 /* Jingzhi */,
      desc: "精致的小鸡毛，可以进行合成。",
      img: `${goodsDefaultUrl}/jimao-jingzhi.png`,
      bgImg: `${goodsBagUrl}/jimao-jingzhi.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3003, min: 0, max: 0.4 },
        { type: 3004, min: 0.4, max: 0.6 },
        { type: 3005, min: 0.6, max: 1 }
      ]
    },
    3003: {
      name: "小鸡翅尖",
      type: 3003,
      typeDesc: "物品",
      qutity: 3 /* Zhuoyue */,
      desc: "小鸡翅尖，可以进行合成。",
      img: `${goodsDefaultUrl}/xiaojichijian.png`,
      bgImg: `${goodsBagUrl}/xiaojichijian.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3006, min: 0, max: 0.5 },
        { type: 3007, min: 0.5, max: 1 }
      ]
    },
    3004: {
      name: "小鸡呆毛",
      type: 3004,
      typeDesc: "物品",
      qutity: 3 /* Zhuoyue */,
      desc: "小鸡呆毛，可以进行合成。",
      img: `${goodsDefaultUrl}/xiaojidaimao.png`,
      bgImg: `${goodsBagUrl}/xiaojidaimao.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3008, min: 0, max: 1 }
      ]
    },
    3005: {
      name: "小鸡爪子",
      type: 3005,
      typeDesc: "物品",
      qutity: 3 /* Zhuoyue */,
      desc: "小鸡爪子，可以进行合成。",
      img: `${goodsDefaultUrl}/xiaojizhuazi.png`,
      bgImg: `${goodsBagUrl}/xiaojizhuazi.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3009, min: 0, max: 0.5 },
        { type: 3010, min: 0.5, max: 1 }
      ]
    },
    3006: {
      name: "小鸡右翅",
      type: 3006,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "合成小鸡头饰的部件之一，只需要一个。",
      img: `${goodsDefaultUrl}/xiaojiyouchi.png`,
      bgImg: `${goodsBagUrl}/xiaojiyouchi.png`,
      hecheng: true,
      hechengCount: 1,
      hechengGroup: [3006, 3007, 3008, 3009, 3010],
      hechengRate: 0.25,
      hechengGoods: [
        { type: 1401, min: 0, max: 0.25 },
        { type: 5185, min: 0.25, max: 1 }
      ]
    },
    3007: {
      name: "小鸡左翅",
      type: 3007,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "合成小鸡头饰的部件之一，只需要一个。",
      img: `${goodsDefaultUrl}/xiaojizuochi.png`,
      bgImg: `${goodsBagUrl}/xiaojizuochi.png`,
      hecheng: true,
      hechengCount: 1,
      hechengGroup: [3006, 3007, 3008, 3009, 3010],
      hechengRate: 0.25,
      hechengGoods: [
        { type: 1401, min: 0, max: 0.25 },
        { type: 5185, min: 0.25, max: 1 }
      ]
    },
    3008: {
      name: "鸡毛围脖",
      type: 3008,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "合成小鸡头饰的部件之一，只需要一个。",
      img: `${goodsDefaultUrl}/jimaoweibo.png`,
      bgImg: `${goodsBagUrl}/jimaoweibo.png`,
      hecheng: true,
      hechengCount: 1,
      hechengGroup: [3006, 3007, 3008, 3009, 3010],
      hechengRate: 0.25,
      hechengGoods: [
        { type: 1401, min: 0, max: 0.25 },
        { type: 5185, min: 0.25, max: 1 }
      ]
    },
    3009: {
      name: "小鸡左腿",
      type: 3009,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "合成小鸡头饰的部件之一，只需要一个。",
      img: `${goodsDefaultUrl}/xiaojizuotui.png`,
      bgImg: `${goodsBagUrl}/xiaojizuotui.png`,
      hecheng: true,
      hechengCount: 1,
      hechengGroup: [3006, 3007, 3008, 3009, 3010],
      hechengRate: 0.25,
      hechengGoods: [
        { type: 1401, min: 0, max: 0.25 },
        { type: 5185, min: 0.25, max: 1 }
      ]
    },
    3010: {
      name: "小鸡右腿",
      type: 3010,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "合成小鸡头饰的部件之一，只需要一个。",
      img: `${goodsDefaultUrl}/xiaojiyoutui.png`,
      bgImg: `${goodsBagUrl}/xiaojiyoutui.png`,
      hecheng: true,
      hechengCount: 1,
      hechengGroup: [3006, 3007, 3008, 3009, 3010],
      hechengRate: 0.25,
      hechengGoods: [
        { type: 1401, min: 0, max: 0.25 },
        { type: 5185, min: 0.25, max: 1 }
      ]
    },
    3011: {
      name: "普通灯笼碎片",
      type: 3011,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "普通品质的灯笼碎片，可以进行合成。",
      img: `${goodsDefaultUrl}/denglongsuipian.png`,
      bgImg: `${goodsBagUrl}/denglongsuipian.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3012, min: 0, max: 1 }
      ]
    },
    3012: {
      name: "精致灯笼碎片",
      type: 3012,
      typeDesc: "物品",
      qutity: 2 /* Jingzhi */,
      desc: "精致品质的灯笼碎片，可以进行合成。",
      img: `${goodsDefaultUrl}/denglongsuipian.png`,
      bgImg: `${goodsBagUrl}/denglongsuipian.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3013, min: 0, max: 1 }
      ]
    },
    3013: {
      name: "卓越灯笼碎片",
      type: 3013,
      typeDesc: "物品",
      qutity: 3 /* Zhuoyue */,
      desc: "卓越品质的灯笼碎片，可以进行合成。",
      img: `${goodsDefaultUrl}/denglongsuipian.png`,
      bgImg: `${goodsBagUrl}/denglongsuipian.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 3014, min: 0, max: 1 }
      ]
    },
    3014: {
      name: "非凡灯笼碎片",
      type: 3014,
      typeDesc: "物品",
      qutity: 4 /* Feifan */,
      desc: "非凡品质的灯笼碎片，可以合成闪闪小灯笼。",
      img: `${goodsDefaultUrl}/denglongsuipian.png`,
      bgImg: `${goodsBagUrl}/denglongsuipian.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 1002, min: 0, max: 1 }
      ]
    },
    // 3500-5000 可使用物品。例如宝箱、幻化卡、宠物蛋、钥匙
    3500: {
      name: "招魂铃",
      type: 3500,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "一种神奇的铃铛，可以让人满血复活。",
      img: `${goodsDefaultUrl}/zhaohunling.png`,
      bgImg: `${goodsBagUrl}/zhaohunling.png`
    },
    4001: {
      name: "田鼠卡",
      type: 4001,
      typeDesc: "幻化卡",
      qutity: 1 /* Normal */,
      desc: "变身成为田鼠，并可以使用田鼠的技能。",
      img: `${goodsDefaultUrl}/huanhuaka-tianshu.png`,
      bgImg: `${goodsBagUrl}/huanhuaka-tianshu.png`
    },
    4002: {
      name: "彩虫卡",
      type: 4002,
      typeDesc: "幻化卡",
      qutity: 1 /* Normal */,
      desc: "变身成为彩虫，并可以使用彩虫的技能。",
      img: `${goodsDefaultUrl}/huanhuaka-caichong.png`,
      bgImg: `${goodsBagUrl}/huanhuak-caichong.png`
    },
    4003: {
      name: "稻草人卡",
      type: 4003,
      typeDesc: "幻化卡",
      qutity: 1 /* Normal */,
      desc: "变身成为稻草人，并可以使用稻草人的技能。",
      img: `${goodsDefaultUrl}/huanhuaka-daocaoren.png`,
      bgImg: `${goodsBagUrl}/huanhuaka-daocaoren.png`
    },
    4004: {
      name: "硕鼠卡",
      type: 4004,
      typeDesc: "幻化卡",
      qutity: 1 /* Normal */,
      desc: "变身成为硕鼠，并可以使用硕鼠的技能。",
      img: `${goodsDefaultUrl}/huanhuaka-shuoshu.png`,
      bgImg: `${goodsBagUrl}/huanhuaka-shuoshu.png`
    },
    4500: {
      name: "情关",
      type: 4500,
      typeDesc: "关卡钥匙",
      qutity: 1 /* Normal */,
      desc: "这是一把珍贵的情关钥匙，要和喜欢的人一起去闯。",
      img: `${goodsDefaultUrl}/yincangyaoshi.png`,
      bgImg: `${goodsBagUrl}/yincangyaoshi.png`
    },
    4510: {
      name: "小果村隐藏关",
      type: 4510,
      typeDesc: "关卡钥匙",
      qutity: 1 /* Normal */,
      desc: "小果村的隐藏钥匙，使用后可以进行探险。",
      img: `${goodsDefaultUrl}/yincangyaoshi.png`,
      bgImg: `${goodsBagUrl}/yincangyaoshi.png`
    },
    4511: {
      name: "鼠王的晚餐",
      type: 4511,
      typeDesc: "关卡钥匙",
      qutity: 1 /* Normal */,
      desc: "小果村的BOSS，使用后可以进行探险，要小心哦。",
      img: `${goodsDefaultUrl}/bossyaoshi.png`,
      bgImg: `${goodsBagUrl}/bossyaoshi.png`
    },
    4520: {
      name: "长安城隐藏关",
      type: 4520,
      typeDesc: "关卡钥匙",
      qutity: 1 /* Normal */,
      desc: "长安城的隐藏钥匙，使用后可以进行探险。",
      img: `${goodsDefaultUrl}/yincangyaoshi.png`,
      bgImg: `${goodsBagUrl}/yincangyaoshi.png`
    },
    4801: {
      name: "铜戒指",
      type: 4801,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "这是一枚铜戒指，可以用来求婚",
      img: `${goodsDefaultUrl}/tongjiezhi.png`,
      bgImg: `${goodsBagUrl}/tongjiezhi.png`
    },
    4802: {
      name: "银戒指",
      type: 4802,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "这是一枚银戒指，可以用来求婚",
      img: `${goodsDefaultUrl}/yinjiezhi.png`,
      bgImg: `${goodsBagUrl}/yinjiezhi.png`
    },
    4803: {
      name: "金戒指",
      type: 4803,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "这是一枚金戒指，可以用来求婚",
      img: `${goodsDefaultUrl}/jinjiezhi.png`,
      bgImg: `${goodsBagUrl}/jinjiezhi.png`
    },
    4804: {
      name: "钻石戒指",
      type: 4804,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "这是一枚钻石戒指，可以用来求婚",
      img: `${goodsDefaultUrl}/zuanshijiezhi.png`,
      bgImg: `${goodsBagUrl}/zuanshijiezhi.png`
    },
    // 5000-7000 装备镶嵌、精炼、强化等
    5001: {
      name: "普通精炼石",
      type: 5001,
      typeDesc: "精炼石",
      qutity: 1 /* Normal */,
      desc: "普通品质的精炼石，可以提高装备的属性，但佩戴的等级会被提高。",
      img: `${goodsDefaultUrl}/putongjinglianshi.png`,
      bgImg: `${goodsBagUrl}/putongjinglianshi.png`
    },
    5002: {
      name: "高级精炼石",
      type: 5002,
      typeDesc: "精炼石",
      qutity: 3 /* Zhuoyue */,
      desc: "高级品质的精炼石，可以大幅提高装备属性而且还不会提高等级要求，但高级精炼之后不可以再普通精炼！",
      img: `${goodsDefaultUrl}/gaojijinglianshi.png`,
      bgImg: `${goodsBagUrl}/gaojijinglianshi.png`
    },
    5003: {
      name: "普通强化石",
      type: 5003,
      typeDesc: "强化石",
      qutity: 1 /* Normal */,
      qianghuaLevel: 1,
      desc: "普通品质的强化石，可以让镶嵌有幻石的装备得到强化。强化后装备不可交易。",
      img: `${goodsDefaultUrl}/qianghuashi-putong.png`,
      bgImg: `${goodsBagUrl}/qianghuashi-putong.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 5004, min: 0, max: 1 }
      ]
    },
    5004: {
      name: "精致强化石",
      type: 5004,
      typeDesc: "强化石",
      qianghuaLevel: 2,
      qutity: 2 /* Jingzhi */,
      desc: "精致品质的强化石，可以让镶嵌有幻石的装备得到强化。强化后装备不可交易。",
      img: `${goodsDefaultUrl}/qianghuashi-jingzhi.png`,
      bgImg: `${goodsBagUrl}/qianghuashi-jingzhi.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 5005, min: 0, max: 1 }
      ]
    },
    5005: {
      name: "卓越强化石",
      type: 5005,
      typeDesc: "强化石",
      qianghuaLevel: 3,
      qutity: 3 /* Zhuoyue */,
      desc: "卓越品质的强化石，可以让镶嵌有幻石的装备得到强化。强化后装备不可交易。",
      img: `${goodsDefaultUrl}/qianghuashi-zhuoyue.png`,
      bgImg: `${goodsBagUrl}/qianghuashi-zhuoyue.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 5006, min: 0, max: 1 }
      ]
    },
    5006: {
      name: "非凡强化石",
      type: 5006,
      typeDesc: "强化石",
      qutity: 4 /* Feifan */,
      qianghuaLevel: 4,
      desc: "非凡品质的强化石，可以让镶嵌有幻石的装备得到强化。强化后装备不可交易。",
      img: `${goodsDefaultUrl}/qianghuashi-feifan.png`,
      bgImg: `${goodsBagUrl}/qianghuashi-feifan.png`,
      hecheng: true,
      hechengCount: 5,
      hechengRate: 1,
      hechengGoods: [
        { type: 5007, min: 0, max: 1 }
      ]
    },
    5007: {
      name: "完美强化石",
      type: 5007,
      typeDesc: "强化石",
      qianghuaLevel: 5,
      qutity: 5 /* Wanmei */,
      desc: "完美品质的强化石，可以让镶嵌有幻石的装备得到强化。强化后装备不可交易。",
      img: `${goodsDefaultUrl}/qianghuashi-wanmei.png`,
      bgImg: `${goodsBagUrl}/qianghuashi-wanmei.png`
    },
    5111: {
      name: "普通10级幻石",
      type: 5111,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "10级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong10.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong10.png`,
      level: 10
    },
    5112: {
      name: "精致10级幻石",
      type: 5112,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "10级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi10.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi10.png`,
      level: 10
    },
    5113: {
      name: "卓越10级幻石",
      type: 5113,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "10级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue10.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue10.png`,
      level: 10
    },
    5114: {
      name: "非凡10级幻石",
      type: 5114,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "10级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan10.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan10.png`,
      level: 10
    },
    5115: {
      name: "完美10级幻石",
      type: 5115,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "10级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei10.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei10.png`,
      level: 10
    },
    5121: {
      name: "普通20级幻石",
      type: 5121,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "20级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong20.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong20.png`,
      level: 20
    },
    5122: {
      name: "精致20级幻石",
      type: 5122,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "20级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi20.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi20.png`,
      level: 20
    },
    5123: {
      name: "卓越20级幻石",
      type: 5123,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "20级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue20.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue20.png`,
      level: 20
    },
    5124: {
      name: "非凡20级幻石",
      type: 5124,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "20级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan20.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan20.png`,
      level: 20
    },
    5125: {
      name: "完美20级幻石",
      type: 5125,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "20级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei20.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei20.png`,
      level: 20
    },
    5131: {
      name: "普通30级幻石",
      type: 5131,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "30级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong30.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong30.png`,
      level: 30
    },
    5132: {
      name: "精致30级幻石",
      type: 5132,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "30级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi30.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi30.png`,
      level: 30
    },
    5133: {
      name: "卓越30级幻石",
      type: 5133,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "30级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue30.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue30.png`,
      level: 30
    },
    5134: {
      name: "非凡30级幻石",
      type: 5134,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "30级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan30.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan30.png`,
      level: 30
    },
    5135: {
      name: "完美30级幻石",
      type: 5135,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "30级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei30.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei30.png`,
      level: 30
    },
    5141: {
      name: "普通40级幻石",
      type: 5141,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "40级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong40.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong40.png`,
      level: 40
    },
    5142: {
      name: "精致40级幻石",
      type: 5142,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "40级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi40.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi40.png`,
      level: 40
    },
    5143: {
      name: "卓越40级幻石",
      type: 5143,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "40级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue40.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue40.png`,
      level: 40
    },
    5144: {
      name: "非凡40级幻石",
      type: 5144,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "40级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan40.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan40.png`,
      level: 40
    },
    5145: {
      name: "完美40级幻石",
      type: 5145,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "40级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei40.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei40.png`,
      level: 40
    },
    5151: {
      name: "普通50级幻石",
      type: 5151,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "50级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong50.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong50.png`,
      level: 50
    },
    5152: {
      name: "精致50级幻石",
      type: 5152,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "50级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi50.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi50.png`,
      level: 50
    },
    5153: {
      name: "卓越50级幻石",
      type: 5153,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "50级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue50.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue50.png`,
      level: 50
    },
    5154: {
      name: "非凡50级幻石",
      type: 5154,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "50级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan50.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan50.png`,
      level: 50
    },
    5155: {
      name: "完美50级幻石",
      type: 5155,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "50级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei50.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei50.png`,
      level: 50
    },
    5161: {
      name: "普通60级幻石",
      type: 5161,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "60级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong60.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong60.png`,
      level: 60
    },
    5162: {
      name: "精致60级幻石",
      type: 5162,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "60级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi60.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi60.png`,
      level: 60
    },
    5163: {
      name: "卓越60级幻石",
      type: 5163,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "60级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue60.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue60.png`,
      level: 60
    },
    5164: {
      name: "非凡60级幻石",
      type: 5164,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "60级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan60.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan60.png`,
      level: 60
    },
    5165: {
      name: "完美60级幻石",
      type: 5165,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "60级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei60.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei60.png`,
      level: 60
    },
    5171: {
      name: "普通70级幻石",
      type: 5171,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "70级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong70.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong70.png`,
      level: 70
    },
    5172: {
      name: "精致70级幻石",
      type: 5172,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "70级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi70.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi70.png`,
      level: 70
    },
    5173: {
      name: "卓越70级幻石",
      type: 5173,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "70级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue70.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue70.png`,
      level: 70
    },
    5174: {
      name: "非凡70级幻石",
      type: 5174,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "70级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan70.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan70.png`,
      level: 70
    },
    5175: {
      name: "完美70级幻石",
      type: 5175,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "70级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei70.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei70.png`,
      level: 70
    },
    5181: {
      name: "普通80级幻石",
      type: 5181,
      typeDesc: "幻石",
      qutity: 1 /* Normal */,
      desc: "80级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-putong80.png`,
      bgImg: `${goodsBagUrl}/huanshi-putong80.png`,
      level: 80
    },
    5182: {
      name: "精致80级幻石",
      type: 5182,
      typeDesc: "幻石",
      qutity: 2 /* Jingzhi */,
      desc: "80级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-jingzhi80.png`,
      bgImg: `${goodsBagUrl}/huanshi-jingzhi80.png`,
      level: 80
    },
    5183: {
      name: "卓越80级幻石",
      type: 5183,
      typeDesc: "幻石",
      qutity: 3 /* Zhuoyue */,
      desc: "80级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-zhuoyue80.png`,
      bgImg: `${goodsBagUrl}/huanshi-zhuoyue80.png`,
      level: 80
    },
    5184: {
      name: "非凡80级幻石",
      type: 5184,
      typeDesc: "幻石",
      qutity: 4 /* Feifan */,
      desc: "80级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-feifan80.png`,
      bgImg: `${goodsBagUrl}/huanshi-feifan80.png`,
      level: 80
    },
    5185: {
      name: "完美80级幻石",
      type: 5185,
      typeDesc: "幻石",
      qutity: 5 /* Wanmei */,
      desc: "80级可用。镶嵌在装备上，让装备产生神奇的力量。",
      img: `${goodsDefaultUrl}/huanshi-wanmei80.png`,
      bgImg: `${goodsBagUrl}/huanshi-wanmei80.png`,
      level: 80
    },
    6001: {
      name: "毛皮",
      type: 6001,
      typeDesc: "镶嵌材料",
      qutity: 1 /* Normal */,
      desc: "镶嵌装备常用的材料。",
      img: `${goodsDefaultUrl}/maopi.png`,
      bgImg: `${goodsBagUrl}/maopi.png`
    },
    6002: {
      name: "石英",
      type: 6002,
      typeDesc: "镶嵌材料",
      qutity: 1 /* Normal */,
      desc: "镶嵌装备常用的材料。",
      img: `${goodsDefaultUrl}/shiying.png`,
      bgImg: `${goodsBagUrl}/shiying.png`
    },
    6003: {
      name: "鳞片",
      type: 6003,
      typeDesc: "镶嵌材料",
      qutity: 1 /* Normal */,
      desc: "镶嵌装备常用的材料。",
      img: `${goodsDefaultUrl}/linpian.png`,
      bgImg: `${goodsBagUrl}/linpian.png`
    },
    6004: {
      name: "银丝",
      type: 6004,
      typeDesc: "镶嵌材料",
      qutity: 1 /* Normal */,
      desc: "镶嵌装备常用的材料。",
      img: `${goodsDefaultUrl}/yinsi.png`,
      bgImg: `${goodsBagUrl}/yinsi.png`
    },
    6005: {
      name: "金丝",
      type: 6005,
      typeDesc: "镶嵌材料",
      qutity: 4 /* Feifan */,
      desc: "镶嵌高级装备的材料，比较稀有。",
      img: `${goodsDefaultUrl}/jinsi.png`,
      bgImg: `${goodsBagUrl}/jinsi.png`
    },
    6006: {
      name: "珍兽皮",
      type: 6006,
      typeDesc: "镶嵌材料",
      qutity: 4 /* Feifan */,
      desc: "镶嵌高级装备的材料，比较稀有。",
      img: `${goodsDefaultUrl}/hupi.png`,
      bgImg: `${goodsBagUrl}/hupi.png`
    },
    6007: {
      name: "珍珠",
      type: 6007,
      typeDesc: "镶嵌材料",
      qutity: 4 /* Feifan */,
      desc: "镶嵌高级装备的材料，比较稀有。",
      img: `${goodsDefaultUrl}/zhenzhu.png`,
      bgImg: `${goodsBagUrl}/zhenzhu.png`
    },
    6008: {
      name: "水晶",
      type: 6008,
      typeDesc: "镶嵌材料",
      qutity: 4 /* Feifan */,
      desc: "镶嵌高级装备的材料，比较稀有。",
      img: `${goodsDefaultUrl}/shuijing.png`,
      bgImg: `${goodsBagUrl}/shuijing.png`
    },
    // 小果村道具
    11e3: {
      name: "鼠尾",
      type: 11e3,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "卷曲的田鼠尾巴。",
      img: `${goodsDefaultUrl}/shuwei.png`,
      bgImg: `${goodsBagUrl}/shuwei.png`
    },
    11001: {
      name: "虫宝宝",
      type: 11001,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "青虫的宝宝，圆圆的一团粉可爱。",
      img: `${goodsDefaultUrl}/chongbaobao.png`,
      bgImg: `${goodsBagUrl}/chongbaobao.png`
    },
    11002: {
      name: "风筝",
      type: 11002,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "小孩子玩的风筝，已经断了线。",
      img: `${goodsDefaultUrl}/fengzheng.png`,
      bgImg: `${goodsBagUrl}/fengzheng.png`
    },
    11003: {
      name: "稻草",
      type: 11003,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "黄澄澄的稻草，可以用来烧火，也可以用来铺房顶。",
      img: `${goodsDefaultUrl}/daocao.png`,
      bgImg: `${goodsBagUrl}/daocao.png`
    },
    11004: {
      name: "鼠皮",
      type: 11004,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "晒干的田鼠皮，货郎会收购这些东西。",
      img: `${goodsDefaultUrl}/shupi.png`,
      bgImg: `${goodsBagUrl}/shupi.png`
    },
    11005: {
      name: "奇怪的石头",
      type: 11005,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "一块有着奇怪花纹的石头，闪烁着光芒。",
      img: `${goodsDefaultUrl}/qiguaideshitou.png`,
      bgImg: `${goodsBagUrl}/qiguaideshitou.png`
    },
    // 长安城道具
    12e3: {
      name: "包袱",
      type: 12e3,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "棉布包袱，出门必备。",
      img: `${goodsDefaultUrl}/baofu.png`,
      bgImg: `${goodsBagUrl}/baofu.png`
    },
    12001: {
      name: "鬼蜡烛",
      type: 12001,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "红红的蜡烛，火焰居然是蓝色的，很诡异。",
      img: `${goodsDefaultUrl}/guilazhu.png`,
      bgImg: `${goodsBagUrl}/guilazhu.png`
    },
    12002: {
      name: "断刀",
      type: 12002,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "	断掉的刀，刀刃上还有微蓝的光。",
      img: `${goodsDefaultUrl}/duandao.png`,
      bgImg: `${goodsBagUrl}/duandao.png`
    },
    12003: {
      name: "灯笼",
      type: 12003,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "残破的灯笼，上面画着鬼怪的图案。",
      img: `${goodsDefaultUrl}/denglong.png`,
      bgImg: `${goodsBagUrl}/denglong.png`
    },
    12004: {
      name: "铁块",
      type: 12004,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "生锈的铁块，也许还能熔炼吧。",
      img: `${goodsDefaultUrl}/tiekuai.png`,
      bgImg: `${goodsBagUrl}/tiekuai.png`
    },
    12005: {
      name: "蜡液",
      type: 12005,
      typeDesc: "物品",
      qutity: 1 /* Normal */,
      desc: "	已经凝固的蜡液。",
      img: `${goodsDefaultUrl}/laye.png`,
      bgImg: `${goodsBagUrl}/laye.png`
    }
  };
  var GoodsGroupCount = 99;

  // src/util/res/rate.ts
  var ResRate = {
    // 登录相关
    "login-bg": {
      width: getFixed(800 * PixelRatio),
      height: getFixed(600 * PixelRatio)
    },
    "login-btn": {
      width: getFixed(131 * PixelRatio),
      height: getFixed(74 * PixelRatio)
    },
    "registe-btn": {
      width: getFixed(131 * PixelRatio),
      height: getFixed(43 * PixelRatio)
    },
    "register-panel": {
      width: getFixed(415 * PixelRatio),
      height: getFixed(315 * PixelRatio)
    },
    // 玩家相关
    "player_bottom": {
      width: getFixed(70 * PixelRatio),
      height: getFixed(47 * PixelRatio)
    },
    "default-body": {
      x: getFixed(-124 * PixelRatio),
      y: getFixed(-122 * PixelRatio)
    },
    "default-head": {
      x: getFixed(-112 * PixelRatio),
      y: getFixed(-108 * PixelRatio)
    },
    "default-wing": {
      x: getFixed(-114 * PixelRatio),
      y: getFixed(-114 * PixelRatio)
    },
    "nv-yifu": {
      x: getFixed(-124 * PixelRatio),
      y: getFixed(-122 * PixelRatio)
    },
    "shengnv-haidaomao": {
      // x: getFixed(98 * PixelRatio),
      // y: getFixed(92 * PixelRatio),
      x: getFixed(-112 * PixelRatio),
      y: getFixed(-108 * PixelRatio)
    },
    "nv-tianshichi": {
      x: getFixed(114 * PixelRatio),
      y: getFixed(114 * PixelRatio)
    },
    "blood": {
      width: getFixed(62 * PixelRatio),
      height: getFixed(8 * PixelRatio),
      x: getFixed(10 * PixelRatio),
      y: getFixed(60 * PixelRatio)
    },
    "monster-blood": {
      width: getFixed(62 * PixelRatio),
      height: getFixed(8 * PixelRatio),
      x: getFixed(12 * PixelRatio),
      y: getFixed(40 * PixelRatio)
    },
    "dead": {
      width: getFixed(163 * PixelRatio),
      height: getFixed(124 * PixelRatio),
      x: getFixed(-104 * PixelRatio),
      y: getFixed(-102 * PixelRatio)
    },
    "baohuzhao": {
      width: getFixed(106 * PixelRatio),
      height: getFixed(115 * PixelRatio),
      x: getFixed(-36 * PixelRatio),
      y: getFixed(-72 * PixelRatio)
    },
    "rebirth": {
      x: getFixed(-45 * PixelRatio),
      y: getFixed(-302 * PixelRatio)
    },
    "shengnv-ice": {
      width: getFixed(60 * PixelRatio),
      height: getFixed(79 * PixelRatio),
      x: getFixed(-10 * PixelRatio),
      y: getFixed(-50 * PixelRatio)
    },
    "shengnv-fire": {
      width: getFixed(59 * PixelRatio),
      height: getFixed(74 * PixelRatio),
      x: getFixed(-16 * PixelRatio),
      y: getFixed(-48 * PixelRatio)
    },
    "nvxia-ice": {
      width: getFixed(61 * PixelRatio),
      height: getFixed(79 * PixelRatio),
      x: getFixed(-10 * PixelRatio),
      y: getFixed(-50 * PixelRatio)
    },
    "nvxia-fire": {
      width: getFixed(80 * PixelRatio),
      height: getFixed(67 * PixelRatio),
      x: getFixed(-16 * PixelRatio),
      y: getFixed(-48 * PixelRatio)
    },
    "heihuo-ice": {
      width: getFixed(63 * PixelRatio),
      height: getFixed(79 * PixelRatio),
      x: getFixed(-10 * PixelRatio),
      y: getFixed(-50 * PixelRatio)
    },
    "heihuo-fire": {
      width: getFixed(55 * PixelRatio),
      height: getFixed(70 * PixelRatio),
      x: getFixed(-16 * PixelRatio),
      y: getFixed(-48 * PixelRatio)
    },
    "jianke-ice": {
      width: getFixed(59 * PixelRatio),
      height: getFixed(84 * PixelRatio),
      x: getFixed(-10 * PixelRatio),
      y: getFixed(-50 * PixelRatio)
    },
    "jianke-fire": {
      width: getFixed(50 * PixelRatio),
      height: getFixed(81 * PixelRatio),
      x: getFixed(-11 * PixelRatio),
      y: getFixed(-53 * PixelRatio)
    },
    // 石头相关
    "track-down": {
      width: getFixed(48 * PixelRatio),
      height: getFixed(55 * PixelRatio)
      // scale: GridWidth / 48
    },
    "track-up": {
      width: getFixed(48 * PixelRatio),
      height: getFixed(55 * PixelRatio)
      // scale: GridWidth / 48
    },
    "track-left": {
      width: getFixed(55 * PixelRatio),
      height: getFixed(36 * PixelRatio)
      // scale: GridHeight / 36 * (4 / 5)
    },
    "track-right": {
      width: getFixed(55 * PixelRatio),
      height: getFixed(36 * PixelRatio)
      // scale: GridHeight / 36 * (4 / 5)
    },
    "denglongmo-fire-left": {
      x: getFixed(-250 * PixelRatio),
      y: getFixed(-310 * PixelRatio)
    },
    "denglongmo-fire-right": {
      x: getFixed(-180 * PixelRatio),
      y: getFixed(-320 * PixelRatio)
    },
    "denglongmo-fire-up": {
      x: getFixed(-200 * PixelRatio),
      y: getFixed(-310 * PixelRatio)
    },
    "denglongmo-fire-down": {
      x: getFixed(-190 * PixelRatio),
      y: getFixed(-190 * PixelRatio)
    }
  };

  // src/util/common/exp.ts
  var LevelExp = [
    122,
    147,
    174,
    206,
    241,
    284,
    340,
    392,
    453,
    906,
    1087,
    1304,
    1564,
    1876,
    2251,
    2492,
    2865,
    3294,
    3788,
    4356,
    5227,
    6272,
    7526,
    9032,
    10838,
    12005,
    13606,
    15727,
    18472,
    25032,
    28786,
    32104,
    35070,
    38586,
    41716,
    43519,
    46816,
    50791,
    55409,
    60418,
    48227,
    64773,
    68118,
    72879,
    80512,
    88784,
    95431,
    105199,
    139538,
    198979,
    284561,
    322272,
    334898,
    357325,
    389655,
    414823,
    436529,
    459165,
    512529,
    658959,
    670843,
    699348,
    705589,
    737747,
    781254,
    829982,
    869463,
    883765,
    956533,
    1112557,
    1174659,
    1199863,
    1206799,
    1344768,
    1488904,
    1532478,
    1677639,
    1800223,
    2185154,
    4688928,
    5398030,
    6755931,
    7276738,
    8360918,
    9778424,
    10561284,
    11676725,
    20908879,
    27913068
  ];
  var PlayerLevelData = [
    0,
    { level: 1, power: 12, hp: 85 },
    { level: 2, power: 12, hp: 87 },
    { level: 3, power: 12, hp: 89 },
    { level: 4, power: 13, hp: 91 },
    { level: 5, power: 13, hp: 93 },
    { level: 6, power: 13, hp: 95 },
    { level: 7, power: 14, hp: 97 },
    { level: 8, power: 14, hp: 99 },
    { level: 9, power: 14, hp: 101 },
    { level: 10, power: 15, hp: 103 },
    { level: 11, power: 15, hp: 105 },
    { level: 12, power: 15, hp: 107 },
    { level: 13, power: 16, hp: 109 },
    { level: 14, power: 16, hp: 111 },
    { level: 15, power: 16, hp: 113 },
    { level: 16, power: 17, hp: 115 },
    { level: 17, power: 17, hp: 117 },
    { level: 18, power: 17, hp: 119 },
    { level: 19, power: 18, hp: 121 },
    { level: 20, power: 18, hp: 123 },
    { level: 21, power: 18, hp: 125 },
    { level: 22, power: 19, hp: 127 },
    { level: 23, power: 19, hp: 129 },
    { level: 24, power: 20, hp: 131 },
    { level: 25, power: 20, hp: 133 },
    { level: 26, power: 21, hp: 135 },
    { level: 27, power: 21, hp: 137 },
    { level: 28, power: 22, hp: 139 },
    { level: 29, power: 22, hp: 141 },
    { level: 30, power: 23, hp: 144 },
    { level: 31, power: 23, hp: 147 },
    { level: 32, power: 24, hp: 150 },
    { level: 33, power: 24, hp: 153 },
    { level: 34, power: 25, hp: 156 },
    { level: 35, power: 25, hp: 159 },
    { level: 36, power: 26, hp: 162 },
    { level: 37, power: 26, hp: 165 },
    { level: 38, power: 27, hp: 168 },
    { level: 39, power: 27, hp: 171 },
    { level: 40, power: 28, hp: 174 },
    { level: 41, power: 28, hp: 177 },
    { level: 42, power: 29, hp: 180 },
    { level: 43, power: 29, hp: 183 },
    { level: 44, power: 30, hp: 186 },
    { level: 45, power: 30, hp: 189 },
    { level: 46, power: 31, hp: 192 },
    { level: 47, power: 31, hp: 195 },
    { level: 48, power: 32, hp: 198 },
    { level: 49, power: 32, hp: 201 },
    { level: 50, power: 33, hp: 205 },
    { level: 51, power: 33, hp: 207 },
    { level: 52, power: 34, hp: 209 },
    { level: 53, power: 34, hp: 211 },
    { level: 54, power: 35, hp: 213 },
    { level: 55, power: 35, hp: 216 },
    { level: 56, power: 36, hp: 218 },
    { level: 57, power: 36, hp: 220 },
    { level: 58, power: 37, hp: 222 },
    { level: 59, power: 38, hp: 225 },
    { level: 60, power: 39, hp: 228 },
    { level: 61, power: 39, hp: 231 },
    { level: 62, power: 40, hp: 234 },
    { level: 63, power: 41, hp: 237 },
    { level: 64, power: 41, hp: 240 },
    { level: 65, power: 42, hp: 243 },
    { level: 66, power: 43, hp: 246 },
    { level: 67, power: 43, hp: 249 },
    { level: 68, power: 44, hp: 252 },
    { level: 69, power: 45, hp: 256 },
    { level: 70, power: 45, hp: 259 },
    { level: 71, power: 46, hp: 262 },
    { level: 72, power: 47, hp: 265 },
    { level: 73, power: 47, hp: 268 },
    { level: 74, power: 48, hp: 271 },
    { level: 75, power: 49, hp: 275 },
    { level: 76, power: 49, hp: 278 },
    { level: 77, power: 50, hp: 281 },
    { level: 78, power: 51, hp: 284 },
    { level: 79, power: 51, hp: 288 },
    { level: 80, power: 52, hp: 291 },
    { level: 81, power: 53, hp: 294 },
    { level: 82, power: 53, hp: 298 },
    { level: 83, power: 54, hp: 301 },
    { level: 84, power: 55, hp: 304 },
    { level: 85, power: 55, hp: 308 },
    { level: 86, power: 56, hp: 312 },
    { level: 87, power: 57, hp: 315 },
    { level: 88, power: 57, hp: 319 },
    { level: 89, power: 58, hp: 323 }
  ];

  // src/entity/collect/BagGoods.ts
  var BagGoods = class extends Laya.Image {
    constructor(goodsInfo) {
      super();
      this.rate = 1;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.goodsInfo = goodsInfo;
      this.skin = goodsInfo.bgImg || "";
      this.size(this.width * PixelRatio, this.height * PixelRatio);
      this.on(Laya.Event.MOUSE_MOVE, (e) => {
        this.showGoodsDescPanel(e);
      });
      this.on(Laya.Event.MOUSE_OUT, (e) => {
        if (this.goodsDescPanel) {
          Laya.stage.removeChild(this.goodsDescPanel);
          this.goodsDescPanel = null;
        }
      });
      this.on(Laya.Event.MOUSE_DOWN, (e) => {
        this.showGoodsDescPanel(e);
      });
      this.on(Laya.Event.CLICK, (e) => {
        this.onClickGoods(e);
      });
    }
    showGoodsDescPanel(e) {
      let x = e.stageX;
      let y = e.stageY;
      if (this.goodsDescPanel) {
        this.goodsDescPanel.pos(x + 30 * PixelRatio, y - 50 * PixelRatio);
      } else {
        this.goodsDescPanel = new Laya.VBox();
        this.goodsDescPanel.space = 4 * PixelRatio;
        this.goodsDescPanel.loadImage(`${myUiUrl}/goods-desc-panel.png`);
        this.goodsDescPanel.zOrder = 1e4;
        this.goodsDescPanel.pos(x + 30 * PixelRatio, y - 50 * PixelRatio);
        this.goodsDescPanel.scale(this.rate, this.rate);
        Laya.stage.addChild(this.goodsDescPanel);
        if (isEquip(this.goodsInfo.type)) {
          this.goodsDescPanel.size(155 * PixelRatio, 240 * PixelRatio);
          this.renderEquipDesc();
        } else {
          this.goodsDescPanel.size(130 * PixelRatio, 120 * PixelRatio);
          this.renderGoodsDesc();
        }
      }
    }
    renderGoodsDesc() {
      this.goodsDescPanel.removeChildren();
      let space1 = new Laya.Sprite();
      space1.height = 13 * PixelRatio;
      this.goodsDescPanel.addChild(space1);
      let nameText = new Laya.Text();
      nameText.pos(0, 12 * PixelRatio);
      nameText.text = this.goodsInfo.name;
      nameText.fontSize = 14 * PixelRatio;
      nameText.color = "white";
      nameText.width = this.goodsDescPanel.width;
      nameText.align = "center";
      this.goodsDescPanel.addChild(nameText);
      this.goodsDescPanel.addChild(new Laya.Sprite());
      let typeText = new Laya.Text();
      typeText.pos(6 * PixelRatio, 30 * PixelRatio);
      typeText.text = "类型：" + this.goodsInfo.typeDesc;
      typeText.fontSize = 12 * PixelRatio;
      typeText.color = "white";
      this.goodsDescPanel.addChild(typeText);
      let descText = new Laya.Text();
      descText.pos(6 * PixelRatio, 50 * PixelRatio);
      descText.width = this.goodsDescPanel.width - 12 * PixelRatio;
      descText.text = this.goodsInfo.desc;
      descText.fontSize = 12 * PixelRatio;
      descText.color = "white";
      descText.wordWrap = true;
      this.goodsDescPanel.addChild(descText);
    }
    renderEquipDesc() {
      this.goodsDescPanel.removeChildren();
      this.goodsDescPanel.space = 2 * PixelRatio;
      let space1 = new Laya.Sprite();
      space1.height = 10 * PixelRatio;
      this.goodsDescPanel.addChild(space1);
      let nameText = new Laya.Text();
      nameText.pos(0, 12 * PixelRatio);
      nameText.text = this.goodsInfo.name;
      nameText.fontSize = 14 * PixelRatio;
      nameText.color = "white";
      if (this.goodsInfo.sign) {
        nameText.text = nameText.text + "-" + this.goodsInfo.sign;
      }
      if (this.goodsInfo.qianghuaLevel) {
        nameText.text = nameText.text + " +" + this.goodsInfo.qianghuaLevel;
      }
      nameText.color = QutityColor[this.goodsInfo.qutity];
      nameText.width = this.goodsDescPanel.width;
      nameText.align = "center";
      this.goodsDescPanel.addChild(nameText);
      this.goodsDescPanel.addChild(new Laya.Sprite());
      if (this.goodsInfo.gaojingLevel) {
        let jinglianPanel = new Laya.Sprite();
        let gaojingImg = new Laya.Image(`${ServiceIp}images/room/label/gaojing-star.png`);
        gaojingImg.size(gaojingImg.width * PixelRatio, gaojingImg.height * PixelRatio);
        gaojingImg.mask = jinglianPanel;
        gaojingImg.pos(2 * PixelRatio, 24 * PixelRatio);
        this.goodsDescPanel.addChild(gaojingImg);
        jinglianPanel.graphics.drawRect(0, 0, gaojingImg.width / 9 * this.goodsInfo.gaojingLevel, gaojingImg.height, "#ffffff");
      } else if (this.goodsInfo.jinglianLevel) {
        let jinglianPanel = new Laya.Sprite();
        let jinglianImg = new Laya.Image(`${ServiceIp}images/room/label/jinglian-star.png`);
        jinglianImg.size(jinglianImg.width * PixelRatio, jinglianImg.height * PixelRatio);
        jinglianImg.mask = jinglianPanel;
        this.goodsDescPanel.addChild(jinglianImg);
        jinglianPanel.graphics.drawRect(0, 0, jinglianImg.width / 9 * this.goodsInfo.jinglianLevel, jinglianImg.height, "#ffffff");
      }
      let typeText = new Laya.Text();
      typeText.pos(6 * PixelRatio, 30 * PixelRatio);
      typeText.text = "类型：" + this.goodsInfo.typeDesc + "-" + this.goodsInfo.limit;
      typeText.fontSize = 12 * PixelRatio;
      typeText.color = "white";
      this.goodsDescPanel.addChild(typeText);
      let levelText = new Laya.Text();
      levelText.pos(6 * PixelRatio, 45 * PixelRatio);
      levelText.text = "要求级别：" + this.goodsInfo.level;
      levelText.fontSize = 12 * PixelRatio;
      levelText.color = "white";
      this.goodsDescPanel.addChild(levelText);
      let naijiuText = new Laya.Text();
      naijiuText.pos(6 * PixelRatio, 60 * PixelRatio);
      naijiuText.text = "耐久：-/-";
      naijiuText.fontSize = 12 * PixelRatio;
      naijiuText.color = "white";
      this.goodsDescPanel.addChild(naijiuText);
      let xiangqianPanel;
      if (!this.goodsInfo.autoXiangQian) {
        xiangqianPanel = new Laya.Sprite();
        xiangqianPanel.loadImage(`${ServiceIp}images/room/label/xiangqiankuang.png`);
        xiangqianPanel.size(xiangqianPanel.width * PixelRatio, xiangqianPanel.height * PixelRatio);
        xiangqianPanel.pos(6 * PixelRatio, 75 * PixelRatio);
        this.goodsDescPanel.addChild(xiangqianPanel);
      }
      if (!this.goodsInfo.stoneType) {
        let xiangqianText = new Laya.Text();
        xiangqianText.text = "未镶嵌";
        xiangqianText.pos(6 * PixelRatio, 110 * PixelRatio);
        xiangqianText.color = "#4cfa09";
        xiangqianText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(xiangqianText);
      }
      if (this.goodsInfo.stoneType && xiangqianPanel) {
        let huanshi = GoodsInfo[this.goodsInfo.stoneType];
        let stone = new Laya.Sprite();
        stone.loadImage(huanshi.bgImg);
        stone.size(xiangqianPanel.width - 2 * PixelRatio, xiangqianPanel.height - 2 * PixelRatio);
        stone.pos(1 * PixelRatio, 1 * PixelRatio);
        xiangqianPanel.addChild(stone);
        let xiangqianText = new Laya.Text();
        xiangqianText.text = "镶嵌:" + huanshi.name;
        xiangqianText.pos(6 * PixelRatio, 110 * PixelRatio);
        xiangqianText.color = "#4cfa09";
        xiangqianText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(xiangqianText);
      }
      if (this.goodsInfo.creator) {
        let creatorText = new Laya.Label();
        creatorText.text = "打造者:" + this.goodsInfo.creator + " ";
        creatorText.pos(6 * PixelRatio, 122 * PixelRatio);
        creatorText.color = "#4cfa09";
        creatorText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(creatorText);
      }
      let space3 = new Laya.Sprite();
      space3.height = 3 * PixelRatio;
      this.goodsDescPanel.addChild(space3);
      if (this.goodsInfo.hp || this.goodsInfo.jinglianHp || this.goodsInfo.qianghuaHp) {
        let hpText2 = new Laya.Label("生命:" + getEquipHp(this.goodsInfo) + " ");
        hpText2.x = 6 * PixelRatio;
        hpText2.color = "yellow";
        hpText2.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(hpText2);
      }
      if (this.goodsInfo.power || this.goodsInfo.jinglianPower || this.goodsInfo.qianghuaPower) {
        let powerText2 = new Laya.Label("力量:" + getEquipPower(this.goodsInfo) + " ");
        powerText2.x = 6 * PixelRatio;
        powerText2.color = "yellow";
        powerText2.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(powerText2);
      }
      if (this.goodsInfo.speed) {
        let speedText2 = new Laya.Label("速度:" + this.goodsInfo.speed + " ");
        speedText2.x = 6 * PixelRatio;
        speedText2.color = "yellow";
        speedText2.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(speedText2);
      }
      if (this.goodsInfo.killValue || this.goodsInfo.qianghuaKillValue) {
        let killText = new Laya.Label("必杀:" + getEquipKillValue(this.goodsInfo) + " ");
        killText.x = 6 * PixelRatio;
        killText.color = "yellow";
        killText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(killText);
      }
      if (this.goodsInfo.luckyValue || this.goodsInfo.qianghuaLuckyValue) {
        let luckyText = new Laya.Label("幸运:" + getEquipLuckyValue(this.goodsInfo) + " ");
        luckyText.x = 6 * PixelRatio;
        luckyText.color = "yellow";
        luckyText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(luckyText);
      }
      if (this.goodsInfo.mp || this.goodsInfo.jinglianMp || this.goodsInfo.qianghuaMp) {
        let mpText2 = new Laya.Label("灵力:" + getEquipMp(this.goodsInfo) + " ");
        mpText2.x = 6 * PixelRatio;
        mpText2.color = "yellow";
        mpText2.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(mpText2);
      }
      let space4 = new Laya.Sprite();
      space4.height = 3 * PixelRatio;
      this.goodsDescPanel.addChild(space4);
      if (this.goodsInfo.pingfen) {
        let pingfenText = new Laya.Label();
        pingfenText.text = "评分:" + (this.goodsInfo.pingfen || "-") + " ";
        if (this.goodsInfo.jinglianPingfen) {
          pingfenText.text += `+ ${this.goodsInfo.jinglianPingfen} `;
        }
        if (this.goodsInfo.qianghuaPingfen) {
          pingfenText.text += `+ ${this.goodsInfo.qianghuaPingfen} `;
        }
        pingfenText.pos(6 * PixelRatio, 122 * PixelRatio);
        pingfenText.color = "#4cfa09";
        pingfenText.fontSize = 12 * PixelRatio;
        this.goodsDescPanel.addChild(pingfenText);
      }
      if (this.goodsInfo.stoneType && xiangqianPanel) {
      } else {
        let space2 = new Laya.Sprite();
        space2.height = 10 * PixelRatio;
        this.goodsDescPanel.addChild(space2);
        let descText = new Laya.Text();
        descText.pos(6 * PixelRatio, 135 * PixelRatio);
        descText.width = this.goodsDescPanel.width - 12 * PixelRatio;
        descText.text = this.goodsInfo.desc;
        descText.fontSize = 12 * PixelRatio;
        descText.color = "white";
        descText.wordWrap = true;
        this.goodsDescPanel.addChild(descText);
      }
    }
    onClickGoods(e) {
      e.stopPropagation();
      if (this.goodsDescPanel) {
        Laya.stage.removeChild(this.goodsDescPanel);
      }
    }
  };

  // src/entity/ui/MyButton.ts
  var MyButton = class extends Laya.Sprite {
    constructor(defaultImg, downImg) {
      super();
      this.defaultImg = defaultImg;
      this.downImg = downImg;
      this.on(Laya.Event.MOUSE_DOWN, this, this.handleDown);
      this.on(Laya.Event.MOUSE_UP, this, this.handleUp);
      this.loadImage(defaultImg);
    }
    getDefaultImg() {
      return this.defaultImg;
    }
    setDefaultImg(img) {
      this.defaultImg = img;
      this.loadImage(img);
    }
    getDownImg() {
      return this.downImg;
    }
    setDownImg(img) {
      this.downImg = img;
    }
    destroy(destroyChild) {
      this.off(Laya.Event.MOUSE_DOWN, this, this.handleDown);
      this.off(Laya.Event.MOUSE_UP, this, this.handleUp);
    }
    handleDown() {
      this.loadImage(this.downImg);
    }
    handleUp() {
      this.loadImage(this.defaultImg);
    }
  };

  // src/entity/ui/myBag.ts
  var bag;
  var myPanel;
  var bagPanel;
  var equipBox;
  var equipPanel;
  var pageCount = 8;
  var current = 0;
  var totalPage = 0;
  var rightMenu;
  var rateText;
  var menuList = [
    { name: "放入个人仓库" },
    { name: "装备", typeDesc: "装备" },
    { name: "普通修理", typeDesc: "装备" },
    { name: "高级修理", typeDesc: "装备" },
    { name: "放入家族仓库" },
    { name: "取出", storeType: 2 },
    { name: "捐献家族" },
    { name: "解除交易限制", bind: true }
  ];
  var optList = [
    { name: "equip", active: 1 },
    { name: "xiangqian" },
    { name: "hecheng" },
    { name: "qianghua" },
    { name: "jinglian" },
    { name: "fenjie" }
  ];
  var equipTypeMap = {
    "头饰": "head",
    "背饰": "wing",
    "衣服": "body",
    "手套": "hand"
  };
  var hechengList = [];
  var qianghuaEquip = null;
  var qianghuaGoods = null;
  var jinglianEquip = null;
  var jinglianGoods = null;
  var xiangqianEquip = null;
  var hpText;
  var powerText;
  var speedText;
  var mpText;
  var killValueText;
  var luckyValueText;
  var roleImage;
  var currentOptName = "equip";
  var hechengRequestFlag = false;
  var levelupRequestFlag = false;
  var removeEquipRequestFlag = false;
  var wearEquipRequestFlag = false;
  var qianghuaRequestFlag = false;
  var jinglianRequestFlag = false;
  var getMyBag = (closeCB, target) => {
    let role = RoleService.getInstance().role;
    let pomelo = window.pomelo;
    pomelo.off("onXiangqian", handleXiangQianResult);
    pomelo.on("onXiangqian", handleXiangQianResult);
    let list2 = role.getBag();
    current = 0;
    currentOptName = "equip";
    optList = [
      { name: "equip", active: 1 },
      { name: "xiangqian" },
      { name: "hecheng" },
      { name: "qianghua" },
      { name: "jinglian" },
      { name: "fenjie" }
    ];
    hechengList = [];
    xiangqianEquip = null;
    qianghuaEquip = null;
    qianghuaGoods = null;
    jinglianEquip = null;
    jinglianGoods = null;
    totalPage = Math.ceil(list2.length / pageCount);
    myPanel = new Laya.Sprite();
    bagPanel = new Laya.Sprite();
    bagPanel.loadImage(`${myUiUrl}/mybag.png`);
    bagPanel.size(bagPanel.width * PixelRatio, bagPanel.height * PixelRatio);
    bagPanel.pos(0, 0);
    rightMenu = null;
    renderRoleInfo(role);
    let close = new Laya.Image(`${roomBtnUrl}/close.png`);
    close.size(close.width * PixelRatio, close.height * PixelRatio);
    close.pos(330 * PixelRatio, 10 * PixelRatio);
    close.on(Laya.Event.CLICK, target, closeCB);
    bagPanel.addChild(close);
    bag = new Laya.Sprite();
    bag.loadImage(`${myUiUrl}/bag-bag.png`);
    bag.size(bag.width * PixelRatio, bag.height * PixelRatio);
    bag.pos(12 * PixelRatio, 262 * PixelRatio);
    bagPanel.addChild(bag);
    let pre = new Laya.Image(`${ServiceIp}images/hall/pre.png`);
    pre.size(26 * PixelRatio, 26 * PixelRatio);
    pre.pos(223 * PixelRatio, 486 * PixelRatio);
    bagPanel.addChild(pre);
    pre.on(Laya.Event.CLICK, void 0, () => {
      if (current === 0)
        return;
      current--;
      currentLabel.text = pad(current + 1);
      renderBagGoods(role, list2);
    });
    let next = new Laya.Image(`${ServiceIp}images/hall/next.png`);
    next.size(26 * PixelRatio, 26 * PixelRatio);
    next.pos(320 * PixelRatio, 486 * PixelRatio);
    bagPanel.addChild(next);
    next.on(Laya.Event.CLICK, void 0, () => {
      if (current >= totalPage - 1)
        return;
      current++;
      currentLabel.text = pad(current + 1);
      renderBagGoods(role, list2);
    });
    let sperate = new Laya.Image(`${ServiceIp}images/hall/number/sperate2.png`);
    sperate.size(8 * PixelRatio, 15 * PixelRatio);
    sperate.pos(280 * PixelRatio, 492 * PixelRatio);
    bagPanel.addChild(sperate);
    let currentLabel = new Laya.Text();
    currentLabel.text = pad(current + 1);
    currentLabel.pos(260 * PixelRatio, 489 * PixelRatio);
    currentLabel.fontSize = 20 * PixelRatio;
    currentLabel.color = "white";
    bagPanel.addChild(currentLabel);
    let totalLabel = new Laya.Text();
    totalLabel.text = pad(totalPage);
    totalLabel.pos(289 * PixelRatio, 489 * PixelRatio);
    totalLabel.fontSize = 20 * PixelRatio;
    totalLabel.color = "white";
    bagPanel.addChild(totalLabel);
    renderBagGoods(role, list2);
    bagPanel.on(Laya.Event.CLICK, () => {
      if (rightMenu) {
        bagPanel.removeChild(rightMenu);
        rightMenu = null;
      }
    });
    renderEquipBox();
    if (equipBox) {
      equipBox.pos(bagPanel.width - 1 * PixelRatio, 30 * PixelRatio);
      myPanel.addChild(equipBox);
      equipBox.on(Laya.Event.CLICK, () => {
        if (rightMenu) {
          bagPanel.removeChild(rightMenu);
          rightMenu = null;
        }
      });
    }
    myPanel.addChild(bagPanel);
    myPanel.size(equipBox.width + bagPanel.width, bagPanel.height);
    return myPanel;
  };
  function renderRoleInfo(role) {
    roleImage = role.getRoleImage();
    roleImage.pos(47 * PixelRatio, 150 * PixelRatio);
    bagPanel.addChild(roleImage);
    let levelText = new Laya.Label();
    levelText.pos(47 * PixelRatio, 52 * PixelRatio);
    levelText.text = role.level + "";
    levelText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(levelText);
    let sexText = new Laya.Label();
    sexText.pos(105 * PixelRatio, 52 * PixelRatio);
    sexText.text = role.sex === 0 /* BOY */ ? "男" : "女";
    sexText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(sexText);
    let nameText = new Laya.Label();
    nameText.width = 75 * PixelRatio;
    nameText.pos(168 * PixelRatio, 52 * PixelRatio);
    nameText.text = role.name;
    nameText.overflow = "hidden";
    nameText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(nameText);
    let idText = new Laya.Label();
    idText.pos(290 * PixelRatio, 52 * PixelRatio);
    idText.text = role.id + "";
    idText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(idText);
    hpText = new Laya.Label();
    hpText.pos(220 * PixelRatio, 77 * PixelRatio);
    hpText.text = role.props.hp + "";
    hpText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(hpText);
    powerText = new Laya.Label();
    powerText.pos(220 * PixelRatio, 98 * PixelRatio);
    powerText.text = role.props.power + "";
    powerText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(powerText);
    speedText = new Laya.Label();
    speedText.pos(210 * PixelRatio, 121 * PixelRatio);
    speedText.text = role.props.speed + "";
    speedText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(speedText);
    mpText = new Laya.Label();
    mpText.pos(210 * PixelRatio, 144 * PixelRatio);
    mpText.text = role.props.mp + "";
    mpText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(mpText);
    killValueText = new Laya.Label();
    killValueText.pos(320 * PixelRatio, 121 * PixelRatio);
    killValueText.text = role.props.killValue + "";
    killValueText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(killValueText);
    luckyValueText = new Laya.Label();
    luckyValueText.pos(320 * PixelRatio, 144 * PixelRatio);
    luckyValueText.text = role.props.luckyValue + "";
    luckyValueText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(luckyValueText);
    let expText = new Laya.Label();
    expText.pos(220 * PixelRatio, 167 * PixelRatio);
    expText.text = `${Math.ceil(role.exp)} (${Math.ceil(Math.min(getFixed(role.exp / LevelExp[role.level - 1]), 1) * 100)}%)`;
    expText.fontSize = 12 * PixelRatio;
    bagPanel.addChild(expText);
    let levelBtn = new MyButton(`${roomBtnUrl}/btn-long.png`, `${roomBtnUrl}/map-long.png`);
    levelBtn.size(40 * PixelRatio, 20 * PixelRatio);
    levelBtn.pos(320 * PixelRatio, 163 * PixelRatio);
    bagPanel.addChild(levelBtn);
    let levelBtnText = new Laya.Text();
    levelBtnText.text = "升级";
    levelBtnText.size(40 * PixelRatio, 20 * PixelRatio);
    levelBtnText.pos(0, 0);
    levelBtnText.fontSize = 11 * PixelRatio;
    levelBtnText.color = "white";
    levelBtnText.align = "center";
    levelBtnText.valign = "middle";
    levelBtn.addChild(levelBtnText);
    levelBtn.on(Laya.Event.CLICK, () => {
      showConfirm("确定升级吗", () => {
        if (levelupRequestFlag)
          return;
        levelupRequestFlag = true;
        request("area.playerHandler.levelUp", null, (res) => {
          levelupRequestFlag = false;
          if (res.code === 200) {
            role.level = res.data.level;
            role.exp = res.data.exp;
            bagPanel.removeChild(levelText);
            bagPanel.removeChild(sexText);
            bagPanel.removeChild(nameText);
            bagPanel.removeChild(idText);
            bagPanel.removeChild(hpText);
            bagPanel.removeChild(powerText);
            bagPanel.removeChild(speedText);
            bagPanel.removeChild(mpText);
            bagPanel.removeChild(killValueText);
            bagPanel.removeChild(luckyValueText);
            bagPanel.removeChild(expText);
            bagPanel.removeChild(levelBtn);
            renderRoleInfo(role);
          }
        });
      });
    });
  }
  function updateRoleProps() {
    let role = RoleService.getInstance().role;
    hpText.text = role.props.hp + "";
    mpText.text = role.props.mp + "";
    powerText.text = role.props.power + "";
    speedText.text = role.props.speed + "";
    killValueText.text = role.props.killValue + "";
    luckyValueText.text = role.props.luckyValue + "";
  }
  function updateRoleImage(role) {
    bagPanel.removeChild(roleImage);
    roleImage = role.getRoleImage();
    roleImage.pos(47 * PixelRatio, 135 * PixelRatio);
    bagPanel.addChild(roleImage);
  }
  function renderBagGoods(role, list2) {
    let start = current * pageCount;
    bag.removeChildren();
    let goldText = new Laya.Label();
    goldText.text = role.gold + " ";
    goldText.pos(49 * PixelRatio, 203 * PixelRatio);
    goldText.fontSize = 12 * PixelRatio;
    bag.addChild(goldText);
    let dianquanText = new Laya.Label();
    dianquanText.pos(155 * PixelRatio, 203 * PixelRatio);
    dianquanText.text = role.dianquan + " ";
    dianquanText.fontSize = 12 * PixelRatio;
    bag.addChild(dianquanText);
    let youxibiText = new Laya.Label();
    youxibiText.pos(273 * PixelRatio, 203 * PixelRatio);
    youxibiText.text = role.youxibi + " ";
    youxibiText.fontSize = 12 * PixelRatio;
    bag.addChild(youxibiText);
    for (let i = 0; i < pageCount; i++) {
      let goods = list2[i + start];
      if (!goods)
        return;
      let good = new Laya.Sprite();
      good.size(76 * PixelRatio, 74 * PixelRatio);
      good.pos(13 * PixelRatio + i % 4 * (good.width + 5 * PixelRatio), 43 * PixelRatio + Math.floor(i / 4) * (good.height + 4 * PixelRatio));
      bag.addChild(good);
      let goodsInfo = role.getGoodsInfo(goods.id, goods.type) || {};
      let goodImg = new BagGoods(goodsInfo);
      goodImg.pos(3 * PixelRatio, 3 * PixelRatio);
      good.addChild(goodImg);
      goodImg.on(Laya.Event.CLICK, (e) => {
        goodImg.onClickGoods(e);
        onClickGoods(e, good, goodsInfo);
      });
      let goodCount = new Laya.Label(goods.count + "");
      goodCount.pos(57 * PixelRatio, 40 * PixelRatio);
      goodCount.fontSize = 12 * PixelRatio;
      goodCount.color = "black";
      good.addChild(goodCount);
      let goodName = new Laya.Label(goodsInfo.name || "");
      goodName.pos(4 * PixelRatio, 57 * PixelRatio);
      goodName.fontSize = 12 * PixelRatio;
      goodName.color = QutityColor[goodsInfo.qutity];
      good.addChild(goodName);
    }
  }
  function handleXiangQianResult(res) {
    let role = RoleService.getInstance().role;
    let equip = res.equip;
    let goodsInfo = role.getGoodsInfo(equip.goodsId || equip.type, equip.goodsType || equip.type);
    xiangqianEquip = __spreadValues(__spreadValues({}, goodsInfo), equip);
    let equipImg = new BagGoods(xiangqianEquip);
    equipImg.pos(205 * PixelRatio, 63 * PixelRatio);
    equipPanel.addChild(equipImg);
    equipImg.on(Laya.Event.CLICK, () => {
      equipPanel.removeChildren();
    });
    let equipText = new Laya.Label();
    equipText.size(68 * PixelRatio, 14 * PixelRatio);
    equipText.pos(195 * PixelRatio, 118 * PixelRatio);
    equipText.text = goodsInfo.name;
    equipText.color = QutityColor[equip.qutity];
    equipText.fontSize = 11 * PixelRatio;
    equipText.align = "center";
    equipText.valign = "middle";
    equipPanel.addChild(equipText);
    role.equipMap.set(equip.goodsId || equip.type, equip);
    role.addGoods(equip.goodsId || equip.type, equip.goodsType || equip.type);
    role.setBag(role.bag);
    renderBagGoods(role, role.bag);
  }
  function onClickGoods(e, good, goodsInfo) {
    let role = RoleService.getInstance().role;
    switch (currentOptName) {
      case "equip":
        if (isEquip(goodsInfo.type)) {
          let part = equipTypeMap[goodsInfo.typeDesc];
          wearEquip(role, part, goodsInfo.goodsId || goodsInfo.type);
          return;
        }
        break;
      case "hecheng":
        if (goodsInfo.typeDesc === "幻石") {
          if (hechengList.length === 5) {
            return;
          }
          if (hechengList.length && hechengList[0].type !== goodsInfo.type) {
            showTips("幻石类型必须相同");
            return;
          }
          hechengList.push(goodsInfo);
          renderHuanshiHechengPanel();
          return;
        } else if (goodsInfo.hecheng) {
          if (hechengList.length === 5) {
            return;
          }
          hechengList.push(goodsInfo);
          renderHechengPanel(goodsInfo);
          return;
        }
        break;
      case "xiangqian":
        if (isCanXiangqianEquip(goodsInfo)) {
          renderXiangqianPanel(goodsInfo);
          return;
        }
        if (goodsInfo.typeDesc === "幻石") {
          if (!xiangqianEquip) {
            showTips("请先放入装备");
            return;
          }
          renderXiangqianPanel(xiangqianEquip, goodsInfo);
          return;
        }
        break;
      case "qianghua":
        if (isCanQianghuaEquip(goodsInfo)) {
          qianghuaEquip = goodsInfo;
          renderQianghuaPanel();
          return;
        }
        if (qianghuaEquip && isQianghuashi(goodsInfo.goodsType)) {
          if (qianghuaEquip.qianghuaLevel + 1 > goodsInfo.qianghuaLevel) {
            showTips("强化石等级过低");
            return;
          }
          if (qianghuaEquip.qianghuaLevel + 1 < goodsInfo.qianghuaLevel) {
            showTips("强化石等级过高");
            return;
          }
          qianghuaGoods = goodsInfo;
          renderQianghuaPanel();
          return;
        }
        break;
      case "jinglian":
        if (isCanJinglianEquip(goodsInfo)) {
          jinglianEquip = goodsInfo;
          renderJinglianPanel();
          return;
        }
        if (jinglianEquip && (isJinglianshi(goodsInfo.goodsType) || isGaojing(goodsInfo.goodsType))) {
          if (!jinglianGoods) {
            jinglianGoods = { type: goodsInfo.goodsType, count: 1 };
            renderJinglianPanel();
            return;
          } else {
            if (jinglianGoods.type !== goodsInfo.goodsType) {
              showTips("精炼石类型不一致");
              return;
            }
            if (jinglianGoods.count === 4) {
              showTips("最多放4颗精炼石");
              return;
            }
            if (isJinglianshi(goodsInfo.goodsType) && (jinglianEquip.gaojingLevel || jinglianEquip.jinglianLevel === 9)) {
              showTips("不能进行普通精炼");
              return;
            }
            jinglianGoods.count++;
            renderJinglianPanel();
            return;
          }
        }
        break;
      case "fenjie":
        xiangqianEquip = null;
        if (isCanFenjieEquip(goodsInfo)) {
          renderFenjiePanel(goodsInfo);
        } else {
          showTips("该物品不能分解");
        }
        return;
    }
    renderRightMenu(good, goodsInfo, 0);
  }
  function renderEquipPanel() {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (role.head) {
      let headImg = new BagGoods(role.getEquip(role.head.goodsId || role.head.type));
      headImg.name = "head";
      headImg.pos(18 * PixelRatio, 64 * PixelRatio);
      equipPanel.addChild(headImg);
      headImg.on(Laya.Event.CLICK, () => {
        removeEquip(role, headImg, "head");
      });
    }
    if (role.wing) {
      let wingImg = new BagGoods(role.getEquip(role.wing.goodsId || role.wing.type));
      wingImg.name = "wing";
      wingImg.pos(203 * PixelRatio, 168 * PixelRatio);
      equipPanel.addChild(wingImg);
      wingImg.on(Laya.Event.CLICK, () => {
        removeEquip(role, wingImg, "wing");
      });
    }
    if (role.body) {
      let bodyImg = new BagGoods(role.getEquip(role.body.goodsId || role.body.type));
      bodyImg.name = "body";
      bodyImg.pos(18 * PixelRatio, 189 * PixelRatio);
      equipPanel.addChild(bodyImg);
      bodyImg.on(Laya.Event.CLICK, () => {
        removeEquip(role, bodyImg, "body");
      });
    }
    if (role.hand) {
      let handImg = new BagGoods(role.getEquip(role.hand.goodsId || role.hand.type));
      handImg.name = "hand";
      handImg.pos(203 * PixelRatio, 231 * PixelRatio);
      equipPanel.addChild(handImg);
      handImg.on(Laya.Event.CLICK, () => {
        removeEquip(role, handImg, "hand");
      });
    }
  }
  function removeEquip(role, goods, part) {
    if (removeEquipRequestFlag)
      return;
    removeEquipRequestFlag = true;
    request("area.playerHandler.removeEquip", { part, equipId: goods.goodsInfo.goodsId || goods.goodsInfo.type }, (res) => {
      removeEquipRequestFlag = false;
      if (res.code !== 200) {
        showTips(res.msg);
      } else {
        equipPanel.removeChild(goods);
        role.addGoods(goods.goodsInfo.goodsId || goods.goodsInfo.type, goods.goodsInfo.type);
        role[part] = null;
        role.setBag(role.bag);
        renderBagGoods(role, role.bag);
        role.subProps(goods.goodsInfo);
        updateRoleProps();
        role.updateRoleEquip(part);
        updateRoleImage(role);
      }
    });
  }
  function wearEquip(role, part, equipId) {
    if (wearEquipRequestFlag)
      return;
    if (role[part]) {
      let goods = equipPanel.getChildByName(part);
      equipPanel.removeChild(goods);
      role.addGoods(goods.goodsInfo.goodsId || goods.goodsInfo.type, goods.goodsInfo.type);
      role[part] = null;
      role.subProps(goods.goodsInfo);
    }
    wearEquipRequestFlag = true;
    request("area.playerHandler.wearEquip", { part, equipId }, (res) => {
      wearEquipRequestFlag = false;
      if (res.code === 200) {
        role.useGoods(equipId, 1);
        role.setBag(role.bag);
        renderBagGoods(role, role.bag);
        role[part] = role.getEquip(equipId);
        renderEquipPanel();
        role.addProps(role[part]);
        updateRoleProps();
        role.updateRoleEquip(part);
        updateRoleImage(role);
      } else {
        showTips(res.msg);
      }
    });
  }
  function renderFenjiePanel(goodsInfo) {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (goodsInfo) {
      let equipImg = new BagGoods(goodsInfo);
      equipImg.pos(54 * PixelRatio, 111 * PixelRatio);
      equipPanel.addChild(equipImg);
      equipImg.on(Laya.Event.CLICK, () => {
        equipPanel.removeChildren();
      });
      let equipText = new Laya.Label();
      equipText.size(68 * PixelRatio, 14 * PixelRatio);
      equipText.pos(47 * PixelRatio, 165 * PixelRatio);
      equipText.text = goodsInfo.name;
      equipText.color = QutityColor[goodsInfo.qutity];
      equipText.fontSize = 11 * PixelRatio;
      equipText.align = "center";
      equipText.valign = "middle";
      equipPanel.addChild(equipText);
      let tishiText = new Laya.Text();
      tishiText.width = equipPanel.width;
      tishiText.pos(0, 60 * PixelRatio);
      tishiText.text = getFenjieResult(goodsInfo);
      tishiText.fontSize = 14 * PixelRatio;
      tishiText.color = "red";
      tishiText.align = "center";
      tishiText.valign = "middle";
      equipPanel.addChild(tishiText);
      let submitBtn = getSubmitBtn();
      submitBtn.pos(77 * PixelRatio, 235 * PixelRatio);
      equipPanel.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        request("area.playerHandler.fenjie", { equipId: goodsInfo.goodsId }, (res) => {
          if (res.code === 200) {
            equipPanel.removeChildren();
            let texiao = new Laya.Animation();
            texiao.name = "texiao-xiangqian";
            texiao.source = `${ServiceIp}images/ui/texiao-xiangqian.atlas`;
            texiao.x = 148 * PixelRatio;
            texiao.y = 95 * PixelRatio;
            texiao.scale(PixelRatio, PixelRatio);
            texiao.play(0, false);
            equipPanel.addChild(texiao);
            texiao.on(Laya.Event.COMPLETE, () => {
              equipPanel.removeChildByName("texiao-xiangqian");
            });
            if (res.data.type) {
              let huanshi = GoodsInfo[res.data.type];
              let huanshiImg = new Laya.Image(huanshi.bgImg);
              huanshiImg.size(huanshiImg.width * PixelRatio, huanshiImg.height * PixelRatio);
              huanshiImg.pos(165 * PixelRatio, 111 * PixelRatio);
              equipPanel.addChild(huanshiImg);
              huanshiImg.on(Laya.Event.CLICK, () => {
                equipPanel.removeChildren();
              });
              let huanshiText = new Laya.Text();
              huanshiText.pos(150 * PixelRatio, 166 * PixelRatio);
              huanshiText.width = 75 * PixelRatio;
              huanshiText.text = res.data.count + "*" + huanshi.name;
              huanshiText.color = QutityColor[huanshi.qutity];
              huanshiText.fontSize = 10 * PixelRatio;
              equipPanel.addChild(huanshiText);
            }
            role.useGoods(goodsInfo.goodsId, 1);
            if (res.data.type) {
              role.addGoods(res.data.type, res.data.type, res.data.count);
            }
            role.setBag(role.bag);
            renderBagGoods(role, role.bag);
          } else {
            showTips("分解失败");
          }
        });
      });
    }
  }
  function renderJinglianPanel() {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    let jinglianData = null;
    if (jinglianEquip) {
      let equipImg = new BagGoods(jinglianEquip);
      equipImg.pos(200 * PixelRatio, 119 * PixelRatio);
      equipPanel.addChild(equipImg);
      equipImg.on(Laya.Event.CLICK, () => {
        jinglianEquip = null;
        jinglianGoods = null;
        renderJinglianPanel();
      });
    }
    if (jinglianGoods) {
      let goodsInfo = GoodsInfo[jinglianGoods.type];
      for (let i = 0; i < jinglianGoods.count; i++) {
        let jinglianshi = new BagGoods(goodsInfo);
        jinglianshi.pos((15 + i % 2 * 84) * PixelRatio, (77 + Math.floor(i / 2) * 72) * PixelRatio);
        equipPanel.addChild(jinglianshi);
        jinglianshi.on(Laya.Event.CLICK, () => {
          jinglianGoods.count--;
          if (jinglianGoods.count === 0)
            jinglianGoods = null;
          renderJinglianPanel();
        });
      }
    }
    if (jinglianEquip && jinglianGoods) {
      jinglianData = isJinglianshi(jinglianGoods.type) ? jinglianMap[jinglianEquip.jinglianLevel || 0] : gaojingMap[jinglianEquip.gaojingLevel || 0];
      let jinglianExp = jinglianData.exp[Math.floor(jinglianEquip.stoneType % 5100 / 10)];
      if (role.exp < jinglianExp) {
        let expText2 = new Laya.Label();
        expText2.pos(85 * PixelRatio, 248 * PixelRatio);
        expText2.text = "经验不足";
        expText2.fontSize = 18 * PixelRatio;
        expText2.color = "red";
        equipPanel.addChild(expText2);
        return;
      }
      let rateText2 = new Laya.Label();
      rateText2.pos(125 * PixelRatio, 48 * PixelRatio);
      rateText2.text = Math.ceil(jinglianData.rate[jinglianGoods.count - 1] * 100) + "%";
      rateText2.fontSize = 18 * PixelRatio;
      rateText2.color = "red";
      equipPanel.addChild(rateText2);
      let expText = new Laya.Label();
      expText.pos(50 * PixelRatio, 228 * PixelRatio);
      expText.text = `需要经验：${jinglianExp}`;
      expText.fontSize = 18 * PixelRatio;
      expText.color = "red";
      equipPanel.addChild(expText);
      let submitBtn = getSubmitBtn();
      submitBtn.pos(84 * PixelRatio, 265 * PixelRatio);
      equipPanel.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        if (jinglianRequestFlag)
          return;
        jinglianRequestFlag = true;
        request("area.playerHandler.jinglian", __spreadValues({ equipId: jinglianEquip.goodsId }, jinglianGoods), (res) => {
          jinglianRequestFlag = false;
          if (res.code === 200) {
            if (!res.data.result)
              showTips("很遗憾，精炼失败！");
            role.setEquip(jinglianEquip.goodsId, res.data.equip);
            jinglianEquip = __spreadValues(__spreadValues({}, jinglianEquip), res.data.equip);
            role.useGoods(jinglianGoods.type, jinglianGoods.count);
            role.setBag(role.bag);
            renderBagGoods(role, role.bag);
            equipPanel.removeChildren();
            let texiao = new Laya.Animation();
            texiao.name = "texiao-qianghua";
            texiao.source = `${ServiceIp}images/ui/texiao-qianghua.atlas`;
            texiao.x = 186 * PixelRatio;
            texiao.y = 105 * PixelRatio;
            texiao.scale(PixelRatio, PixelRatio);
            texiao.interval = 60;
            texiao.play(0, false);
            equipPanel.addChild(texiao);
            texiao.on(Laya.Event.COMPLETE, () => {
              equipPanel.removeChildByName("texiao-qianghua");
            });
            let equipImg = new BagGoods(__spreadValues(__spreadValues({}, jinglianEquip), res.data.equip));
            equipImg.pos(200 * PixelRatio, 119 * PixelRatio);
            equipPanel.addChild(equipImg);
            equipImg.on(Laya.Event.CLICK, () => {
              jinglianEquip = null;
              equipPanel.removeChild(equipImg);
            });
          } else {
            showTips("精炼失败，请刷新再试");
          }
          jinglianGoods = null;
        });
      });
    }
  }
  function renderQianghuaPanel() {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (qianghuaEquip) {
      let equipImg = new BagGoods(qianghuaEquip);
      equipImg.pos(62 * PixelRatio, 55 * PixelRatio);
      equipPanel.addChild(equipImg);
      equipImg.on(Laya.Event.CLICK, () => {
        qianghuaEquip = null;
        equipPanel.removeChild(equipImg);
      });
    }
    if (qianghuaGoods) {
      let qianghuashi = new BagGoods(qianghuaGoods);
      qianghuashi.pos(61 * PixelRatio, 161 * PixelRatio);
      equipPanel.addChild(qianghuashi);
      qianghuashi.on(Laya.Event.CLICK, () => {
        qianghuaGoods = null;
        equipPanel.removeChild(qianghuashi);
      });
    }
    if (qianghuaEquip && qianghuaGoods) {
      let submitBtn = getSubmitBtn();
      submitBtn.pos(84 * PixelRatio, 265 * PixelRatio);
      equipPanel.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        if (qianghuaRequestFlag)
          return;
        qianghuaRequestFlag = true;
        request("area.playerHandler.qianghua", { equipId: qianghuaEquip.goodsId, qianghuaType: qianghuaGoods.goodsType }, (res) => {
          qianghuaRequestFlag = false;
          if (res.code === 200) {
            role.setEquip(qianghuaEquip.goodsId, res.data);
            role.useGoods(qianghuaGoods.goodsType, 1);
            role.setBag(role.bag);
            renderBagGoods(role, role.bag);
            equipPanel.removeChildren();
            let texiao = new Laya.Animation();
            texiao.name = "texiao-qianghua";
            texiao.source = `${ServiceIp}images/ui/texiao-qianghua.atlas`;
            texiao.x = 162 * PixelRatio;
            texiao.y = 100 * PixelRatio;
            texiao.scale(PixelRatio, PixelRatio);
            texiao.interval = 60;
            texiao.play(0, false);
            equipPanel.addChild(texiao);
            texiao.on(Laya.Event.COMPLETE, () => {
              equipPanel.removeChildByName("texiao-qianghua");
            });
            let equipImg = new BagGoods(__spreadValues(__spreadValues({}, qianghuaEquip), res.data));
            equipImg.pos(176 * PixelRatio, 114 * PixelRatio);
            equipPanel.addChild(equipImg);
            equipImg.on(Laya.Event.CLICK, () => {
              equipPanel.removeChild(equipImg);
            });
          } else {
            showTips("强化失败，请刷新再试");
          }
          qianghuaEquip = null;
          qianghuaGoods = null;
        });
      });
    }
  }
  function renderXiangqianPanel(equip, huanshi) {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (equip) {
      xiangqianEquip = equip;
      let equipImg = new BagGoods(equip);
      equipImg.pos(20 * PixelRatio, 63 * PixelRatio);
      equipPanel.addChild(equipImg);
      equipImg.on(Laya.Event.CLICK, () => {
        xiangqianEquip = null;
        renderXiangqianPanel();
      });
      let equipText = new Laya.Label();
      equipText.size(68 * PixelRatio, 14 * PixelRatio);
      equipText.pos(11 * PixelRatio, 118 * PixelRatio);
      equipText.text = equip.name;
      equipText.color = QutityColor[equip.qutity];
      equipText.fontSize = 11 * PixelRatio;
      equipText.align = "center";
      equipText.valign = "middle";
      equipPanel.addChild(equipText);
    }
    if (huanshi) {
      let huanshiImg = new Laya.Image(huanshi.bgImg);
      huanshiImg.size(huanshiImg.width * PixelRatio, huanshiImg.height * PixelRatio);
      huanshiImg.pos(115 * PixelRatio, 63 * PixelRatio);
      equipPanel.addChild(huanshiImg);
      huanshiImg.on(Laya.Event.CLICK, () => {
        renderXiangqianPanel(equip);
      });
      let huanshiText = new Laya.Label();
      huanshiText.pos(110 * PixelRatio, 119 * PixelRatio);
      huanshiText.text = huanshi.name;
      huanshiText.color = QutityColor[huanshi.qutity];
      huanshiText.fontSize = 11 * PixelRatio;
      equipPanel.addChild(huanshiText);
    }
    if (equip && huanshi) {
      let needGoodsList = EquipNeedGoodsMap[equip.part + huanshi.level];
      let enough = true;
      for (let i = 0; i < needGoodsList.length; i++) {
        let goodsInfo = GoodsInfo[needGoodsList[i].type];
        let goods = new BagGoods(__spreadValues({}, goodsInfo));
        goods.pos(28 * PixelRatio + i * (26 * PixelRatio + goods.width), 183 * PixelRatio);
        equipPanel.addChild(goods);
        let goodsText = new Laya.Label();
        let currentCount = role.getGoodsCount(goodsInfo.type);
        let needCount = needGoodsList[i].count;
        goodsText.size(55 * PixelRatio, 14 * PixelRatio);
        goodsText.pos(28 * PixelRatio + i * (26 * PixelRatio + goods.width), 237 * PixelRatio);
        goodsText.text = `${currentCount}/${needCount}`;
        goodsText.fontSize = 12 * PixelRatio;
        if (currentCount < needCount) {
          goodsText.color = "red";
          enough = false;
        } else {
          goodsText.color = "white";
        }
        goodsText.align = "center";
        goodsText.valign = "middle";
        equipPanel.addChild(goodsText);
      }
      if (enough) {
        let submitBtn = getSubmitBtn();
        submitBtn.pos(84 * PixelRatio, 265 * PixelRatio);
        equipPanel.addChild(submitBtn);
        submitBtn.on(Laya.Event.CLICK, () => {
          request("area.playerHandler.xiangqian", { equipId: equip.goodsId, equipType: equip.type || equip.goodsType, stoneType: huanshi.type }, (res) => {
            role.useGoods(equip.goodsId || equip.type, 1);
            role.useGoods(huanshi.type, 1);
            for (let i = 0; i < needGoodsList.length; i++) {
              role.useGoods(needGoodsList[i].type, needGoodsList[i].count);
            }
            role.setBag(role.bag);
            renderBagGoods(role, role.bag);
          });
          equipPanel.removeChildren();
          let texiao = new Laya.Animation();
          texiao.name = "texiao-xiangqian";
          texiao.source = `${ServiceIp}images/ui/texiao-xiangqian.atlas`;
          texiao.x = 190 * PixelRatio;
          texiao.y = 50 * PixelRatio;
          texiao.scale(PixelRatio, PixelRatio);
          texiao.play(0, false);
          equipPanel.addChild(texiao);
          texiao.on(Laya.Event.COMPLETE, () => {
            equipPanel.removeChildByName("texiao-xiangqian");
          });
        });
      }
    }
  }
  function renderHuanshiHechengPanel() {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (!hechengList.length)
      return;
    if (hechengList.length >= 2) {
      rateText = new Laya.Label();
      rateText.pos(125 * PixelRatio, 38 * PixelRatio);
      rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      rateText.fontSize = 18 * PixelRatio;
      rateText.color = "red";
      equipPanel.addChild(rateText);
    }
    if (hechengList[0]) {
      let huanshi1 = new Laya.Image(hechengList[0].bgImg);
      huanshi1.size(huanshi1.width * PixelRatio, huanshi1.height * PixelRatio);
      huanshi1.pos(44 * PixelRatio, 62 * PixelRatio);
      equipPanel.addChild(huanshi1);
      huanshi1.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi1);
        hechengList.pop();
        rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      });
    }
    if (hechengList[1]) {
      let huanshi2 = new Laya.Image(hechengList[1].bgImg);
      huanshi2.size(huanshi2.width * PixelRatio, huanshi2.height * PixelRatio);
      huanshi2.pos(169 * PixelRatio, 62 * PixelRatio);
      equipPanel.addChild(huanshi2);
      huanshi2.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi2);
        hechengList.pop();
        rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      });
    }
    if (hechengList[2]) {
      let huanshi3 = new Laya.Image(hechengList[2].bgImg);
      huanshi3.size(huanshi3.width * PixelRatio, huanshi3.height * PixelRatio);
      huanshi3.pos(106 * PixelRatio, 128 * PixelRatio);
      equipPanel.addChild(huanshi3);
      huanshi3.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi3);
        hechengList.pop();
        rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      });
    }
    if (hechengList[3]) {
      let huanshi4 = new Laya.Image(hechengList[3].bgImg);
      huanshi4.size(huanshi4.width * PixelRatio, huanshi4.height * PixelRatio);
      huanshi4.pos(44 * PixelRatio, 192 * PixelRatio);
      equipPanel.addChild(huanshi4);
      huanshi4.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi4);
        hechengList.pop();
        rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      });
    }
    if (hechengList[4]) {
      let huanshi5 = new Laya.Image(hechengList[4].bgImg);
      huanshi5.size(huanshi5.width * PixelRatio, huanshi5.height * PixelRatio);
      huanshi5.pos(169 * PixelRatio, 192 * PixelRatio);
      equipPanel.addChild(huanshi5);
      huanshi5.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi5);
        hechengList.pop();
        rateText.text = Math.max(hechengList.length, 0) * 20 + "%";
      });
    }
    let submitBtn = getSubmitBtn();
    submitBtn.pos(84 * PixelRatio, 265 * PixelRatio);
    equipPanel.addChild(submitBtn);
    submitBtn.on(Laya.Event.CLICK, () => {
      if (hechengList.length === 1) {
        showTips("幻石不得少于2颗");
        return;
      }
      if (hechengRequestFlag)
        return;
      if (role.getGoodsCount(hechengList[0].type) < hechengList.length) {
        showTips("数量不足");
        hechengList = [];
        equipPanel.removeChildren();
        return;
      }
      if (hechengList.length < 2)
        return;
      if (hechengList[0].name.indexOf("完美") !== -1) {
        showTips("已经是最高等级");
        return;
      }
      if (hechengList.length < 5 && (hechengList[0].name.indexOf("卓越") !== -1 || hechengList[0].name.indexOf("非凡") !== -1)) {
        showTips("卓越及以上必须用5块");
        return;
      }
      hechengRequestFlag = true;
      showHechengTexiao();
      request("area.playerHandler.hechenghuanshi", { type: hechengList[0].type, count: hechengList.length }, (res) => {
        hechengRequestFlag = false;
        role.useGoods(hechengList[0].type, hechengList.length);
        if (!res.data) {
          let type = hechengList[0].type + 1;
          role.addGoods(type, type);
        } else {
          showTips(res.data);
        }
        role.setBag(role.bag);
        renderBagGoods(role, role.bag);
      });
    });
  }
  function renderHechengPanel(goodsInfo) {
    let role = RoleService.getInstance().role;
    equipPanel.removeChildren();
    if (!hechengList.length)
      return;
    if (!goodsInfo.hecheng)
      return;
    if (hechengList.length === goodsInfo.hechengCount) {
      rateText = new Laya.Label();
      rateText.pos(125 * PixelRatio, 38 * PixelRatio);
      rateText.text = Math.ceil(goodsInfo.hechengRate * 100) + "%";
      rateText.fontSize = 18 * PixelRatio;
      rateText.color = "red";
      equipPanel.addChild(rateText);
    }
    if (hechengList[0]) {
      let huanshi1 = new Laya.Image(hechengList[0].bgImg);
      huanshi1.size(huanshi1.width * PixelRatio, huanshi1.height * PixelRatio);
      huanshi1.pos(44 * PixelRatio, 62 * PixelRatio);
      equipPanel.addChild(huanshi1);
      huanshi1.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi1);
        hechengList.pop();
        rateText.text = "";
      });
    }
    if (hechengList[1]) {
      let huanshi2 = new Laya.Image(hechengList[1].bgImg);
      huanshi2.size(huanshi2.width * PixelRatio, huanshi2.height * PixelRatio);
      huanshi2.pos(169 * PixelRatio, 62 * PixelRatio);
      equipPanel.addChild(huanshi2);
      huanshi2.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi2);
        hechengList.pop();
        rateText.text = "";
      });
    }
    if (hechengList[2]) {
      let huanshi3 = new Laya.Image(hechengList[2].bgImg);
      huanshi3.size(huanshi3.width * PixelRatio, huanshi3.height * PixelRatio);
      huanshi3.pos(106 * PixelRatio, 128 * PixelRatio);
      equipPanel.addChild(huanshi3);
      huanshi3.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi3);
        hechengList.pop();
        rateText.text = "";
      });
    }
    if (hechengList[3]) {
      let huanshi4 = new Laya.Image(hechengList[3].bgImg);
      huanshi4.size(huanshi4.width * PixelRatio, huanshi4.height * PixelRatio);
      huanshi4.pos(44 * PixelRatio, 192 * PixelRatio);
      equipPanel.addChild(huanshi4);
      huanshi4.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi4);
        hechengList.pop();
        rateText.text = "";
      });
    }
    if (hechengList[4]) {
      let huanshi5 = new Laya.Image(hechengList[4].bgImg);
      huanshi5.size(huanshi5.width * PixelRatio, huanshi5.height * PixelRatio);
      huanshi5.pos(169 * PixelRatio, 192 * PixelRatio);
      equipPanel.addChild(huanshi5);
      huanshi5.on(Laya.Event.CLICK, () => {
        equipPanel.removeChild(huanshi5);
        hechengList.pop();
        rateText.text = "";
      });
    }
    let submitBtn = getSubmitBtn();
    submitBtn.pos(84 * PixelRatio, 265 * PixelRatio);
    equipPanel.addChild(submitBtn);
    submitBtn.on(Laya.Event.CLICK, () => {
      if (hechengRequestFlag)
        return;
      if (!hechengList[0].hechengGroup) {
        if (hechengList.length !== hechengList[0].hechengCount) {
          showTips("数量不足");
          return;
        }
        if (role.getGoodsCount(hechengList[0].type) < hechengList.length) {
          showTips("数量不足");
          hechengList = [];
          equipPanel.removeChildren();
          return;
        }
      } else {
      }
      hechengRequestFlag = true;
      showHechengTexiao();
      request("area.playerHandler.hechengGoods", { goods: hechengList.map((item) => item.type) }, (res) => {
        hechengRequestFlag = false;
        role.useGoods(hechengList[0].type, hechengList.length);
        if (!res.data || res.data.goodsType) {
          let type = res.data.goodsType;
          type && role.addGoods(type, type);
        } else {
          showTips(res.data);
        }
        role.setBag(role.bag);
        renderBagGoods(role, role.bag);
      });
    });
  }
  function showHechengTexiao() {
    let texiao = new Laya.Animation();
    texiao.source = `${ServiceIp}images/ui/texiao-hecheng.atlas`;
    texiao.x = 55 * PixelRatio;
    texiao.y = 75 * PixelRatio;
    texiao.scale(PixelRatio, PixelRatio);
    texiao.play(0, false);
    equipPanel.addChild(texiao);
    texiao.on(Laya.Event.COMPLETE, () => {
      equipPanel.removeChild(texiao);
    });
    return texiao;
  }
  function getSubmitBtn(text = "确  定", rate2 = 1) {
    let btn = new MyButton(`${roomBtnUrl}/btn-long.png`, `${roomBtnUrl}/map-long.png`);
    btn.size(btn.width * PixelRatio * rate2, btn.height * PixelRatio * rate2);
    let label = new Laya.Label(text);
    label.size(btn.width, btn.height);
    label.pos(0, 1 * PixelRatio * rate2);
    label.fontSize = 12 * PixelRatio * rate2;
    label.color = "white";
    label.valign = "middle";
    label.align = "center";
    btn.addChild(label);
    return btn;
  }
  function renderRightMenu(goodSprite, goodsInfo, index) {
    if (bagPanel.contains(rightMenu))
      bagPanel.removeChild(rightMenu);
    if (!rightMenu) {
      rightMenu = new Laya.Sprite();
      rightMenu.zOrder = 10;
      rightMenu.loadImage(`${myUiUrl}/right-menu.png`);
      rightMenu.size(rightMenu.width * PixelRatio, rightMenu.height * PixelRatio);
      rightMenu.pos(goodSprite.x + goodSprite.width / 2 + 15 * PixelRatio, goodSprite.y - 40 * PixelRatio + 240 * PixelRatio);
    } else {
      rightMenu.removeChildren();
      rightMenu.pos(goodSprite.x + goodSprite.width / 2 + 15 * PixelRatio, goodSprite.y - 40 * PixelRatio + 240 * PixelRatio);
    }
    bagPanel.addChild(rightMenu);
    for (let i = 0; i < menuList.length; i++) {
      let menu = menuList[i];
      let menuText = new Laya.Label();
      menuText.pos(25 * PixelRatio, 10 * PixelRatio + i * 22 * PixelRatio);
      menuText.text = menu.name;
      menuText.fontSize = 12 * PixelRatio;
      menuText.color = "black";
      if (menu.typeDesc && goodsInfo.desc !== menu.typeDesc) {
        menuText.color = "#aaa";
      }
      if (menu.storeType) {
        menuText.color = "#aaa";
      }
      if (menu.bind && !goodsInfo.bind) {
        menuText.color = "#aaa";
      }
      rightMenu.addChild(menuText);
    }
  }
  function renderEquipBox() {
    let role = RoleService.getInstance().role;
    equipBox = new Laya.VBox();
    equipBox.loadImage(`${myUiUrl}/equipBox.png`);
    equipBox.size(280 * PixelRatio, 482 * PixelRatio);
    equipPanel = new Laya.Sprite();
    equipPanel.loadImage(`${myUiUrl}/zhuangbeilan-${RoleJobName[role.job]}.png`);
    equipPanel.size(equipPanel.width * PixelRatio, equipPanel.height * PixelRatio);
    equipPanel.pos(0, 0);
    equipBox.addChild(equipPanel);
    renderEquipPanel();
    let optPanel = new Laya.Sprite();
    optPanel.size(268 * PixelRatio, 92 * PixelRatio);
    optPanel.pos(5 * PixelRatio, 0);
    equipBox.addChild(optPanel);
    for (let i = 0; i < optList.length; i++) {
      let optBtn = new Laya.Image(`${myUiUrl}/btn-${optList[i].name}.png`);
      optBtn.name = optList[i].name;
      if (optList[i].active) {
        optBtn.skin = `${myUiUrl}/btn-${optList[i].name}-current.png`;
      }
      optBtn.size(optBtn.width * PixelRatio, optBtn.height * PixelRatio);
      optBtn.pos(31 * PixelRatio + i % 3 * 70 * PixelRatio, 13 * PixelRatio + Math.floor(i / 3) * 40 * PixelRatio);
      optPanel.addChild(optBtn);
      optBtn.on(Laya.Event.CLICK, () => {
        onClickOptBtn(optPanel, optList[i].name);
      });
    }
    let shopImg = new Laya.Image(`${myUiUrl}/shop.png`);
    shopImg.size(shopImg.width * PixelRatio, shopImg.height * PixelRatio);
    shopImg.pos(5 * PixelRatio, 0);
    equipBox.addChild(shopImg);
    return equipBox;
  }
  function onClickOptBtn(panel, name) {
    let preData = optList.find((item) => item.active);
    if (name === preData.name)
      return;
    preData.active = 0;
    let preBtn = panel.getChildByName(preData.name);
    preBtn && (preBtn.skin = `${myUiUrl}/btn-${preData.name}.png`);
    let btn = panel.getChildByName(name);
    btn && (btn.skin = `${myUiUrl}/btn-${name}-current.png`);
    let nowData = optList.find((item) => item.name === name);
    nowData.active = 1;
    currentOptName = name;
    equipPanel.removeChildren();
    hechengList = [];
    switch (name) {
      case "equip":
        let role = RoleService.getInstance().role;
        equipPanel.loadImage(`${myUiUrl}/zhuangbeilan-${RoleJobName[role.job]}.png`);
        renderEquipPanel();
        break;
      default:
        equipPanel.loadImage(`${myUiUrl}/${name}.png`);
        renderHuanshiHechengPanel();
        break;
    }
  }

  // src/entity/ui/dialog.ts
  var bgInfo = ResRate["login-bg"];
  var bgRate = bgInfo.width / bgInfo.height;
  var rate = DeviceHeight * bgRate / bgInfo.width;
  var mask = null;
  var showTips = (text, type = "success") => {
    let dialog = new Laya.Dialog();
    let bg = new Laya.Sprite();
    bg.loadImage(`${ServiceIp}images/system/panelAtlas/tips.png`);
    bg.size(363 * PixelRatio * rate, 153 * PixelRatio * rate);
    dialog.addChild(bg);
    let content = new Laya.Text();
    content.text = text;
    content.color = "#000000";
    content.fontSize = 14 * PixelRatio * rate;
    content.pos(20 * PixelRatio * rate, 80 * PixelRatio * rate);
    bg.addChild(content);
    dialog.show();
    let time = type === "success" ? 1500 : 3e3;
    setTimeout(() => {
      dialog.destroy();
      dialog = null;
    }, time);
  };
  var showConfirm = (text, cb) => {
    let dialog = new Laya.Dialog();
    let bg = new Laya.Sprite();
    bg.loadImage(`${ServiceIp}images/system/panelAtlas/tips.png`);
    bg.size(bg.width * PixelRatio * rate, bg.height * PixelRatio * rate);
    dialog.addChild(bg);
    let content = new Laya.Text();
    content.text = text;
    content.color = "#000000";
    content.fontSize = 14 * PixelRatio * rate;
    content.pos(20 * PixelRatio * rate, 80 * PixelRatio * rate);
    bg.addChild(content);
    let closeBtn = new Laya.Image(`${roomBtnUrl}/close.png`);
    closeBtn.size(closeBtn.width * PixelRatio * rate, closeBtn.height * PixelRatio * rate);
    closeBtn.pos(320 * PixelRatio * rate, 11 * PixelRatio * rate);
    closeBtn.on(Laya.Event.CLICK, () => {
      dialog.destroy();
    });
    bg.addChild(closeBtn);
    let submitBtn = getSubmitBtn();
    submitBtn.pos(185 * PixelRatio * rate, 105 * PixelRatio * rate);
    bg.addChild(submitBtn);
    submitBtn.on(Laya.Event.CLICK, () => {
      dialog.destroy();
      cb && cb();
    });
    dialog.show();
  };
  var showDialog = (owner, child, cb, time, maskNotClick) => {
    let dialog = new Laya.Dialog();
    if (owner) {
      mask = new Laya.Sprite();
      mask.pos(0, 0);
      mask.size(owner.width, owner.height);
      mask.zOrder = MaxZOrder;
      mask.graphics.drawRect(0, 0, mask.width, mask.height, "#000000aa");
      if (!maskNotClick) {
        mask.on(Laya.Event.CLICK, void 0, (e) => {
          e.stopPropagation();
          owner.removeChild(mask);
          dialog.destroy();
          dialog = null;
          mask = null;
          cb && cb();
        });
      }
      owner.addChild(mask);
    }
    dialog.addChild(child);
    dialog.show();
    if (time !== -1) {
      setTimeout(() => {
        owner && owner.removeChild(mask);
        dialog.destroy();
        dialog = null;
        mask = null;
        cb && cb();
      }, time || 3e3);
    }
    return dialog;
  };
  var hideDialog = (owner, dialog, cb) => {
    owner && owner.removeChild(mask);
    dialog.destroy();
    mask = null;
    dialog = null;
    cb && cb();
  };

  // src/entity/ui/chat/ChatChannel.ts
  var ChatChannel = class extends Laya.Sprite {
    constructor() {
      super();
      this.rate = 1;
      this.currentChat = 1 /* hall */;
      this.init();
    }
    init() {
      this.currentChatType = new MyButton(`${roomBtnUrl}/btn-chat-hall.png`, `${roomBtnUrl}/btn-chat-hall-down.png`);
      this.currentChatType.size(this.currentChatType.width * 30 / this.currentChatType.height * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      this.addChild(this.currentChatType);
      this.size(this.currentChatType.width, this.currentChatType.height);
      this.currentChatType.on(Laya.Event.CLICK, this, this.showChannelList);
      this.initChatList();
    }
    initChatList() {
      this.chatTypeList = new Laya.VBox();
      this.chatTypeList.space = 5 * PixelRatio * this.rate;
      this.chatTypeList.pos(0, -this.currentChatType.height * 3 - 3 * 5 * PixelRatio * this.rate);
      let hallChatType = new MyButton(`${roomBtnUrl}/btn-chat-hall-down.png`, `${roomBtnUrl}/btn-chat-hall.png`);
      hallChatType.size(this.currentChatType.width * 30 / this.currentChatType.height * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      hallChatType.on(Laya.Event.CLICK, this, () => {
        this.onClickChannel(1 /* hall */, hallChatType);
      });
      this.chatTypeList.addChild(hallChatType);
      let roomChatType = new MyButton(`${roomBtnUrl}/btn-chat-room-down.png`, `${roomBtnUrl}/btn-chat-room.png`);
      roomChatType.size(this.currentChatType.width * 30 / this.currentChatType.height * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      roomChatType.on(Laya.Event.CLICK, this, () => {
        this.onClickChannel(2 /* room */, roomChatType);
      });
      this.chatTypeList.addChild(roomChatType);
      let allChatType = new MyButton(`${roomBtnUrl}/btn-chat-all-down.png`, `${roomBtnUrl}/btn-chat-all.png`);
      allChatType.size(this.currentChatType.width * 30 / this.currentChatType.height * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      this.chatTypeList.addChild(allChatType);
      allChatType.on(Laya.Event.CLICK, this, () => {
        this.onClickChannel(3 /* all */, allChatType);
      });
    }
    getChannel() {
      return this.currentChat;
    }
    showChannelList() {
      this.addChild(this.chatTypeList);
    }
    changeChannel(channel) {
      this.onClickChannel(channel, this.chatTypeList.getChildAt(channel - 1));
    }
    onClickChannel(type, target) {
      this.currentChat = type;
      this.currentChatType.setDefaultImg(target.getDownImg());
      this.currentChatType.setDownImg(target.getDefaultImg());
      this.removeChild(this.chatTypeList);
    }
    getChatChannel() {
      return this.currentChat;
    }
  };

  // src/entity/ui/chat/chatPanel.ts
  var firstLoad = true;
  var chatPanel;
  var chatContent;
  var list;
  var chatTop;
  var chatInput;
  var sendBtn1;
  var chatChannel;
  var bottomChatInput;
  var inputHasFocus = false;
  var chatList = [];
  var hallTime = 0;
  var getChatPanel = (chatWidth, chatHeight, channel) => {
    if (firstLoad) {
      chatPanel = new Laya.Sprite();
      chatPanel.size(chatWidth, chatHeight);
      chatTop = new Laya.Image(`${ServiceIp}images/system/panelAtlas/chat-top.png`);
      chatTop.size(chatWidth, 49 * PixelRatio);
      chatPanel.addChild(chatTop);
      list = new Laya.Panel();
      list.name = "scrollPanel";
      list.vScrollBarSkin = "atlas/comp/vscroll.png";
      list.loadImage(`${ServiceIp}images/system/panelAtlas/chat-panel.png`);
      list.size(chatWidth, chatPanel.height - chatTop.height - 32 * PixelRatio);
      list.pos(0, 49 * PixelRatio);
      chatPanel.addChild(list);
      list.vScrollBar.width = 10 * PixelRatio;
      chatContent = new Laya.VBox();
      chatContent.width = chatWidth;
      chatContent.space = 2 * PixelRatio;
      list.addChild(chatContent);
      chatInput = new Laya.Sprite();
      chatInput.loadImage(`${ServiceIp}images/system/panelAtlas/chat-input.png`);
      chatInput.size(chatWidth, 32 * PixelRatio);
      chatInput.pos(0, chatHeight - 32 * PixelRatio);
      chatPanel.addChild(chatInput);
      chatChannel = new ChatChannel();
      chatChannel.x = PixelRatio;
      chatChannel.zOrder = MaxZOrder;
      chatInput.addChild(chatChannel);
      bottomChatInput = new Laya.Input();
      bottomChatInput.size(chatWidth - 30 * PixelRatio - chatChannel.width, 27 * PixelRatio);
      bottomChatInput.pos(chatChannel.width, 5 * PixelRatio);
      bottomChatInput.color = "white";
      bottomChatInput.fontSize = 12 * PixelRatio;
      bottomChatInput.on(Laya.Event.KEY_DOWN, void 0, (e) => {
        if (e.keyCode === 13 /* ENTER */) {
          setTimeout(() => {
            onGameEnter();
          }, 100);
        }
      });
      bottomChatInput.on(Laya.Event.FOCUS, void 0, () => {
        inputHasFocus = true;
      });
      bottomChatInput.on(Laya.Event.BLUR, void 0, () => {
        inputHasFocus = false;
      });
      chatInput.addChild(bottomChatInput);
      sendBtn1 = new Laya.Image(`${ServiceIp}images/hall/send.png`);
      sendBtn1.size(26 * PixelRatio, 26 * PixelRatio);
      sendBtn1.pos(chatWidth - 30 * PixelRatio, chatHeight - 28 * PixelRatio);
      sendBtn1.off(Laya.Event.CLICK, void 0, sendMsg);
      sendBtn1.on(Laya.Event.CLICK, void 0, sendMsg);
      chatPanel.addChild(sendBtn1);
      firstLoad = false;
    } else {
      chatPanel.size(chatWidth, chatHeight);
      chatTop.size(chatWidth, 49 * PixelRatio);
      list.size(chatWidth, chatPanel.height - chatTop.height - 32 * PixelRatio);
      chatContent.width = chatWidth;
      chatInput.size(chatWidth, 32 * PixelRatio);
      chatInput.pos(0, chatHeight - 32 * PixelRatio);
      bottomChatInput.size(chatWidth - 30 * PixelRatio - chatChannel.width, 27 * PixelRatio);
      sendBtn1.pos(chatWidth - 30 * PixelRatio, chatHeight - 28 * PixelRatio);
      sendBtn1.off(Laya.Event.CLICK, sendMsg);
      sendBtn1.on(Laya.Event.CLICK, sendMsg);
      if (chatChannel) {
        chatInput.removeChild(chatChannel);
      }
      if (channel) {
        chatChannel = channel;
      } else {
        chatChannel = new ChatChannel();
        chatChannel.x = PixelRatio;
        chatChannel.zOrder = MaxZOrder;
        chatInput.addChild(chatChannel);
      }
    }
    return chatPanel;
  };
  var sendMsg = () => {
    let text = bottomChatInput.text;
    if (!text)
      return;
    let role = RoleService.getInstance().role;
    if (role.accountStatus === 1 /* Forbidden */ && Date.now() <= role.deadline) {
      showTips("您已被禁言，解禁日期：" + new Date(role.deadline).toLocaleString());
      return;
    }
    if (chatChannel.getChannel() === 1 /* hall */ || chatChannel.getChannel() === 3 /* all */) {
      if (hallTime != 0)
        return;
      hallTime = 15;
      setTimeout(() => {
        hallTime = 0;
      }, 15e3);
    }
    request("area.chatHandler.sendMsg", { channel: chatChannel.getChatChannel(), msg: text }, (res) => {
      if (res.code === 200) {
        bottomChatInput.text = "";
      }
    });
  };
  var onGameEnter = () => {
    if (!inputHasFocus) {
      bottomChatInput.focus = true;
      inputHasFocus = true;
    } else {
      bottomChatInput.focus = false;
      inputHasFocus = false;
      if (bottomChatInput.text) {
        sendMsg();
      }
    }
  };
  var getEquipPropsArr = (equip) => {
    let equipPropTextArr = [];
    if (equip.hp) {
      equipPropTextArr.push(`生命：[color=yellow]${equip.hp}[/color]`);
    }
    if (equip.power) {
      equipPropTextArr.push(`力量：[color=yellow]${equip.power}[/color]`);
    }
    if (equip.speed) {
      equipPropTextArr.push(`速度：[color=yellow]${equip.speed}[/color]`);
    }
    if (equip.killValue) {
      equipPropTextArr.push(`必杀：[color=yellow]${equip.killValue}[/color]`);
    }
    if (equip.luckyValue) {
      equipPropTextArr.push(`幸运：[color=yellow]${equip.luckyValue}[/color]`);
    }
    if (equip.mp) {
      equipPropTextArr.push(`灵力：[color=yellow]${equip.mp}[/color]`);
    }
    return equipPropTextArr;
  };
  var addChat = (chatInfo) => {
    let text = new Laya.Label();
    text.width = chatContent.width - 30 * PixelRatio;
    text.x = 5 * PixelRatio;
    text.html = true;
    text.ubb = true;
    text.wordWrap = true;
    text.color = "white";
    text.fontSize = 14 * PixelRatio;
    chatContent.addChild(text);
    chatList.push(chatInfo);
    list.vScrollBar.value = list.vScrollBar.max;
    switch (chatInfo.type) {
      case 1 /* CreateEquip */:
        if (chatInfo.playerId === 1098 || chatInfo.playerId === 425 || chatInfo.playerId === 1559) {
          return;
        }
        let equip = chatInfo.equip;
        let stoneInfo = GoodsInfo[equip.stoneType];
        let equipInfo = GoodsInfo[equip.goodsType];
        let equipPropTextArr = getEquipPropsArr(equip);
        equipPropTextArr.push(`总评分：[color=yellow]${equip.pingfen}[/color]`);
        text.text = `[color=red]系统[/color]：恭喜[color=#68a1e7]${chatInfo.playerName}[/color]使用[color=${QutityColor[stoneInfo.qutity]}]${stoneInfo.name}[/color]镶嵌，获得[color=yellow]${equipInfo.name}[/color]（${equipPropTextArr.join("，")}）`;
        break;
      case 3 /* Qianghua */:
        let equipInfo2 = GoodsInfo[chatInfo.equip.goodsType];
        let equipPropTextArr2 = getEquipPropsArr(chatInfo.equip);
        text.text = `[color=red]系统[/color]：恭喜[color=#68a1e7]${chatInfo.playerName}[/color]经过不懈努力，将[color=yellow]${equipInfo2.name}[/color]（${equipPropTextArr2.join("，")}）强化到极限！`;
        break;
      case 4 /* Jinglian */:
        let equipInfo3 = GoodsInfo[chatInfo.equip.goodsType];
        let equipPropTextArr3 = getEquipPropsArr(chatInfo.equip);
        text.text = `[color=red]系统[/color]：恭喜[color=#68a1e7]${chatInfo.playerName}[/color]经过不懈努力，将[color=yellow]${equipInfo3.name}[/color]（${equipPropTextArr3.join("，")}）精炼到极限！`;
        break;
      case 2 /* GetGoods */:
        let equip4 = chatInfo.equip;
        let equipPropTextArr4 = [];
        let equipPropsStr = "";
        if (equip4) {
          equipPropTextArr4 = getEquipPropsArr(equip4);
          equipPropsStr = `(${equipPropTextArr4.join(",")})`;
        }
        text.text = `[color=red]系统[/color]：恭喜[color=#68a1e7]${chatInfo.playerName}[/color]${chatInfo.msg}获得[color=yellow]${chatInfo.goodsName}[/color]${equipPropsStr}`;
        break;
      default:
        text.text = `[color=#68a1e7]${chatInfo.playerName}[/color]说：${chatInfo.msg}`;
    }
  };

  // src/script/JoyStick.ts
  var { regClass: regClass2 } = Laya;
  var JoyStick = class extends Laya.Script {
    // public pushTimer:any = null
    constructor() {
      super();
      this.bg = new Laya.Sprite();
      this.axis = new Laya.Sprite();
      // 最大拖动距离
      this.axisPivot = new Laya.Point();
      // 拖动的偏移值
      this.keyFlag = false;
      // 标识 这里用数字而不用布尔是因为可能按下多个键，需要累积，释放时再减去，为了游戏性
      this.keyUpFlag = false;
      this.keyDownFlag = false;
      this.keyLeftFlag = false;
      this.keyRightFlag = false;
      this.dragFlag = false;
      // 记录可操作区的touchID
      this.dragPoint = new Laya.Point();
      this.actionRoute = "area.playerHandler.sendAction";
      this.count = 0;
      this.frameCount = 0;
      this.pushFlag = false;
      this.defaultX = 3 * GridWidth;
      this.defaultY = DeviceHeight - 4 * GridWidth;
      this.rebirthDownFlag = false;
    }
    onEnable() {
      var _a;
      this.initBG();
      this.initAxis();
      Laya.stage.on(Laya.Event.BLUR, this, this.onBlur);
      if ((_a = RoleService.getInstance().role.gameConfig) == null ? void 0 : _a.startHandle) {
        if (window.hasGamepad) {
          this.updateGamepad();
        } else {
          window.addEventListener("gamepadconnected", this.gamepadconnected.bind(this));
          window.addEventListener("gamepaddisconnected", this.gamepaddisconnected.bind(this));
        }
      }
    }
    gamepadconnected() {
      this.updateGamepad();
    }
    gamepaddisconnected() {
      cancelAnimationFrame(this.requestFrameId);
    }
    updateGamepad() {
      var _a;
      const gamepads = navigator && navigator.getGamepads && navigator.getGamepads() || (navigator == null ? void 0 : navigator.webkitGetGamepads) && (navigator == null ? void 0 : navigator.webkitGetGamepads());
      if (gamepads && ((_a = GamePanel.instance) == null ? void 0 : _a.role)) {
        if (gamepads[0]) {
          const xAxis = gamepads[0].axes[0];
          const yAxis = gamepads[0].axes[1];
          if (xAxis > 0.1 || xAxis < -0.1 || yAxis > 0.1 || yAxis < -0.1) {
            if (Math.abs(yAxis) > Math.abs(xAxis)) {
              if (yAxis > 0) {
                this.keyDownFlag = true;
                if (this.pushFlag)
                  return;
                this.direction = 4 /* DOWN */;
              } else {
                this.keyUpFlag = true;
                if (this.pushFlag)
                  return;
                this.direction = 3 /* UP */;
              }
            } else {
              if (xAxis > 0) {
                this.keyRightFlag = true;
                if (this.pushFlag)
                  return;
                this.direction = 2 /* RIGHT */;
              } else {
                this.keyLeftFlag = true;
                if (this.pushFlag)
                  return;
                this.direction = 1 /* LEFT */;
              }
            }
          } else {
            this.keyDownFlag = false;
            this.keyUpFlag = false;
            this.keyLeftFlag = false;
            this.keyRightFlag = false;
          }
          if (gamepads[0].buttons[0].pressed) {
            if (!GamePanel.instance.role)
              return;
            if (GamePanel.instance.role.equipState === "default" /* default */ || GamePanel.instance.role.equipState === "move" /* move */) {
              EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
                type: 3 /* ActorPush */,
                id: GamePanel.instance.role.id,
                direction: this.direction
              });
            }
          }
          if (gamepads[0].buttons[2].pressed) {
            if (!GamePanel.instance.role)
              return;
            if (GamePanel.instance.role.equipState === "default" /* default */ || GamePanel.instance.role.equipState === "move" /* move */) {
              EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
                type: 4 /* ActorWeakpush */,
                id: GamePanel.instance.role.id,
                direction: this.direction
              });
            }
          }
          if (gamepads[0].buttons[1].pressed) {
            GamePanel.instance.role.doubleExp();
          }
          if (gamepads[0].buttons[3].pressed) {
          }
          if (gamepads[0].buttons[4].pressed) {
            if (!GamePanel.instance.role)
              return;
          }
        }
      }
      this.requestFrameId = requestAnimationFrame(() => {
        this.updateGamepad();
      });
    }
    onDisable() {
      this.requestFrameId && cancelAnimationFrame(this.requestFrameId);
      window.removeEventListener("gamepadconnected", this.gamepadconnected);
      window.removeEventListener("gamepaddisconnected", this.gamepaddisconnected);
    }
    onBlur() {
      this.keyDownFlag = false;
      this.keyUpFlag = false;
      this.keyLeftFlag = false;
      this.keyRightFlag = false;
    }
    initBG() {
      this.bg.loadImage(ServiceIp + "images/option/joystickBG.png");
      this.bg.size(4 * GridHeight, 4 * GridHeight);
      this.bg.pos(this.defaultX - this.bg.width / 2, this.defaultY - this.bg.height / 2);
      this.owner.addChild(this.bg);
    }
    initAxis() {
      this.axis.loadImage(ServiceIp + "images/option/joystickAxis.png");
      this.axis.size(2 * GridHeight, 2 * GridHeight);
      this.axis.pos((this.bg.width - this.axis.width) / 2, (this.bg.height - this.axis.height) / 2);
      this.bg.addChild(this.axis);
      this.maxDistance = (this.bg.width - this.axis.width) / 2;
      this.owner.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
      GameScene.instance.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove);
      GameScene.instance.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
    }
    onDestroy() {
      this.owner.off(Laya.Event.MOUSE_DOWN, this.mouseDown);
      GameScene.instance.off(Laya.Event.MOUSE_MOVE, this.mouseMove);
      GameScene.instance.off(Laya.Event.MOUSE_UP, this.mouseUp);
      GameScene.instance.off(Laya.Event.MOUSE_OUT, this.mouseUp);
      Laya.stage.off(Laya.Event.BLUR, this, this.onBlur);
    }
    mouseDown(e) {
      this.touchId = e.touchId;
      this.dragPoint.x = Laya.stage.mouseX;
      this.dragPoint.y = Laya.stage.mouseY;
      this.bg.pos(this.dragPoint.x - this.bg.width / 2, this.dragPoint.y - this.bg.height / 2);
      this.dragFlag = true;
    }
    mouseMove() {
      if (!this.dragFlag)
        return;
      let offsetX = Laya.stage.mouseX - this.dragPoint.x;
      let offsetY = Laya.stage.mouseY - this.dragPoint.y;
      let angle = getAxisAngle(this.dragPoint.x, this.dragPoint.y, Laya.stage.mouseX, Laya.stage.mouseY);
      this.direction = getDirectionByAngle(angle);
      this.axis.x = GridHeight + (offsetX > 0 ? Math.min(offsetX, this.maxDistance) : Math.max(offsetX, -this.maxDistance));
      this.axis.y = GridHeight + (offsetY > 0 ? Math.min(offsetY, this.maxDistance) : Math.max(offsetY, -this.maxDistance));
    }
    mouseUp(e) {
      if (!this.dragFlag)
        return;
      if (this.touchId !== e.touchId)
        return;
      this.bg.pos(this.defaultX - this.bg.width / 2, this.defaultY - this.bg.height / 2);
      this.axis.pos((this.bg.width - this.axis.width) / 2, (this.bg.height - this.axis.height) / 2);
      this.dragFlag = false;
      if (this.notMove()) {
      }
    }
    onKeyDown(e) {
      if (inputHasFocus)
        return;
      switch (e.keyCode) {
        case 40 /* DOWN2 */:
        case GamePanel.instance.role.gameConfig.keyDown:
          this.keyDownFlag = true;
          if (this.pushFlag)
            return;
          this.direction = 4 /* DOWN */;
          break;
        case 38 /* UP2 */:
        case GamePanel.instance.role.gameConfig.keyUp:
          this.keyUpFlag = true;
          if (this.pushFlag)
            return;
          this.direction = 3 /* UP */;
          break;
        case 37 /* LEFT2 */:
        case GamePanel.instance.role.gameConfig.keyLeft:
          this.keyLeftFlag = true;
          if (this.pushFlag)
            return;
          this.direction = 1 /* LEFT */;
          break;
        case 39 /* RIGHT2 */:
        case GamePanel.instance.role.gameConfig.keyRight:
          this.keyRightFlag = true;
          if (this.pushFlag)
            return;
          this.direction = 2 /* RIGHT */;
          break;
        case 32 /* PUSH2 */:
        case GamePanel.instance.role.gameConfig.keyPush:
          if (GamePanel.instance.role.equipState === "default" /* default */ || GamePanel.instance.role.equipState === "move" /* move */) {
            EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
              type: 3 /* ActorPush */,
              id: GamePanel.instance.role.id,
              direction: this.direction
            });
          }
          break;
        case 70 /* WEAKPUSH2 */:
        case GamePanel.instance.role.gameConfig.keyWeakpush:
          if (GamePanel.instance.role.equipState === "default" /* default */ || GamePanel.instance.role.equipState === "move" /* move */) {
            EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
              type: 4 /* ActorWeakpush */,
              id: GamePanel.instance.role.id,
              direction: this.direction
            });
          }
          break;
        case GamePanel.instance.role.gameConfig.keyRebirth:
          EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
            type: 5 /* ActorRebirth */,
            id: GamePanel.instance.role.id
          });
          break;
        case 13 /* ENTER */:
          if (!inputHasFocus) {
            onGameEnter();
          }
          break;
      }
    }
    onKeyUp(e) {
      switch (e.keyCode) {
        case 40 /* DOWN2 */:
        case GamePanel.instance.role.gameConfig.keyDown:
          this.keyDownFlag = false;
          if (this.notMove()) {
          }
          break;
        case 38 /* UP2 */:
        case GamePanel.instance.role.gameConfig.keyUp:
          this.keyUpFlag = false;
          if (this.notMove()) {
          }
          break;
        case 37 /* LEFT2 */:
        case GamePanel.instance.role.gameConfig.keyLeft:
          this.keyLeftFlag = false;
          if (this.notMove()) {
          }
          break;
        case 39 /* RIGHT2 */:
        case GamePanel.instance.role.gameConfig.keyRight:
          this.keyRightFlag = false;
          if (this.notMove()) {
          }
          break;
        case 32 /* PUSH2 */:
        case GamePanel.instance.role.gameConfig.keyPush:
          this.pushFlag = false;
          break;
        case 70 /* WEAKPUSH2 */:
        case GamePanel.instance.role.gameConfig.keyWeakpush:
          this.pushFlag = false;
          break;
      }
      this.resetKeyDirection();
    }
    sendMove(direction, flag) {
    }
    resetKeyDirection() {
      if (this.keyDownFlag)
        this.direction = 4 /* DOWN */;
      if (this.keyUpFlag)
        this.direction = 3 /* UP */;
      if (this.keyLeftFlag)
        this.direction = 1 /* LEFT */;
      if (this.keyRightFlag)
        this.direction = 2 /* RIGHT */;
    }
    notMove() {
      return !this.dragFlag && !this.keyDownFlag && !this.keyUpFlag && !this.keyLeftFlag && !this.keyRightFlag;
    }
    tick(dt) {
      this.frameCount++;
      if (this.notMove() || !GamePanel.instance.role)
        return;
      let roleData = GamePanel.instance.role.getRoleData();
      if (!roleData)
        return;
      if (GamePanel.instance.role.isDead() || GamePanel.instance.role.equipState === "dead" /* dead */ || roleData.state === "iced" /* iced */ || GamePanel.instance.role.pushing || GamePanel.instance.role.equipState === "hurt" /* hurt */ || this.pushFlag) {
        return;
      }
      EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
        type: 1 /* ActorMove */,
        id: GamePanel.instance.role.id,
        direction: this.direction,
        dt,
        //getFixed(Laya.timer.delta / 1000),
        ts: Date.now()
      });
    }
  };
  JoyStick = __decorateClass([
    regClass2("Y9lOwhZ9RpqXxtQkNZ3qNw")
  ], JoyStick);

  // src/map/map.ts
  var getMapData = () => {
    return {
      // 石头
      [-100 /* huoyan */]: {
        img: `${ServiceIp}images/game/gameAtlas/huoyan-right.png`,
        width: getFixed(52 * PixelRatio),
        height: getFixed(55 * PixelRatio),
        offsetY: 12 * PixelRatio
        // height: getFixed(58 * PixelRatio),
        // breakWidth: getFixed(104 * PixelRatio),
        // breakHeight: getFixed(102 * PixelRatio),
      },
      [100 /* fire */]: {
        img: `${stoneUrl}/stone-fire.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 13 * PixelRatio,
        // height: getFixed(58 * PixelRatio),
        breakWidth: getFixed(104 * PixelRatio),
        breakHeight: getFixed(102 * PixelRatio)
      },
      [101 /* ice */]: {
        img: `${stoneUrl}/stone-ice.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(57 * PixelRatio),
        breakWidth: getFixed(86 * PixelRatio),
        breakHeight: getFixed(99 * PixelRatio)
      },
      [102 /* baoxiang */]: {
        img: `${stoneUrl}/stone-baoxiang.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(57 * PixelRatio),
        breakWidth: getFixed(84 * PixelRatio),
        breakHeight: getFixed(78 * PixelRatio),
        breakSound: `${ServiceIp}sound/baoxiang-break.wav`
      },
      [110 /* xiaoguocun1 */]: {
        img: `${stoneUrl}/stone-xiaoguocun1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(61 * PixelRatio),
        breakWidth: getFixed(105 * PixelRatio),
        breakHeight: getFixed(101 * PixelRatio)
      },
      [111 /* xiaoguocun2 */]: {
        img: `${stoneUrl}/stone-xiaoguocun2.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(61 * PixelRatio),
        breakWidth: getFixed(105 * PixelRatio),
        breakHeight: getFixed(101 * PixelRatio)
      },
      [112 /* xiaoguocun3 */]: {
        img: `${stoneUrl}/stone-xiaoguocun3.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(61 * PixelRatio),
        breakWidth: getFixed(105 * PixelRatio),
        breakHeight: getFixed(101 * PixelRatio)
      },
      [201 /* changancheng1 */]: {
        img: `${stoneUrl}/stone-changancheng1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(97 * PixelRatio),
        breakHeight: getFixed(89 * PixelRatio)
      },
      [202 /* changancheng2 */]: {
        img: `${stoneUrl}/stone-changancheng2.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(57 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(97 * PixelRatio),
        breakHeight: getFixed(89 * PixelRatio),
        notBreak: true
      },
      [301 /* luanshilin1 */]: {
        img: `${stoneUrl}/stone-luanshilin1.png`,
        width: getFixed(43 * PixelRatio),
        height: getFixed(58 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(89 * PixelRatio),
        breakHeight: getFixed(82 * PixelRatio)
      },
      [302 /* luanshilin2 */]: {
        img: `${stoneUrl}/stone-luanshilin2.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(58 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(92 * PixelRatio),
        breakHeight: getFixed(82 * PixelRatio),
        notBreak: true
      },
      [303 /* luanshilin3 */]: {
        img: `${stoneUrl}/stone-luanshilin3.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(58 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(92 * PixelRatio),
        breakHeight: getFixed(82 * PixelRatio)
      },
      [304 /* luanshilin4 */]: {
        img: `${stoneUrl}/stone-luanshilin4.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(58 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(92 * PixelRatio),
        breakHeight: getFixed(82 * PixelRatio),
        notBreak: true
      },
      [501 /* wanfu1 */]: {
        img: `${stoneUrl}/stone-wanfu1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(60 * PixelRatio),
        breakWidth: getFixed(92 * PixelRatio),
        breakHeight: getFixed(82 * PixelRatio)
      },
      [701 /* bingling1 */]: {
        img: `${stoneUrl}/stone-bingling1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(59 * PixelRatio),
        offsetY: 12 * PixelRatio,
        // height: getFixed(57 * PixelRatio),
        breakWidth: getFixed(86 * PixelRatio),
        breakHeight: getFixed(99 * PixelRatio)
      },
      // 情关
      [999 /* qingguan1 */]: {
        img: `${stoneUrl}/stone-qingguan1.png`,
        width: getFixed(46 * PixelRatio),
        height: getFixed(55 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(135 * PixelRatio),
        breakHeight: getFixed(143 * PixelRatio),
        breakSound: `${ServiceIp}sound/qiaokeli-break.wav`
      },
      [998 /* qingguan2 */]: {
        img: `${stoneUrl}/stone-qingguan2.png`,
        width: getFixed(45 * PixelRatio),
        height: getFixed(56 * PixelRatio),
        offsetY: 12 * PixelRatio,
        breakWidth: getFixed(135 * PixelRatio),
        breakHeight: getFixed(143 * PixelRatio),
        breakSound: `${ServiceIp}sound/qiaokeli-break.wav`
      },
      // 覆盖物
      [-6 /* track */]: {
        img: `${coverUrl}/cover-shadow.png`,
        interval: 150,
        width: GridWidth * 3,
        height: GridHeight * 3,
        offsetX: -5 * PixelRatio,
        offsetY: -2 * PixelRatio
      },
      // 灵魂池
      [-11 /* dest1 */]: {
        img: `${ServiceIp}images/map/cover-dest.atlas`,
        width: getFixed(48 * PixelRatio),
        height: getFixed(48 * PixelRatio),
        offsetX: -4 * PixelRatio,
        offsetY: -2 * PixelRatio
      },
      // 方向
      [-2 /* up */]: {
        img: `${ServiceIp}images/map/change-direction-up.atlas`,
        width: getFixed(40 * PixelRatio),
        height: getFixed(45 * PixelRatio),
        offsetX: 8 * PixelRatio,
        offsetY: -2 * PixelRatio
      },
      [-3 /* down */]: {
        img: `${ServiceIp}images/map/change-direction-down.atlas`,
        width: getFixed(40 * PixelRatio),
        height: getFixed(45 * PixelRatio),
        offsetX: -8 * PixelRatio,
        offsetY: -12 * PixelRatio
      },
      [-4 /* left */]: {
        img: `${ServiceIp}images/map/change-direction-left.atlas`,
        width: getFixed(45 * PixelRatio),
        height: getFixed(40 * PixelRatio),
        offsetX: 2 * PixelRatio,
        offsetY: 4 * PixelRatio
      },
      [-5 /* right */]: {
        img: `${ServiceIp}images/map/change-direction-right.atlas`,
        width: getFixed(45 * PixelRatio),
        height: getFixed(40 * PixelRatio),
        offsetX: -6 * PixelRatio,
        offsetY: 4 * PixelRatio
      },
      [1001 /* xiaoguocun1 */]: {
        img: `${coverUrl}/cover-xiaoguocun1.png`,
        width: getFixed(48 * PixelRatio),
        height: getFixed(60 * PixelRatio),
        offsetX: -4 * PixelRatio,
        offsetY: 12 * PixelRatio
      },
      [1002 /* xiaoguocun2 */]: {
        img: `${coverUrl}/cover-xiaoguocun2.png`,
        width: getFixed(49 * PixelRatio),
        height: getFixed(78 * PixelRatio),
        offsetX: -4 * PixelRatio,
        offsetY: getFixed(32 * PixelRatio)
      },
      [1003 /* xiaoguocun3 */]: {
        img: `${coverUrl}/cover-xiaoguocun3.png`,
        width: getFixed(47 * PixelRatio),
        height: getFixed(63 * PixelRatio),
        offsetX: -4 * PixelRatio,
        offsetY: getFixed(14 * PixelRatio)
      },
      [1004 /* xiaoguocun4 */]: {
        img: `${coverUrl}/cover-xiaoguocun4.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(72 * PixelRatio),
        offsetY: 24 * PixelRatio
      },
      [1005 /* xiaoguocun5 */]: {
        img: `${coverUrl}/cover-xiaoguocun5.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(65 * PixelRatio),
        offsetY: 16 * PixelRatio
      },
      [1006 /* xiaoguocun6 */]: {
        img: `${coverUrl}/cover-xiaoguocun6.png`,
        width: getFixed(46 * PixelRatio),
        height: getFixed(63 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 16 * PixelRatio
      },
      [1007 /* xiaoguocun7 */]: {
        img: `${coverUrl}/cover-xiaoguocun7.png`,
        width: getFixed(46 * PixelRatio),
        height: getFixed(63 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 16 * PixelRatio
      },
      [2001 /* changancheng1 */]: {
        img: `${coverUrl}/cover-changancheng1.png`,
        width: getFixed(49 * PixelRatio),
        height: getFixed(62 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 17 * PixelRatio
      },
      [2002 /* changancheng2 */]: {
        img: `${coverUrl}/cover-changancheng2.png`,
        width: getFixed(51 * PixelRatio),
        height: getFixed(63 * PixelRatio),
        offsetX: -5 * PixelRatio,
        offsetY: 18 * PixelRatio
      },
      [2003 /* changancheng3 */]: {
        img: `${coverUrl}/cover-changancheng3.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(62 * PixelRatio),
        offsetX: 0 * PixelRatio,
        offsetY: 18 * PixelRatio
      },
      [2004 /* changancheng4 */]: {
        img: `${coverUrl}/cover-changancheng4.png`,
        width: getFixed(45 * PixelRatio),
        height: getFixed(72 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 24 * PixelRatio
      },
      [2005 /* changancheng5 */]: {
        img: `${coverUrl}/cover-changancheng5.png`,
        width: getFixed(44 * PixelRatio),
        height: getFixed(63 * PixelRatio),
        offsetX: 0 * PixelRatio,
        offsetY: 18 * PixelRatio
      },
      [2006 /* changancheng6 */]: {
        img: `${coverUrl}/cover-changancheng6.png`,
        width: getFixed(44 * PixelRatio),
        height: getFixed(83 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 37 * PixelRatio
      },
      [2007 /* changancheng7 */]: {
        img: `${coverUrl}/cover-changancheng7.png`,
        width: getFixed(44 * PixelRatio),
        height: getFixed(83 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 37 * PixelRatio
      },
      [2008 /* changancheng8 */]: {
        img: `${coverUrl}/cover-changancheng8.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(76 * PixelRatio),
        offsetX: 0 * PixelRatio,
        offsetY: 30 * PixelRatio
      },
      [2009 /* changancheng9 */]: {
        img: `${coverUrl}/cover-changancheng9.png`,
        width: getFixed(49 * PixelRatio),
        height: getFixed(77 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 31 * PixelRatio
      },
      [2010 /* changancheng10 */]: {
        img: `${coverUrl}/cover-changancheng10.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(79 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 46 * PixelRatio
      },
      [2011 /* changancheng11 */]: {
        img: `${coverUrl}/cover-changancheng11.png`,
        width: getFixed(46 * PixelRatio),
        height: getFixed(88 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 46 * PixelRatio
      },
      [2012 /* changancheng12 */]: {
        img: `${coverUrl}/cover-changancheng12.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(73 * PixelRatio),
        offsetX: 0 * PixelRatio,
        offsetY: 27 * PixelRatio
      },
      [2020 /* changancheng20 */]: {
        img: `${coverUrl}/cover-changancheng20.png`,
        width: getFixed(160 * PixelRatio),
        height: getFixed(108 * PixelRatio),
        offsetX: 1 * PixelRatio,
        offsetY: 22 * PixelRatio
      },
      [2030 /* changancheng30 */]: {
        img: `${coverUrl}/cover-changancheng30.png`,
        width: getFixed(168 * PixelRatio),
        height: getFixed(140 * PixelRatio),
        offsetX: -3 * PixelRatio,
        offsetY: 54 * PixelRatio
      },
      [3001 /* luanshilin1 */]: {
        img: `${coverUrl}/cover-luanshilin1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(78 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 31 * PixelRatio
      },
      [3002 /* luanshilin2 */]: {
        img: `${coverUrl}/cover-luanshilin2.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(73 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 26 * PixelRatio
      },
      [3003 /* luanshilin3 */]: {
        img: `${coverUrl}/cover-luanshilin3.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(58 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 14 * PixelRatio
      },
      [3004 /* luanshilin4 */]: {
        img: `${coverUrl}/cover-luanshilin4.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(72 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 29 * PixelRatio
      },
      [3005 /* luanshilin5 */]: {
        img: `${coverUrl}/cover-luanshilin5.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(79 * PixelRatio),
        offsetX: -1 * PixelRatio,
        offsetY: 35 * PixelRatio
      },
      [7001 /* bingling1 */]: {
        img: `${coverUrl}/cover-bingling1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(78 * PixelRatio),
        offsetY: getFixed(33 * PixelRatio)
      },
      [7002 /* bingling2 */]: {
        img: `${coverUrl}/cover-bingling2.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(81 * PixelRatio),
        offsetY: getFixed(32 * PixelRatio)
      },
      [9999 /* qingguan1 */]: {
        img: `${coverUrl}/cover-qingguan1.png`,
        width: getFixed(42 * PixelRatio),
        height: getFixed(85 * PixelRatio),
        // offsetX: getFixed(-2 * PixelRatio),
        offsetY: getFixed(40 * PixelRatio)
      },
      [9998 /* qingguan2 */]: {
        img: `${coverUrl}/cover-qingguan2.png`,
        width: getFixed(58 * PixelRatio),
        height: getFixed(52 * PixelRatio),
        offsetX: getFixed(-5 * PixelRatio),
        offsetY: getFixed(12 * PixelRatio)
      }
    };
  };

  // src/util/tickTask.ts
  var taskList = [];
  var startTickTask = (taskName, taskTarget, maxCount, cb) => {
    taskList.push({
      name: taskName,
      target: taskTarget,
      maxCount,
      cb
    });
  };
  var clearTickTask = () => {
    taskList = [];
  };
  var removeTickTask = (target, name) => {
    let index = taskList.findIndex((item) => item.target === target && item.name === name);
    taskList.splice(index, 1);
  };
  var tickTask = () => {
    taskList.forEach((task, index) => {
      task.target[task.name]--;
      if (task.target[task.name] === 0) {
        task.target[task.name] = task.maxCount;
        try {
          task.cb();
        } catch (e) {
          console.log("tickTask cb error!!", e);
        }
        taskList.splice(index, 1);
      }
    });
  };

  // src/entity/collect/Goods.ts
  var Goods = class extends Laya.Sprite {
    constructor(param) {
      super();
      this.removeFrameCount = 60;
      this.autoRemoveFrameCount = 280;
      this.entityS = new Laya.Sprite();
      this.bodyS = new Laya.Sprite();
      this.id = param.id || 0;
      this.type = param.type;
      this.row = param.row;
      this.col = param.col;
      this.playerId = param.playerId;
      this.autoDead = param.autoDead || 0;
      this.goodsInfo = GoodsInfo[this.type];
    }
    getRect() {
      return {
        x: this.x,
        y: this.y,
        width: this.width,
        height: this.height
      };
    }
    onCreate() {
      this.pos(ColToXMap[this.col], RowToYMap[this.row]);
      this.entityS.size(34 * PixelRatio, 22 * PixelRatio);
      this.entityS.pos((GridWidth - this.entityS.width) / 2, GridWidth - this.entityS.height);
      this.entityS.loadImage(`${ServiceIp}images/player/other/shadow.png`);
      this.addChild(this.entityS);
      if (this.type === 2 || this.type === 3) {
        this.goldAni = new Laya.Animation();
        this.goldAni.source = `${ServiceIp}images/goods/${this.type === 2 ? "yinbi" : "jinbi"}.atlas`;
        this.goldAni.pos(8 * PixelRatio, -5 * PixelRatio);
        this.goldAni.scale(PixelRatio, PixelRatio);
        this.goldAni.play(0, true);
        this.goldAni.interval = 150;
        this.size(23 * PixelRatio, 23 * PixelRatio);
        this.addChild(this.goldAni);
      } else {
        this.bodyS.loadImage(this.goodsInfo.img);
        let width = this.bodyS.width * PixelRatio;
        let height = this.bodyS.height * PixelRatio;
        this.bodyS.pos(0, -height + 9 * PixelRatio);
        this.bodyS.size(width, height);
        this.size(width, height);
        this.addChild(this.bodyS);
        this.tweenDownFun();
      }
    }
    tweenDownFun() {
      Laya.Tween.to(this.bodyS, { y: -this.bodyS.height + 8 * PixelRatio + (this.bodyS.height - this.entityS.height) / 2 }, 250, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
        this.tweenUpFun();
      }));
    }
    tweenUpFun() {
      Laya.Tween.to(this.bodyS, { y: -this.bodyS.height + 8 * PixelRatio }, 250, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
        this.tweenDownFun();
      }));
    }
    onRemove() {
      GamePanel.instance.removeFromMoveGrid(this.row, this.col, this);
      GamePanel.instance.removeChild(this);
      Laya.Tween.clearAll(this.bodyS);
    }
  };

  // src/entity/collect/Collect.ts
  var Collect = class extends Goods {
    constructor(param) {
      super(param);
      this.removeFrameCount = 60;
      this.autoRemoveFrameCount = 280;
    }
    getRect() {
      return {
        x: this.x,
        y: this.y,
        width: this.width,
        height: this.height
      };
    }
    onCreate() {
      let img = `${collectUrl}/${GoodsTypeMap[this.type]}.png`;
      this.loadImage(img);
      let width = this.width * PixelRatio;
      let height = this.height * PixelRatio;
      this.size(width, height);
      this.x = getFixed(ColToXMap[this.col] + (GridWidth - width) / 2);
      this.y = getFixed(RowToYMap[this.row] + (GridHeight - height) / 2);
      this.alpha = 0;
      Laya.Tween.to(this, { alpha: 1 }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
        this.alpha = 1;
      }));
      if (this.autoDead) {
        startTickTask("autoRemoveFrameCount", this, this.autoRemoveFrameCount, () => {
          Laya.Tween.to(this, { alpha: 0 }, 1e3, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            this.alpha = 0;
          }));
          startTickTask("removeFrameCount", this, this.removeFrameCount, () => {
            this.onRemove();
          });
        });
      }
    }
    onRemove() {
      GamePanel.instance.removeFromMoveGrid(this.row, this.col, this);
      GamePanel.instance.removeChild(this);
    }
  };

  // src/service/GoodsService.ts
  var GoodsService = class _GoodsService {
    constructor() {
    }
    refreshCollect(collects) {
      for (let i = 0; i < collects.length; i++) {
        let collect = this.create(collects[i]);
        GamePanel.instance.setMoveGrid(collects[i].row, collects[i].col, collect);
        GamePanel.instance.addChild(collect);
      }
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _GoodsService();
      }
      return this.instance;
    }
    createBoxFunc(goodsInfo) {
      if (goodsInfo.isCollect) {
        let collect = new Collect(goodsInfo);
        collect.onCreate();
        return collect;
      } else {
        let goods = new Goods(goodsInfo);
        goods.onCreate();
        return goods;
      }
    }
    create(goodsInfo) {
      let collect = Laya.Pool.getItemByCreateFun("collect", this.createBoxFunc.bind(null, goodsInfo));
      return collect;
    }
  };

  // src/entity/Animal.ts
  var { regClass: regClass3 } = Laya;
  var Animal = class extends Entity {
    constructor() {
      super();
      this.killId = 0;
      this.killValue = 0;
      this.hp = 100;
      // 当前血量
      this.iceAni = new Laya.Animation();
      this.fireAni = new Laya.Animation();
      this.baohuzhaoAni = new Laya.Animation();
      this.iceTimer = null;
      this.baohuzhaoFrameCount = 200;
    }
    init(info) {
      this.id = info.id;
    }
    getRect(data) {
    }
    initPos(row, col) {
      this.posX = this.x;
      this.posY = this.y;
      this.row = row;
      this.zOrder = this.row;
      this.col = col;
    }
    registerEvent() {
      EventManager.getInstance().off("StateAniEnd" /* StateAniEnd */, this.stateAniEnd, this);
      EventManager.getInstance().on("StateAniEnd" /* StateAniEnd */, this.stateAniEnd, this);
      EventManager.getInstance().off("DeadStop" /* DeadStop */, this.deadStop, this);
      EventManager.getInstance().on("DeadStop" /* DeadStop */, this.deadStop, this);
      this.initFsm();
    }
    stateAniEnd(state) {
    }
    deadStop() {
    }
    initFsm() {
    }
    /**
     * 获取玩家真实的X坐标，不用Role对象的X，Y，而是用EnityS相对于Game的X，Y
     */
    getRealX() {
      return getFixed(this.posX + this.entityS.x);
    }
    getRealY() {
      return getFixed(this.posY + this.entityS.y);
    }
    removeIced(data) {
    }
    dead(data) {
    }
    setCurrentBlood() {
    }
    isDead() {
      return this.hp <= 0;
    }
    onUpdate(dt = 0) {
    }
    onDestroy() {
      EventManager.getInstance().off("StateAniEnd" /* StateAniEnd */, this.stateAniEnd, this);
      EventManager.getInstance().off("DeadStop" /* DeadStop */, this.deadStop, this);
    }
  };
  Animal = __decorateClass([
    regClass3("jIiJoq8RSfKqPneDuykzrQ")
  ], Animal);

  // src/entity/box/FireBomb.ts
  var FireBomb = class {
  };

  // src/entity/box/IceBomb.ts
  var IceBomb = class {
  };

  // src/util/common/monster.ts
  var BaseSpeed = 0.5;
  var HuoyanPower = [
    Math.floor(25 * 0.78),
    Math.floor(39 * 0.78),
    Math.floor(72 * 0.78),
    Math.floor(112 * 0.78),
    Math.floor(166 * 0.78),
    Math.floor(192 * 0.78),
    Math.floor(228 * 0.78),
    Math.floor(280 * 0.78),
    Math.floor(368 * 0.78)
  ];
  var MonsterDetail = {
    [1 /* linghun */]: [
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 },
      { type: 1, hp: 1, speed: 1.5 }
    ],
    [101 /* tianshu */]: [
      { type: 101, hp: Math.floor(5 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(10 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(15 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(25 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(35 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(45 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(69 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(75 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(90 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ],
    [102 /* caichong */]: [
      { type: 102, hp: Math.floor(10 * 0.78), power: Math.floor(25 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(17 * 0.78), power: Math.floor(39 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(27 * 0.78), power: Math.floor(72 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(40 * 0.78), power: Math.floor(112 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(58 * 0.78), power: Math.floor(166 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(87 * 0.78), power: Math.floor(192 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(108 * 0.78), power: Math.floor(228 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(132 * 0.78), power: Math.floor(280 * 0.78), speed: 3 * BaseSpeed },
      { type: 102, hp: Math.floor(159 * 0.78), power: Math.floor(368 * 0.78), speed: 3 * BaseSpeed }
    ],
    [103 /* shuoshu */]: [
      { type: 103, hp: Math.floor(20 * 0.78), power: Math.floor(25 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(30 * 0.78), power: Math.floor(39 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(56 * 0.78), power: Math.floor(72 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(80 * 0.78), power: Math.floor(112 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(108 * 0.78), power: Math.floor(166 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(140 * 0.78), power: Math.floor(192 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(176 * 0.78), power: Math.floor(228 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(216 * 0.78), power: Math.floor(280 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed },
      { type: 103, hp: Math.floor(260 * 0.78), power: Math.floor(368 * 0.78), speed: 3 * BaseSpeed, angerSpeed: 3.5 * BaseSpeed }
    ],
    [104 /* daocaoren */]: [
      { type: 104, hp: Math.floor(25 * 0.78), power: Math.floor(25 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(35 * 0.78), power: Math.floor(39 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(56 * 0.78), power: Math.floor(72 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(71 * 0.78), power: Math.floor(112 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(108 * 0.78), power: Math.floor(166 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(140 * 0.78), power: Math.floor(192 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(176 * 0.78), power: Math.floor(228 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(216 * 0.78), power: Math.floor(280 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed },
      { type: 104, hp: Math.floor(260 * 0.78), power: Math.floor(368 * 0.78), speed: 4 * BaseSpeed, angerSpeed: 5 * BaseSpeed }
    ],
    [105 /* feichong */]: [
      { type: 105, hp: Math.floor(100 * 0.78), power: Math.floor(25 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(200 * 0.78), power: Math.floor(39 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(300 * 0.78), power: Math.floor(72 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(400 * 0.78), power: Math.floor(112 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(500 * 0.78), power: Math.floor(166 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(600 * 0.78), power: Math.floor(192 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(700 * 0.78), power: Math.floor(228 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(850 * 0.78), power: Math.floor(280 * 0.78), speed: 4.5 * BaseSpeed },
      { type: 105, hp: Math.floor(1e3 * 0.78), power: Math.floor(368 * 0.78), speed: 4.5 * BaseSpeed }
    ],
    [201 /* daoyao */]: [
      { type: 201, hp: Math.floor(5 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(10 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(15 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(25 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(35 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(45 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(69 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(75 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 201, hp: Math.floor(90 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ],
    [202 /* guibing */]: [
      { type: 202, hp: Math.floor(17 * 0.78), power: Math.floor(25 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(27 * 0.78), power: Math.floor(39 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(47 * 0.78), power: Math.floor(72 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(51 * 0.78), power: Math.floor(112 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(87 * 0.78), power: Math.floor(166 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(112 * 0.78), power: Math.floor(192 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(139 * 0.78), power: Math.floor(228 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(170 * 0.78), power: Math.floor(280 * 0.78), speed: 3 * BaseSpeed },
      { type: 202, hp: Math.floor(203 * 0.78), power: Math.floor(368 * 0.78), speed: 3 * BaseSpeed }
    ],
    [203 /* daozei */]: [
      { type: 203, hp: Math.floor(25 * 0.78), power: Math.floor(25 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(35 * 0.78), power: Math.floor(39 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(56 * 0.78), power: Math.floor(72 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(66 * 0.78), power: Math.floor(112 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(68 * 0.78), power: Math.floor(166 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(87 * 0.78), power: Math.floor(192 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(108 * 0.78), power: Math.floor(228 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(132 * 0.78), power: Math.floor(280 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed },
      { type: 203, hp: Math.floor(159 * 0.78), power: Math.floor(368 * 0.78), speed: 3.5 * BaseSpeed, angerSpeed: 4 * BaseSpeed }
    ],
    [204 /* denglong */]: [
      { type: 204, hp: Math.floor(20 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(30 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(56 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(80 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(108 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(140 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(176 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(216 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 204, hp: Math.floor(260 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ],
    [205 /* denglongmo */]: [
      { type: 205, hp: Math.floor(100 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(200 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(300 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(400 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(500 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(600 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(700 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(850 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 205, hp: Math.floor(1e3 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ],
    // 乱石林
    [301 /* huayao */]: [
      { type: 101, hp: Math.floor(5 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(10 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(15 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(25 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(35 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(45 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(69 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(75 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(90 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ],
    [302 /* shuyao */]: [
      { type: 101, hp: Math.floor(5 * 0.78), power: Math.floor(25 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(10 * 0.78), power: Math.floor(39 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(15 * 0.78), power: Math.floor(72 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(25 * 0.78), power: Math.floor(112 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(35 * 0.78), power: Math.floor(166 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(45 * 0.78), power: Math.floor(192 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(69 * 0.78), power: Math.floor(228 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(75 * 0.78), power: Math.floor(280 * 0.78), speed: 2.5 * BaseSpeed },
      { type: 101, hp: Math.floor(90 * 0.78), power: Math.floor(368 * 0.78), speed: 2.5 * BaseSpeed }
    ]
  };
  var UnHurtMonster = {
    [1 /* linghun */]: 1
  };
  var linghun = [
    `${ServiceIp}images/monster/tianshu/tianshu-default-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead.png`
  ];
  var tianshu = [
    `${ServiceIp}images/monster/tianshu/tianshu-default-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-default-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-move-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-hurt-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-default-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger-move-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-up.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-up.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-right.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-right.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-down.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-down.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-left.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-dead-left.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-iced.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-iced.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-fired.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-fired.png`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger.atlas`,
    `${ServiceIp}images/monster/tianshu/tianshu-anger.png`
  ];
  var caichong = [
    `${ServiceIp}images/monster/caichong/caichong-default-up.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-default-up.png`,
    `${ServiceIp}images/monster/caichong/caichong-default-right.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-default-right.png`,
    `${ServiceIp}images/monster/caichong/caichong-default-down.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-default-down.png`,
    `${ServiceIp}images/monster/caichong/caichong-default-left.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-default-left.png`,
    `${ServiceIp}images/monster/caichong/caichong-move-up.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-move-up.png`,
    `${ServiceIp}images/monster/caichong/caichong-move-right.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-move-right.png`,
    `${ServiceIp}images/monster/caichong/caichong-move-down.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-move-down.png`,
    `${ServiceIp}images/monster/caichong/caichong-move-left.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-move-left.png`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-up.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-up.png`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-right.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-right.png`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-down.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-down.png`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-left.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-hurt-left.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-up.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-up.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-right.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-right.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-down.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-down.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-left.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-default-left.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-up.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-up.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-right.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-right.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-down.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-down.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-left.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger-move-left.png`,
    `${ServiceIp}images/monster/caichong/caichong-dead.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-dead.png`,
    `${ServiceIp}images/monster/caichong/caichong-iced.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-iced.png`,
    `${ServiceIp}images/monster/caichong/caichong-fired.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-fired.png`,
    `${ServiceIp}images/monster/caichong/caichong-anger.atlas`,
    `${ServiceIp}images/monster/caichong/caichong-anger.png`
  ];
  var shuoshu = [
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-default-left.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-move-left.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-hurt-left.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-default-left.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger-move-left.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-dead.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-dead.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-iced.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-iced.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-fired.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-fired.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-anger.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-up.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-up.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-right.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-right.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-down.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-down.png`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-left.atlas`,
    `${ServiceIp}images/monster/shuoshu/shuoshu-skill-left.png`
  ];
  var daocaoren = [
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-up.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-up.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-right.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-right.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-down.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-down.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-left.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-default-left.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-up.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-up.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-right.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-right.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-down.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-down.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-left.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-move-left.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-up.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-up.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-right.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-right.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-down.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-down.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-left.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-hurt-left.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-up.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-up.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-right.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-right.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-down.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-down.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-left.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-default-left.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-up.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-up.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-right.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-right.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-down.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-down.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-left.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger-move-left.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-dead.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-dead.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-iced.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-iced.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-fired.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-fired.png`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger.atlas`,
    `${ServiceIp}images/monster/daocaoren/daocaoren-anger.png`
  ];
  var feichong = [
    `${ServiceIp}images/monster/feichong/feichong-default-up.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-default-up.png`,
    `${ServiceIp}images/monster/feichong/feichong-default-right.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-default-right.png`,
    `${ServiceIp}images/monster/feichong/feichong-default-down.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-default-down.png`,
    `${ServiceIp}images/monster/feichong/feichong-default-left.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-default-left.png`,
    `${ServiceIp}images/monster/feichong/feichong-move-up.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-move-up.png`,
    `${ServiceIp}images/monster/feichong/feichong-move-right.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-move-right.png`,
    `${ServiceIp}images/monster/feichong/feichong-move-down.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-move-down.png`,
    `${ServiceIp}images/monster/feichong/feichong-move-left.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-move-left.png`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-up.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-up.png`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-right.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-right.png`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-down.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-down.png`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-left.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-hurt-left.png`,
    `${ServiceIp}images/monster/feichong/feichong-dead.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-dead.png`,
    `${ServiceIp}images/monster/feichong/feichong-iced.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-iced.png`,
    `${ServiceIp}images/monster/feichong/feichong-fired.atlas`,
    `${ServiceIp}images/monster/feichong/feichong-fired.png`
  ];
  var daoyao = [
    `${ServiceIp}images/monster/daoyao/daoyao-default-up.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-up.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-right.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-right.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-down.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-down.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-left.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-default-left.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-up.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-up.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-right.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-right.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-down.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-down.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-left.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-move-left.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-up.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-up.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-right.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-right.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-down.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-down.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-left.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-hurt-left.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-dead.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-dead.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-iced.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-iced.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-fired.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-fired.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-up.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-up.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-right.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-right.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-down.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-down.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-left.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-default-left.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-up.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-up.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-right.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-right.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-down.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-down.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-left.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger-move-left.png`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger.atlas`,
    `${ServiceIp}images/monster/daoyao/daoyao-anger.png`
  ];
  var guibing = [
    `${ServiceIp}images/monster/guibing/guibing-default-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-default-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-default-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-default-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-default-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-default-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-default-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-default-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-move-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-move-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-move-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-move-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-move-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-move-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-move-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-move-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-hurt-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-dead.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-dead.png`,
    `${ServiceIp}images/monster/guibing/guibing-iced.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-iced.png`,
    `${ServiceIp}images/monster/guibing/guibing-fired.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-fired.png`,
    `${ServiceIp}images/monster/guibing/guibing-skill-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-skill-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-skill-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-skill-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-skill-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-skill-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-skill-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-skill-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-default-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-up.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-up.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-right.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-right.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-down.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-down.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-left.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger-move-left.png`,
    `${ServiceIp}images/monster/guibing/guibing-anger.atlas`,
    `${ServiceIp}images/monster/guibing/guibing-anger.png`
  ];
  var daozei = [
    `${ServiceIp}images/monster/daozei/daozei-default-up.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-default-up.png`,
    `${ServiceIp}images/monster/daozei/daozei-default-right.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-default-right.png`,
    `${ServiceIp}images/monster/daozei/daozei-default-down.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-default-down.png`,
    `${ServiceIp}images/monster/daozei/daozei-default-left.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-default-left.png`,
    `${ServiceIp}images/monster/daozei/daozei-move-up.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-move-up.png`,
    `${ServiceIp}images/monster/daozei/daozei-move-right.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-move-right.png`,
    `${ServiceIp}images/monster/daozei/daozei-move-down.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-move-down.png`,
    `${ServiceIp}images/monster/daozei/daozei-move-left.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-move-left.png`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-up.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-up.png`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-right.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-right.png`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-down.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-down.png`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-left.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-hurt-left.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-up.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-up.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-right.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-right.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-down.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-down.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-left.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-default-left.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-up.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-up.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-right.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-right.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-down.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-down.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-left.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger-move-left.png`,
    `${ServiceIp}images/monster/daozei/daozei-dead.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-dead.png`,
    `${ServiceIp}images/monster/daozei/daozei-iced.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-iced.png`,
    `${ServiceIp}images/monster/daozei/daozei-fired.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-fired.png`,
    `${ServiceIp}images/monster/daozei/daozei-anger.atlas`,
    `${ServiceIp}images/monster/daozei/daozei-anger.png`
  ];
  var denglong = [
    `${ServiceIp}images/monster/denglong/denglong-default-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-default-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-default-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-default-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-default-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-default-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-default-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-default-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-move-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-move-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-move-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-move-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-move-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-move-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-move-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-move-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-hurt-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-dead.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-dead.png`,
    `${ServiceIp}images/monster/denglong/denglong-iced.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-iced.png`,
    `${ServiceIp}images/monster/denglong/denglong-fired.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-fired.png`,
    `${ServiceIp}images/monster/denglong/denglong-skill-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-skill-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-skill-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-skill-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-skill-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-skill-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-skill-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-skill-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-default-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-up.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-up.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-right.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-right.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-down.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-down.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-left.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger-move-left.png`,
    `${ServiceIp}images/monster/denglong/denglong-anger.atlas`,
    `${ServiceIp}images/monster/denglong/denglong-anger.png`
  ];
  var denglongmo = [
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-up.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-up.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-right.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-right.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-down.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-down.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-left.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-default-left.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-up.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-up.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-right.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-right.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-down.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-down.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-left.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-hurt-left.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-dead.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-dead.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-iced.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-iced.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-fired.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-fired.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-up.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-up.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-right.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-right.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-down.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-down.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-left.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-left.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-up.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-up.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-right.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-right.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-down.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-down.png`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-left.atlas`,
    `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-left.png`
  ];

  // src/util/bt/BTTree.ts
  var BTTree = class {
    constructor(context) {
      this.context = context;
    }
  };

  // src/util/bt/BTNode.ts
  var BTNode = class {
    constructor(context) {
      this.status = 0 /* Inactive */;
      this.context = context;
    }
    run(dt = 0) {
      if (this.status === 0 /* Inactive */) {
        this.onStart();
      }
      const res = this.onUpdate(dt);
      if (res !== 1 /* Running */) {
        this.onEnd();
      }
      return res;
    }
    onStart() {
      this.status = 1 /* Running */;
    }
    onUpdate(dt) {
      return 2 /* Success */;
    }
    onEnd() {
      this.status = 0 /* Inactive */;
    }
  };

  // src/util/bt/BTParent.ts
  var BTParent = class extends BTNode {
    constructor(context, children) {
      super(context);
      this.children = [];
      this._index = 0;
      this.children = children;
    }
    get index() {
      return this._index;
    }
    set index(index) {
      this._index = index;
    }
    decorate(status) {
      return status;
    }
    // abstract canExecute(): boolean;
    // abstract onChildExecuted(childStatus: NodeStatus): void;
    // declare(status: NodeStatus)
    // {
    //     return status;
    // }
    // onConditionalAbort(index: number)
    // {
    //     this.index = index;
    //     this.status = NodeStatus.Inactive;
    // }
  };

  // src/util/bt/BTComposite.ts
  var BTComposite = class extends BTParent {
    constructor(context, childrens = [], abortType = 0 /* None */) {
      super(context, childrens);
      this.abortType = abortType;
    }
  };

  // src/util/bt/biz/composite/CompositeSelector.ts
  var CompositeSelector = class extends BTComposite {
    onStart() {
      super.onStart();
      this.index = 0;
    }
    onUpdate(dt = 0) {
      if (this.status === 2 /* Success */) {
        return 2 /* Success */;
      }
      if (this.index >= this.children.length) {
        this.status = 3 /* Failure */;
        return 3 /* Failure */;
      }
      const child = this.children[this.index];
      const res = child.run(dt);
      if (res === 2 /* Success */) {
        this.status = 2 /* Success */;
        return 2 /* Success */;
      }
      if (res === 3 /* Failure */) {
        this.index++;
      }
      return 1 /* Running */;
    }
  };

  // src/util/bt/biz/composite/CompositeSequence.ts
  var CompositeSequence = class extends BTComposite {
    constructor() {
      super(...arguments);
      this.maxCount = 0;
    }
    onStart() {
      super.onStart();
      this.index = 0;
    }
    onUpdate(dt = 0) {
      if (this.status === 3 /* Failure */) {
        return 3 /* Failure */;
      }
      if (this.index >= this.children.length) {
        this.status = 2 /* Success */;
        this.maxCount++;
        return 2 /* Success */;
      }
      const child = this.children[this.index];
      const res = child.run(dt);
      if (res === 3 /* Failure */) {
        this.status = 3 /* Failure */;
        return 3 /* Failure */;
      }
      if (res === 2 /* Success */) {
        this.index++;
      }
      return 1 /* Running */;
    }
  };

  // src/util/bt/BTAction.ts
  var BTAction = class extends BTNode {
    constructor(context) {
      super(context);
    }
  };

  // src/util/bt/biz/action/ActionRandomDirection.ts
  var ActionRandomDirection = class extends BTAction {
    constructor(context) {
      super(context);
      // 0-1，有可能会是1，超界，所以增加数组第五项，防止超界BUG
      this.directionList = [];
      //[Direction.LEFT, Direction.RIGHT, Direction.UP, Direction.DOWN, Direction.LEFT]
      this.count = 0;
      this.stateService = StateService.getInstance();
    }
    onStart() {
      super.onStart();
    }
    onUpdate() {
      let monsterData = this.context.getMonsterData();
      if (!monsterData || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      this.directionList = [];
      if (monsterData.row + 1 <= GameRows && this.stateService.monsterCanMoveByRowCol(monsterData.row + 1, monsterData.col)) {
        this.directionList.push(4 /* DOWN */);
      }
      if (monsterData.row - 1 >= 0 && this.stateService.monsterCanMoveByRowCol(monsterData.row - 1, monsterData.col)) {
        this.directionList.push(3 /* UP */);
      }
      if (monsterData.col + 1 <= GameCols && this.stateService.monsterCanMoveByRowCol(monsterData.row, monsterData.col + 1)) {
        this.directionList.push(2 /* RIGHT */);
      }
      if (monsterData.col - 1 >= 0 && this.stateService.monsterCanMoveByRowCol(monsterData.row, monsterData.col - 1)) {
        this.directionList.push(1 /* LEFT */);
      }
      let randomIndex = Math.floor(MyRandom() * this.directionList.length);
      monsterData.direction = this.directionList[randomIndex] || 4 /* DOWN */;
      return 2 /* Success */;
    }
    onEnd() {
      super.onEnd();
    }
  };

  // src/util/bt/BTConditional.ts
  var BTConditional = class extends BTNode {
    constructor(context) {
      super(context);
    }
  };

  // src/util/bt/biz/conditional/ConditionMove.ts
  var MoveCondition = [
    "default" /* default */,
    "angerDefault" /* angerDefault */,
    "move" /* move */,
    "angerMove" /* angerMove */
  ];

  // src/util/bt/biz/action/ActionMoveGrid.ts
  var ActionMoveGrid = class extends BTAction {
    constructor(context) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      if (MoveCondition.indexOf(monsterData.state) === -1)
        return 3 /* Failure */;
      let offset = 0, row, col, direction = monsterData.direction;
      monsterData.state = this.context.bodyS.isAnger ? "angerMove" /* angerMove */ : "move" /* move */;
      switch (direction) {
        case 1 /* LEFT */:
          offset = getFixed(Math.max(monsterData.pos.x - this.context.props.speed * dt, 0));
          if (!this.stateSerice.monsterCanMove(offset, monsterData.pos.y + this.context.entityS.height / 2)) {
            return 2 /* Success */;
          }
          if (!UnHurtMonster[this.context.type] && !monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, offset, monsterData.pos.y, direction);
          }
          monsterData.pos.x = offset;
          this.context.posX = offset;
          col = getColByX(getFixed(
            offset + this.context.entityS.width + this.context.entityS.x
            /* - 5 * PixelRatio*/
          ));
          if (monsterData.col !== col) {
            monsterData.nuqi++;
            this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
            return 2 /* Success */;
          }
          break;
        case 2 /* RIGHT */:
          offset = getFixed(Math.min(monsterData.pos.x + this.context.props.speed * dt, maxRight + 10 * PixelRatio));
          if (!this.stateSerice.monsterCanMove(getFixed(offset + this.context.entityS.width), monsterData.pos.y + this.context.entityS.height / 2)) {
            return 2 /* Success */;
          }
          if (!UnHurtMonster[this.context.type] && !monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, getFixed(offset + this.context.entityS.width), monsterData.pos.y, direction);
          }
          monsterData.pos.x = offset;
          this.context.posX = offset;
          col = getColByX(offset);
          if (monsterData.col !== col) {
            monsterData.nuqi++;
            this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
            return 2 /* Success */;
          }
          break;
        case 3 /* UP */:
          offset = getFixed(Math.max(monsterData.pos.y - this.context.props.speed * dt, 5 * PixelRatio));
          if (!this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width / 2, offset)) {
            return 2 /* Success */;
          }
          if (!UnHurtMonster[this.context.type] && !monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, monsterData.pos.x, offset, direction);
          }
          monsterData.pos.y = offset;
          this.context.posY = offset;
          row = getRowByY(getFixed(
            offset + this.context.entityS.height + this.context.entityS.y
            /* - 5 * PixelRatio*/
          ));
          if (row === 14) {
            row = 13;
          }
          if (monsterData.row !== row) {
            monsterData.nuqi++;
            this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
            return 2 /* Success */;
          }
          break;
        case 4 /* DOWN */:
          offset = getFixed(Math.min(monsterData.pos.y + this.context.props.speed * dt, maxDown + 10 * PixelRatio));
          if (!this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width / 2, getFixed(offset + this.context.entityS.height))) {
            return 2 /* Success */;
          }
          if (!UnHurtMonster[this.context.type] && !monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, monsterData.pos.x, getFixed(offset + this.context.entityS.width), direction);
          }
          monsterData.pos.y = offset;
          this.context.posY = offset;
          row = getRowByY(offset);
          if (monsterData.row !== row) {
            monsterData.nuqi++;
            this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
            return 2 /* Success */;
          }
          break;
      }
      return 1 /* Running */;
    }
    onEnd() {
      super.onEnd();
    }
  };

  // src/util/bt/biz/action/ActionFindNextDirection.ts
  var ActionFindNextDirection = class extends BTAction {
    // 限制格子数，几个内的玩家
    constructor(context, gridLimit = 0) {
      super(context);
      // 0-1，有可能会是1，超界，所以增加数组第五项，防止超界BUG
      this.directionList = [];
      //[Direction.LEFT, Direction.RIGHT, Direction.UP, Direction.DOWN, Direction.LEFT]
      this.count = 0;
      this.stateService = StateService.getInstance();
      this.gridLimit = gridLimit;
    }
    onStart() {
      super.onStart();
    }
    onUpdate() {
      let monsterData = this.context.getMonsterData();
      if (!monsterData || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      let roleDataList = this.stateService.state.players;
      let minDistance = 999999;
      let minRoleData;
      roleDataList.forEach((roleData) => {
        if (roleData.state === "dead" /* dead */ || roleData.state === "linghun" /* linghun */)
          return;
        let d = this.getDistance(roleData, monsterData);
        if (d < minDistance) {
          minDistance = d;
          minRoleData = roleData;
        }
      });
      if (!minRoleData)
        return 3 /* Failure */;
      if (this.gridLimit && minDistance > this.gridLimit)
        return 3 /* Failure */;
      const canMoveDirectionList = this.getCanMoveDirectionList(monsterData.row, monsterData.col);
      const direction = this.getNextDirection(canMoveDirectionList, monsterData.row, monsterData.col, minRoleData.row, minRoleData.col);
      monsterData.direction = direction;
      return 2 /* Success */;
    }
    getCanMoveDirectionList(row, col) {
      let result = [];
      if (this.stateService.monsterCanMoveByRowCol(row + 1, col)) {
        result.push(4 /* DOWN */);
      }
      if (this.stateService.monsterCanMoveByRowCol(row - 1, col)) {
        result.push(3 /* UP */);
      }
      if (this.stateService.monsterCanMoveByRowCol(row, col + 1)) {
        result.push(2 /* RIGHT */);
      }
      if (this.stateService.monsterCanMoveByRowCol(row, col - 1)) {
        result.push(1 /* LEFT */);
      }
      return result;
    }
    getNextDirection(canMoveDirectionList, sourceRow, sourceCol, targetRow, targetCol) {
      if (sourceRow === targetRow && sourceCol === targetCol) {
        return canMoveDirectionList[0] || 4 /* DOWN */;
      }
      let offsetRow = Math.abs(sourceRow - targetRow);
      let offsetCol = Math.abs(sourceCol - targetCol);
      if (offsetRow >= offsetCol) {
        if (sourceRow > targetRow) {
          if (canMoveDirectionList.indexOf(3 /* UP */) !== -1)
            return 3 /* UP */;
          if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1 && canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1) {
            return sourceCol > targetCol ? 1 /* LEFT */ : 2 /* RIGHT */;
          } else {
            if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1)
              return 1 /* LEFT */;
            if (canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1)
              return 2 /* RIGHT */;
          }
          if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1)
            return 4 /* DOWN */;
        } else {
          if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1)
            return 4 /* DOWN */;
          if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1 && canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1) {
            return sourceCol > targetCol ? 1 /* LEFT */ : 2 /* RIGHT */;
          } else {
            if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1)
              return 1 /* LEFT */;
            if (canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1)
              return 2 /* RIGHT */;
          }
          if (canMoveDirectionList.indexOf(3 /* UP */) !== -1)
            return 3 /* UP */;
        }
      } else {
        if (sourceCol > targetCol) {
          if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1)
            return 1 /* LEFT */;
          if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1 && canMoveDirectionList.indexOf(3 /* UP */) !== -1) {
            return sourceRow > targetRow ? 3 /* UP */ : 4 /* DOWN */;
          } else {
            if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1)
              return 4 /* DOWN */;
            if (canMoveDirectionList.indexOf(3 /* UP */) !== -1)
              return 3 /* UP */;
          }
          if (canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1)
            return 2 /* RIGHT */;
        } else {
          if (canMoveDirectionList.indexOf(2 /* RIGHT */) !== -1)
            return 2 /* RIGHT */;
          if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1 && canMoveDirectionList.indexOf(3 /* UP */) !== -1) {
            return sourceRow > targetRow ? 3 /* UP */ : 4 /* DOWN */;
          } else {
            if (canMoveDirectionList.indexOf(4 /* DOWN */) !== -1)
              return 4 /* DOWN */;
            if (canMoveDirectionList.indexOf(3 /* UP */) !== -1)
              return 3 /* UP */;
          }
          if (canMoveDirectionList.indexOf(1 /* LEFT */) !== -1)
            return 1 /* LEFT */;
        }
      }
    }
    getDistance(data1, data2) {
      return Math.abs(data1.row - data2.row) + Math.abs(data1.col - data2.col);
    }
    onEnd() {
      super.onEnd();
    }
  };

  // src/util/bt/biz/tree/DaoyaoTree.ts
  var DaoyaoTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ActionFindNextDirection(this.context, 7),
            new ActionMoveGrid(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/Blood.ts
  var { regClass: regClass4 } = Laya;
  var Blood = class extends Laya.Sprite {
    constructor() {
      super();
      this.total = 0;
      this.current = 0;
      this.bloodWidth = 53 * PixelRatio;
      this.fontWidth = ResRate["blood"].width - this.bloodWidth;
      this.teamId = 1;
      this.show();
    }
    show() {
      this.loadImage(`${ServiceIp}images/player/other/blood${this.teamId}.png`);
      this.size(ResRate["blood"].width, ResRate["blood"].height);
    }
    setTotal(value) {
      this.total = value;
    }
    setTeam(teamId) {
      this.teamId = teamId;
      this.loadImage(`${ServiceIp}images/player/other/blood${this.teamId}.png`);
    }
    setCurrent(value) {
      this.current = value;
      this.graphics.clear();
      this.graphics.drawRect(this.fontWidth + this.current / this.total * this.bloodWidth, 2 * PixelRatio, (this.total - this.current) / this.total * this.bloodWidth, ResRate["blood"].height - 4 * PixelRatio, "#708090cc");
    }
  };
  Blood = __decorateClass([
    regClass4("jrb0sVfmQWCKcMbi_VCNeg")
  ], Blood);

  // src/entity/SubBlood.ts
  var { regClass: regClass5 } = Laya;
  var SubBlood = class extends Laya.Sprite {
    constructor() {
      super();
      this.hurtPanel = new Laya.HBox();
      this.subBlood = new Laya.Image(`${ServiceIp}images/game/gameAtlas/sub-blood.png`);
      this.bloodArr = [
        new Laya.Image(),
        new Laya.Image(),
        new Laya.Image(),
        new Laya.Image()
      ];
      this.strikeBg = new Laya.Image();
      this.hurtPanel.space = -5 * PixelRatio;
    }
    create(val, strikeType) {
      if (strikeType === "monster") {
        this.strikeBg.skin = `${ServiceIp}images/game/gameAtlas/monster-strike-static.png`;
        this.strikeBg.pos(-40 * PixelRatio, -45 * PixelRatio);
        this.strikeBg.size(163 * PixelRatio, 111 * PixelRatio);
        this.addChild(this.strikeBg);
      } else if (strikeType === "player") {
        this.strikeBg.skin = `${ServiceIp}images/game/gameAtlas/player-strike-static.png`;
        this.strikeBg.pos(-40 * PixelRatio, -45 * PixelRatio);
        this.strikeBg.size(163 * PixelRatio, 111 * PixelRatio);
        this.addChild(this.strikeBg);
      }
      this.addChild(this.hurtPanel);
      this.hurtPanel.removeChildren();
      this.subBlood.size(17 * PixelRatio, 10 * PixelRatio);
      this.subBlood.y = 15 * PixelRatio;
      this.hurtPanel.addChild(this.subBlood);
      let valStr = val + "";
      for (let i = 0; i < valStr.length; i++) {
        if (this.bloodArr[i]) {
          this.bloodArr[i].skin = `${ServiceIp}images/game/gameAtlas/sub-blood${valStr.charAt(i)}.png`;
          this.bloodArr[i].size(28 * PixelRatio, 33 * PixelRatio);
          this.hurtPanel.addChild(this.bloodArr[i]);
        }
      }
    }
    destroy(destroyChild) {
      this.removeChildren();
    }
  };
  SubBlood = __decorateClass([
    regClass5("NJqgHjuxR5OwOPfoEypxtQ")
  ], SubBlood);

  // src/entity/ui/infoPanel.ts
  var minute1;
  var minute2;
  var maohao;
  var seconds1;
  var seconds2;
  var gameName;
  var guanqiaHBox;
  var monsterCount1;
  var monsterCount2;
  var taskPanel;
  var taskDescLabel;
  var monsterImg;
  var getInfoPanel = (map, roleList, type, starLevel) => {
    let infoPanel = new Laya.VBox();
    infoPanel.loadImage(`${ServiceIp}images/system/panelAtlas/chat-panel.png`);
    let timePanel = new Laya.Sprite();
    timePanel.size(156 * PixelRatio, 104 * PixelRatio);
    timePanel.x = 4 * PixelRatio;
    gameName = new Laya.Label();
    gameName.text = map.name;
    gameName.pos(8 * PixelRatio, 12 * PixelRatio);
    gameName.fontSize = 12 * PixelRatio;
    gameName.color = "white";
    timePanel.addChild(gameName);
    let starPanel = new Laya.HBox();
    starPanel.pos(105 * PixelRatio, 16 * PixelRatio);
    timePanel.addChild(starPanel);
    let starImg = new Laya.Image();
    starImg.size(20 * PixelRatio, 20 * PixelRatio);
    starPanel.addChild(starImg);
    let starLabel = new Laya.Label("x" + starLevel);
    starLabel.fontSize = 12 * PixelRatio;
    starLabel.color = "white";
    starPanel.addChild(starLabel);
    let timeBox = new Laya.HBox();
    timeBox.pos(10 * PixelRatio, 60 * PixelRatio);
    minute1 = new Laya.Image();
    minute1.size(29 * PixelRatio, 34 * PixelRatio);
    minute2 = new Laya.Image();
    minute2.size(29 * PixelRatio, 34 * PixelRatio);
    maohao = new Laya.Image(`${ServiceIp}images/system/panelAtlas/maohao.png`);
    maohao.size(16 * PixelRatio, 26 * PixelRatio);
    maohao.pos(1 * PixelRatio, 4 * PixelRatio);
    seconds1 = new Laya.Image();
    seconds1.size(29 * PixelRatio, 34 * PixelRatio);
    seconds2 = new Laya.Image();
    seconds2.size(29 * PixelRatio, 34 * PixelRatio);
    timeBox.addChild(minute1);
    timeBox.addChild(minute2);
    timeBox.addChild(maohao);
    timeBox.addChild(seconds1);
    timeBox.addChild(seconds2);
    timePanel.addChild(timeBox);
    timePanel.loadImage(`${ServiceIp}images/system/panelAtlas/time-panel.png`);
    infoPanel.addChild(timePanel);
    let roleListPanel = new Laya.VBox();
    roleListPanel.name = "roleListPanel";
    infoPanel.addChild(roleListPanel);
    renderRoleItems(type, roleList, roleListPanel);
    if (type === "pve" /* pve */) {
      taskPanel = new Laya.Sprite();
      taskPanel.loadImage(`${ServiceIp}images/system/panelAtlas/task-panel.png`);
      taskPanel.size(155 * PixelRatio, 165 * PixelRatio);
      infoPanel.addChild(taskPanel);
      guanqiaHBox = new Laya.HBox();
      guanqiaHBox.size(200 * PixelRatio, 28 * PixelRatio);
      guanqiaHBox.pos(15 * PixelRatio, 0);
      taskPanel.addChild(guanqiaHBox);
      renderGuanqia(0);
      taskDescLabel = new Laya.Label(map.taskDesc || "消灭所有怪物");
      taskDescLabel.pos(25 * PixelRatio, 62 * PixelRatio);
      taskDescLabel.fontSize = 13 * PixelRatio;
      taskDescLabel.color = "rgb(92, 51, 23)";
      taskPanel.addChild(taskDescLabel);
      let shengyuLabel = new Laya.Text();
      shengyuLabel.text = "剩余：";
      shengyuLabel.pos(25 * PixelRatio, 85 * PixelRatio);
      shengyuLabel.fontSize = 15 * PixelRatio;
      shengyuLabel.color = "#ddd";
      shengyuLabel.stroke = 3 * PixelRatio;
      shengyuLabel.font = "宋体";
      shengyuLabel.strokeColor = "rgb(92, 51, 23)";
      taskPanel.addChild(shengyuLabel);
      monsterImg = new Laya.Image();
      monsterImg.skin = map.taskIcon || `${ServiceIp}images/system/panelAtlas/monster-normal-head.png`;
      monsterImg.pos(28 * PixelRatio, 106 * PixelRatio);
      monsterImg.size(38 * PixelRatio, 35 * PixelRatio);
      taskPanel.addChild(monsterImg);
      monsterCount1 = new Laya.Image();
      monsterCount2 = new Laya.Image();
    }
    let huanhuaPanel = new Laya.Sprite();
    huanhuaPanel.size(147 * PixelRatio, 103 * PixelRatio);
    huanhuaPanel.x = 5 * PixelRatio;
    huanhuaPanel.loadImage(`${ServiceIp}images/system/panelAtlas/huanhua-panel.png`);
    infoPanel.addChild(huanhuaPanel);
    let bottomPanel = new Laya.Sprite();
    bottomPanel.loadImage(`${ServiceIp}images/system/panelAtlas/gameinfo-bottom-panel.png`);
    bottomPanel.size(156 * PixelRatio, 45 * PixelRatio);
    infoPanel.addChild(bottomPanel);
    let picBtn = new MyButton(`${ServiceIp}images/system/panelAtlas/pic-btn1.png`, `${ServiceIp}images/system/panelAtlas/pic-btn2.png`);
    picBtn.size(83 * PixelRatio, 36 * PixelRatio);
    picBtn.pos(2 * PixelRatio, 4 * PixelRatio);
    bottomPanel.addChild(picBtn);
    let leaveBtn = new MyButton(`${ServiceIp}images/system/panelAtlas/leave-btn1.png`, `${ServiceIp}images/system/panelAtlas/leave-btn2.png`);
    leaveBtn.size(66 * PixelRatio, 36 * PixelRatio);
    leaveBtn.pos(87 * PixelRatio, 4 * PixelRatio);
    bottomPanel.addChild(leaveBtn);
    leaveBtn.on(Laya.Event.CLICK, void 0, () => {
      showConfirm("确认离开嘛，不要放弃队友哟~", () => {
        request("area.roomHandler.leaveRoom", null, (res) => {
          if (res.code === 200) {
            let role = RoleService.getInstance().role;
            role.isReady = false;
            role.status = 0 /* IDLE */;
            role.setTeamId(1);
            GamePanel.instance.onDestroy();
            Laya.Scene.open("scene/gameHall.ls", true);
          } else {
            showTips("离开失败");
          }
        });
      });
    });
    return infoPanel;
  };
  var renderMonsterCount = () => {
    let monsterCount = GameScene.instance.monsterCount;
    if (monsterCount < 10) {
      if (monsterCount1) {
        monsterCount1.skin = `${ServiceIp}images/system/panelAtlas/countdown${monsterCount % 10}.png`;
        monsterCount1.pos(85 * PixelRatio, 110 * PixelRatio);
        monsterCount1.size(29 * PixelRatio, 34 * PixelRatio);
        taskPanel.addChild(monsterCount1);
      }
      taskPanel.removeChild(monsterCount2);
    } else {
      if (monsterCount1) {
        monsterCount1.skin = `${ServiceIp}images/system/panelAtlas/countdown${monsterCount % 10}.png`;
        monsterCount1.pos(100 * PixelRatio, 110 * PixelRatio);
        monsterCount1.size(29 * PixelRatio, 34 * PixelRatio);
        taskPanel.addChild(monsterCount1);
      }
      if (monsterCount2) {
        monsterCount2.skin = `${ServiceIp}images/system/panelAtlas/countdown${Math.floor(monsterCount / 10)}.png`;
        monsterCount2.pos(70 * PixelRatio, 110 * PixelRatio);
        monsterCount2.size(29 * PixelRatio, 34 * PixelRatio);
        taskPanel.addChild(monsterCount2);
      }
    }
  };
  var renderNextPanelData = (map, currentGuanqia) => {
    gameName.text = map.name;
    renderGuanqia(currentGuanqia);
    taskDescLabel.text = map.taskDesc || "消灭所有怪物";
    if (monsterImg) {
      monsterImg.skin = map.taskIcon || `${ServiceIp}images/system/panelAtlas/monster-normal-head.png`;
    }
  };
  var renderGuanqia = (currentGuanqia) => {
    guanqiaHBox.removeChildren();
    let guanqiaPre = new Laya.Image(`${ServiceIp}images/game/gameAtlas/guanqia-pre.png`);
    guanqiaPre.size(guanqiaPre.width * PixelRatio, guanqiaPre.height * PixelRatio);
    guanqiaHBox.addChild(guanqiaPre);
    let ge = (currentGuanqia + 1) % 10;
    let shi = Math.floor((currentGuanqia + 1) / 10);
    if (shi) {
      if (shi > 1) {
        let guanqiaJishi = new Laya.Image(`${ServiceIp}images/game/gameAtlas/guanqia${shi}.png`);
        guanqiaJishi.size(guanqiaJishi.width * PixelRatio, guanqiaJishi.height * PixelRatio);
        guanqiaHBox.addChild(guanqiaJishi);
      }
      let guanqiaShi = new Laya.Image(`${ServiceIp}images/game/gameAtlas/guanqia10.png`);
      guanqiaShi.size(guanqiaShi.width * PixelRatio, guanqiaShi.height * PixelRatio);
      guanqiaHBox.addChild(guanqiaShi);
    }
    if (ge) {
      let guanqiaGe = new Laya.Image(`${ServiceIp}images/game/gameAtlas/guanqia${ge}.png`);
      guanqiaGe.size(guanqiaGe.width * PixelRatio, guanqiaGe.height * PixelRatio);
      guanqiaHBox.addChild(guanqiaGe);
    }
    let guanqiaEnd = new Laya.Image(`${ServiceIp}images/game/gameAtlas/guanqia-end.png`);
    guanqiaEnd.size(guanqiaEnd.width * PixelRatio, guanqiaEnd.height * PixelRatio);
    guanqiaHBox.addChild(guanqiaEnd);
  };
  var renderTimer = (seconds) => {
    let m = Math.floor(seconds / 60);
    let s = seconds % 60;
    let mStr = pad(m);
    let sStr = pad(s);
    minute1 && (minute1.skin = `${ServiceIp}images/system/panelAtlas/countdown${mStr.charAt(0)}.png`);
    minute2 && (minute2.skin = `${ServiceIp}images/system/panelAtlas/countdown${mStr.charAt(1)}.png`);
    seconds1 && (seconds1.skin = `${ServiceIp}images/system/panelAtlas/countdown${sStr.charAt(0)}.png`);
    seconds2 && (seconds2.skin = `${ServiceIp}images/system/panelAtlas/countdown${sStr.charAt(1)}.png`);
  };
  var getMonsterListByInfo = (monsterInfo) => {
    if (!monsterInfo)
      return [];
    let list2 = [];
    for (let time in monsterInfo) {
      list2 = [...list2, ...monsterInfo[time]];
    }
    return list2;
  };
  var renderRoleItems = (type, roleList, roleListPanel) => {
    roleListPanel.removeChildren();
    let count = type === "pve" /* pve */ ? 3 : 6;
    for (let i = 0; i < count; i++) {
      let role = roleList[i];
      let roleItem = new Laya.Sprite();
      roleItem.size(156 * PixelRatio, 60 * PixelRatio);
      roleItem.x = 3 * PixelRatio;
      roleItem.name = "roleItem" + i;
      if (role) {
        roleItem.loadImage(`${ServiceIp}images/system/panelAtlas/role-item${role.teamId}.png`);
        let mask2 = new Laya.Sprite();
        mask2.graphics.drawRect(-20 * PixelRatio, -48 * PixelRatio, 100 * PixelRatio, 52 * PixelRatio, 16777215);
        let playerS = new Laya.Sprite();
        playerS.pos(0 * PixelRatio, 50 * PixelRatio);
        playerS.size(role.width * PixelRatio, role.height * PixelRatio);
        role.scale(1.2, 1.2);
        playerS.addChild(role);
        playerS.mask = mask2;
        roleItem.addChild(playerS);
        let roleName = new Laya.Text();
        roleName.text = role.name;
        roleName.pos(66 * PixelRatio, 12 * PixelRatio);
        roleName.fontSize = 12 * PixelRatio;
        roleName.color = "white";
        roleName.strokeColor = TeamColor[role.teamId];
        roleName.stroke = 1 * PixelRatio;
        roleItem.addChild(roleName);
        let level = new Laya.Text();
        level.pos(120 * PixelRatio, 35 * PixelRatio);
        level.text = role.level + " ";
        level.fontSize = 12 * PixelRatio;
        roleItem.addChild(level);
      } else {
        roleItem.loadImage(`${ServiceIp}images/system/panelAtlas/role-item.png`);
      }
      roleListPanel.addChild(roleItem);
    }
  };

  // src/util/res/MonsterRate.ts
  var MonsterRes = {
    1: {
      name: "linghun",
      label: "灵魂",
      defaultx: getFixed(-3 * PixelRatio),
      defaulty: getFixed(-50 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-185 * PixelRatio)
    },
    101: {
      name: "tianshu",
      label: "田鼠",
      defaultx: getFixed(-11 * PixelRatio),
      defaulty: getFixed(-22 * PixelRatio),
      angerDefaultx: getFixed(-19 * PixelRatio),
      angerDefaulty: getFixed(-35 * PixelRatio),
      angerMovex: getFixed(-38 * PixelRatio),
      angerMovey: getFixed(-70 * PixelRatio),
      angerx: getFixed(-37 * PixelRatio),
      angery: getFixed(-38 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-38 * PixelRatio),
      firedx: getFixed(-6 * PixelRatio),
      firedy: getFixed(-29 * PixelRatio),
      movex: getFixed(-37 * PixelRatio),
      movey: getFixed(-37 * PixelRatio),
      hurtx: getFixed(-28 * PixelRatio),
      hurty: getFixed(-35 * PixelRatio),
      deadx: getFixed(-39 * PixelRatio),
      deady: getFixed(-39 * PixelRatio)
    },
    102: {
      name: "caichong",
      label: "彩虫",
      defaultx: getFixed(-6 * PixelRatio),
      defaulty: getFixed(-24 * PixelRatio),
      angerDefaultx: getFixed(-127 * PixelRatio),
      angerDefaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-121 * PixelRatio),
      angerMovex: getFixed(-124 * PixelRatio),
      angerMovey: getFixed(-123 * PixelRatio),
      angerx: getFixed(-5 * PixelRatio),
      angery: getFixed(-68 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-41 * PixelRatio),
      firedx: getFixed(-6 * PixelRatio),
      firedy: getFixed(-30 * PixelRatio),
      hurtx: getFixed(-36 * PixelRatio),
      hurty: getFixed(-45 * PixelRatio),
      deadx: getFixed(-124 * PixelRatio),
      deady: getFixed(-123 * PixelRatio)
    },
    103: {
      name: "shuoshu",
      label: "硕鼠",
      defaultx: getFixed(-18 * PixelRatio),
      defaulty: getFixed(-40 * PixelRatio),
      movex: getFixed(-17 * PixelRatio),
      movey: getFixed(-39 * PixelRatio),
      angerDefaultx: getFixed(-19 * PixelRatio),
      angerDefaulty: getFixed(-53 * PixelRatio),
      angerMovex: getFixed(-114 * PixelRatio),
      angerMovey: getFixed(-112 * PixelRatio),
      angerx: getFixed(-4 * PixelRatio),
      angery: getFixed(-71 * PixelRatio),
      icedx: getFixed(-13 * PixelRatio),
      icedy: getFixed(-43 * PixelRatio),
      firedx: getFixed(-2 * PixelRatio),
      firedy: getFixed(-55 * PixelRatio),
      hurtx: getFixed(-126 * PixelRatio),
      hurty: getFixed(-117 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-121 * PixelRatio),
      skillx: getFixed(-119 * PixelRatio),
      skilly: getFixed(-117 * PixelRatio),
      angerSkillx: getFixed(-108 * PixelRatio),
      angerSkilly: getFixed(-105 * PixelRatio)
    },
    104: {
      name: "daocaoren",
      label: "稻草人",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-117 * PixelRatio),
      angerDefaultx: getFixed(-121 * PixelRatio),
      angerDefaulty: getFixed(-143 * PixelRatio),
      angerMovex: getFixed(-108 * PixelRatio),
      angerMovey: getFixed(-111 * PixelRatio),
      angerx: getFixed(-113 * PixelRatio),
      angery: getFixed(-117 * PixelRatio),
      icedx: getFixed(-16 * PixelRatio),
      icedy: getFixed(-57 * PixelRatio),
      firedx: getFixed(5 * PixelRatio),
      firedy: getFixed(-59 * PixelRatio),
      movex: getFixed(-108 * PixelRatio),
      movey: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-116 * PixelRatio),
      hurty: getFixed(-120 * PixelRatio),
      deadx: getFixed(-110 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    105: {
      name: "feichong",
      label: "肥虫",
      defaultx: getFixed(-6 * PixelRatio),
      defaulty: getFixed(-36 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-41 * PixelRatio),
      firedx: getFixed(-4 * PixelRatio),
      firedy: getFixed(-36 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      hurtx: getFixed(-122 * PixelRatio),
      hurty: getFixed(-118 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-123 * PixelRatio)
    },
    201: {
      name: "daoyao",
      label: "刀妖",
      defaultx: getFixed(4 * PixelRatio),
      defaulty: getFixed(-42 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-97 * PixelRatio),
      angerDefaultx: getFixed(-21 * PixelRatio),
      angerDefaulty: getFixed(-70 * PixelRatio),
      angerMovex: getFixed(-14 * PixelRatio),
      angerMovey: getFixed(-61 * PixelRatio),
      angerx: getFixed(-32 * PixelRatio),
      angery: getFixed(-114 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-123 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-41 * PixelRatio),
      firedx: getFixed(0 * PixelRatio),
      firedy: getFixed(-42 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    202: {
      name: "guibing",
      label: "鬼兵",
      defaultx: getFixed(-12 * PixelRatio),
      defaulty: getFixed(-31 * PixelRatio),
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-93 * PixelRatio),
      angerDefaultx: getFixed(-103 * PixelRatio),
      angerDefaulty: getFixed(-91 * PixelRatio),
      angerMovex: getFixed(-112 * PixelRatio),
      angerMovey: getFixed(-102 * PixelRatio),
      angerx: getFixed(-112 * PixelRatio),
      angery: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-105 * PixelRatio),
      hurty: getFixed(-102 * PixelRatio),
      icedx: getFixed(-12 * PixelRatio),
      icedy: getFixed(-44 * PixelRatio),
      firedx: getFixed(0 * PixelRatio),
      firedy: getFixed(-35 * PixelRatio),
      deadx: getFixed(-105 * PixelRatio),
      deady: getFixed(-104 * PixelRatio),
      skillx: getFixed(-105 * PixelRatio),
      skilly: getFixed(-103 * PixelRatio)
    },
    203: {
      name: "daozei",
      label: "盗贼",
      defaultx: getFixed(-32 * PixelRatio),
      defaulty: getFixed(-49 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-123 * PixelRatio),
      angerDefaultx: getFixed(-120 * PixelRatio),
      angerDefaulty: getFixed(-120 * PixelRatio),
      angerMovex: getFixed(-120 * PixelRatio),
      angerMovey: getFixed(-124 * PixelRatio),
      angerx: getFixed(-118 * PixelRatio),
      angery: getFixed(-118 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-120 * PixelRatio),
      icedx: getFixed(-15 * PixelRatio),
      icedy: getFixed(-46 * PixelRatio),
      firedx: getFixed(-10 * PixelRatio),
      firedy: getFixed(-52 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-119 * PixelRatio)
    },
    204: {
      name: "denglong",
      label: "灯笼",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      angerDefaultx: getFixed(-113 * PixelRatio),
      angerDefaulty: getFixed(-117 * PixelRatio),
      angerMovex: getFixed(-112 * PixelRatio),
      angerMovey: getFixed(-115 * PixelRatio),
      angerx: getFixed(-117 * PixelRatio),
      angery: getFixed(-124 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-114 * PixelRatio),
      icedx: getFixed(-10 * PixelRatio),
      icedy: getFixed(-46 * PixelRatio),
      firedx: getFixed(-10 * PixelRatio),
      firedy: getFixed(-47 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-170 * PixelRatio),
      skillx: getFixed(-124 * PixelRatio),
      skilly: getFixed(-154 * PixelRatio)
    },
    205: {
      name: "denglongmo",
      label: "灯笼魔",
      defaultx: getFixed(-97 * PixelRatio),
      defaulty: getFixed(-147 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      angerDefaultx: getFixed(-113 * PixelRatio),
      angerDefaulty: getFixed(-117 * PixelRatio),
      angerMovex: getFixed(-112 * PixelRatio),
      angerMovey: getFixed(-115 * PixelRatio),
      angerx: getFixed(-117 * PixelRatio),
      angery: getFixed(-124 * PixelRatio),
      hurtx: getFixed(-98 * PixelRatio),
      hurty: getFixed(-124 * PixelRatio),
      icedx: getFixed(-30 * PixelRatio),
      icedy: getFixed(-126 * PixelRatio),
      firedx: getFixed(-30 * PixelRatio),
      firedy: getFixed(-126 * PixelRatio),
      deadx: getFixed(-97 * PixelRatio),
      deady: getFixed(-147 * PixelRatio),
      skillx: getFixed(-97 * PixelRatio),
      skilly: getFixed(-124 * PixelRatio)
    },
    301: {
      name: "daoyao",
      label: "刀妖",
      defaultx: getFixed(4 * PixelRatio),
      defaulty: getFixed(-42 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-97 * PixelRatio),
      angerDefaultx: getFixed(-21 * PixelRatio),
      angerDefaulty: getFixed(-70 * PixelRatio),
      angerMovex: getFixed(-14 * PixelRatio),
      angerMovey: getFixed(-61 * PixelRatio),
      angerx: getFixed(-32 * PixelRatio),
      angery: getFixed(-114 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-123 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-41 * PixelRatio),
      firedx: getFixed(0 * PixelRatio),
      firedy: getFixed(-42 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    302: {
      name: "daoyao",
      label: "刀妖",
      defaultx: getFixed(4 * PixelRatio),
      defaulty: getFixed(-42 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-97 * PixelRatio),
      angerDefaultx: getFixed(-21 * PixelRatio),
      angerDefaulty: getFixed(-70 * PixelRatio),
      angerMovex: getFixed(-14 * PixelRatio),
      angerMovey: getFixed(-61 * PixelRatio),
      angerx: getFixed(-32 * PixelRatio),
      angery: getFixed(-114 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-123 * PixelRatio),
      icedx: getFixed(-11 * PixelRatio),
      icedy: getFixed(-41 * PixelRatio),
      firedx: getFixed(0 * PixelRatio),
      firedy: getFixed(-42 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    }
  };

  // src/entity/monster/MonsterStateMachine.ts
  var deadDirectionMap = {
    [101 /* tianshu */]: 1
  };
  var MonstertateMachine = class extends StateMachine {
    init(owner, monsterId, monsterType, stateTable) {
      this.monsterId = monsterId;
      this.owner = owner;
      this.monsterType = monsterType;
      this.name = MonsterRes[this.owner.type].name;
      this.stateTable = stateTable;
      this.initParams();
      this.initStateMachines();
    }
    initParams() {
      this.stateTable.default && this.params.set("default" /* default */, getInitParamsTrigger());
      this.stateTable.move && this.params.set("move" /* move */, getInitParamsTrigger());
      this.stateTable.angerDefault && this.params.set("angerDefault" /* angerDefault */, getInitParamsTrigger());
      this.stateTable.angerMove && this.params.set("angerMove" /* angerMove */, getInitParamsTrigger());
      this.stateTable.anger && this.params.set("anger" /* anger */, getInitParamsTrigger());
      this.stateTable.hurt && this.params.set("hurt" /* hurt */, getInitParamsTrigger());
      this.stateTable.dead && this.params.set("dead" /* dead */, getInitParamsTrigger());
      this.stateTable.iced && this.params.set("iced" /* iced */, getInitParamsTrigger());
      this.stateTable.fired && this.params.set("fired" /* fired */, getInitParamsTrigger());
      this.stateTable.skill && this.params.set("skill" /* skill */, getInitParamsTrigger());
      this.stateTable.angerSkill && this.params.set("angerSkill" /* angerSkill */, getInitParamsTrigger());
    }
    initStateMachines() {
      this.stateTable.default && this.stateMachines.set("default" /* default */, new DirectionStateMachine("default" /* default */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-default`, true, 100));
      this.stateTable.move && this.stateMachines.set("move" /* move */, new DirectionStateMachine("move" /* move */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-move`, true, 120));
      this.stateTable.angerDefault && this.stateMachines.set("angerDefault" /* angerDefault */, new DirectionStateMachine("angerDefault" /* angerDefault */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-anger-default`, true, 100));
      this.stateTable.angerMove && this.stateMachines.set("angerMove" /* angerMove */, new DirectionStateMachine("angerMove" /* angerMove */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-anger-move`, true, 120));
      this.stateTable.anger && this.stateMachines.set("anger" /* anger */, new State("anger" /* anger */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-anger.atlas`, true, 160, true));
      this.stateTable.hurt && this.stateMachines.set("hurt" /* hurt */, new DirectionStateMachine("hurt" /* hurt */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-hurt`, false, 100));
      this.stateTable.iced && this.stateMachines.set("iced" /* iced */, new State("iced" /* iced */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-iced.atlas`, false, 100, true));
      this.stateTable.fired && this.stateMachines.set("fired" /* fired */, new State("fired" /* fired */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-fired.atlas`, false, 100, true));
      if (deadDirectionMap[this.monsterType]) {
        this.stateTable.dead && this.stateMachines.set("dead" /* dead */, new DirectionStateMachine("dead" /* dead */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-dead`, false, 100, true));
      } else {
        this.stateTable.dead && this.stateMachines.set("dead" /* dead */, new State("dead" /* dead */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-dead.atlas`, false, 100, true));
      }
      this.stateTable.skill && this.stateMachines.set("skill" /* skill */, new DirectionStateMachine("skill" /* skill */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-skill`, true, 100));
      this.stateTable.angerSkill && this.stateMachines.set("angerSkill" /* angerSkill */, new DirectionStateMachine("angerSkill" /* angerSkill */, this, `${ServiceIp}images/monster/${this.name}/${this.name}-anger-skill`, true, 100));
    }
    destroy() {
      this.params.clear();
      this.stateMachines.clear();
    }
    run() {
      var _a, _b, _c, _d, _e, _f, _g, _h, _i;
      if (!this.currentState) {
        this.currentState = this.stateMachines.get("default" /* default */);
        return;
      }
      switch (this.currentState) {
        case this.stateMachines.get("default" /* default */):
          if (this.stateTable.move && this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.stateTable.anger && this.params.get("anger" /* anger */).value) {
            this.currentState = this.stateMachines.get("anger" /* anger */);
          } else if (this.stateTable.skill && ((_a = this.params.get("skill" /* skill */)) == null ? void 0 : _a.value)) {
            this.currentState = this.stateMachines.get("skill" /* skill */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("move" /* move */):
          if (this.stateTable.default && this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.stateTable.anger && this.params.get("anger" /* anger */).value) {
            this.currentState = this.stateMachines.get("anger" /* anger */);
          } else if (this.stateTable.skill && ((_b = this.params.get("skill" /* skill */)) == null ? void 0 : _b.value)) {
            this.currentState = this.stateMachines.get("skill" /* skill */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("anger" /* anger */):
          if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.angerSkill && ((_c = this.params.get("angerSkill" /* angerSkill */)) == null ? void 0 : _c.value)) {
            this.currentState = this.stateMachines.get("angerSkill" /* angerSkill */);
          } else if (this.stateTable.skill && ((_d = this.params.get("skill" /* skill */)) == null ? void 0 : _d.value)) {
            this.currentState = this.stateMachines.get("skill" /* skill */);
          } else if (this.stateTable.angerMove && ((_e = this.params.get("angerMove" /* angerMove */)) == null ? void 0 : _e.value)) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("angerDefault" /* angerDefault */):
          if (this.stateTable.angerMove && this.params.get("angerMove" /* angerMove */).value) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.angerSkill && ((_f = this.params.get("angerSkill" /* angerSkill */)) == null ? void 0 : _f.value)) {
            this.currentState = this.stateMachines.get("angerSkill" /* angerSkill */);
          } else if (this.stateTable.skill && ((_g = this.params.get("skill" /* skill */)) == null ? void 0 : _g.value)) {
            this.currentState = this.stateMachines.get("skill" /* skill */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("angerMove" /* angerMove */):
          if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.angerSkill && ((_h = this.params.get("angerSkill" /* angerSkill */)) == null ? void 0 : _h.value)) {
            this.currentState = this.stateMachines.get("angerSkill" /* angerSkill */);
          } else if (this.stateTable.skill && ((_i = this.params.get("skill" /* skill */)) == null ? void 0 : _i.value)) {
            this.currentState = this.stateMachines.get("skill" /* skill */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("skill" /* skill */):
          if (this.stateTable.default && this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.move && this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.stateTable.angerMove && this.params.get("angerMove" /* angerMove */).value) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.anger && this.params.get("anger" /* anger */).value) {
            this.currentState = this.stateMachines.get("anger" /* anger */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("angerSkill" /* angerSkill */):
          if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.move && this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.stateTable.angerMove && this.params.get("angerMove" /* angerMove */).value) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.iced && this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("hurt" /* hurt */):
          if (this.stateTable.default && this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.move && this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.stateTable.angerMove && this.params.get("angerMove" /* angerMove */).value) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.anger && this.params.get("anger" /* anger */).value) {
            this.currentState = this.stateMachines.get("anger" /* anger */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("iced" /* iced */):
          if (this.stateTable.default && this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.hurt && this.params.get("hurt" /* hurt */).value) {
            this.currentState = this.stateMachines.get("hurt" /* hurt */);
          } else if (this.stateTable.fired && this.params.get("fired" /* fired */).value) {
            this.currentState = this.stateMachines.get("fired" /* fired */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
        case this.stateMachines.get("fired" /* fired */):
          if (this.stateTable.default && this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          } else if (this.stateTable.angerDefault && this.params.get("angerDefault" /* angerDefault */).value) {
            this.currentState = this.stateMachines.get("angerDefault" /* angerDefault */);
          } else if (this.stateTable.move && this.params.get("move" /* move */).value) {
            this.currentState = this.stateMachines.get("move" /* move */);
          } else if (this.stateTable.angerMove && this.params.get("angerMove" /* angerMove */).value) {
            this.currentState = this.stateMachines.get("angerMove" /* angerMove */);
          } else if (this.stateTable.anger && this.params.get("anger" /* anger */).value) {
            this.currentState = this.stateMachines.get("anger" /* anger */);
          } else if (this.stateTable.dead && this.params.get("dead" /* dead */).value) {
            this.currentState = this.stateMachines.get("dead" /* dead */);
          } else {
            this.currentState = this.currentState;
          }
          break;
      }
    }
  };

  // src/entity/monster/MonsterBody.ts
  var { regClass: regClass6 } = Laya;
  var MonsterBody = class extends Entity {
    constructor() {
      super();
      this.isAnger = false;
    }
    init(id, type, tree, stateTable) {
      this.id = id;
      this.type = type;
      this.tree = tree;
      this.stateTable = stateTable;
      this.info = MonsterRes[type];
      this.fsm = new MonstertateMachine();
      this.fsm.init(this, this.id, this.type, stateTable);
      this.setAction("default" /* default */);
    }
    setDirection(direction) {
      if (this.direction === direction)
        return;
      this.direction = direction;
    }
    setAction(action, loop) {
      if (this.state === action || !this.info)
        return;
      let x = this.info[`${action}x`];
      if (x) {
        this.x = x;
      }
      let y = this.info[`${action}y`];
      if (y) {
        this.y = y;
      }
      this.state = action;
    }
    onUpdate(dt) {
      if (!this.fsm)
        return;
      this.tree.root.run(dt);
    }
  };
  MonsterBody = __decorateClass([
    regClass6("7BZA0_KkT8OBtBWCOFDs0A")
  ], MonsterBody);

  // src/entity/monster/Monster.ts
  var Monster = class extends Animal {
    constructor() {
      super();
      this.rebirthAni = new Laya.Animation();
      this.tw = new Laya.Tween();
      this.speed = 0;
      this.icedFrameCount = 280;
      this.rebirthFrameCount = 90;
      this.angerFrameCount = 104;
      this.deadFrameCount = 65;
      this.monsterPushFrameCount = 24;
      this.hurtProtectFrameCount = 32;
      // 受伤保护延迟, 实现双打
      this.entityS = new Laya.Sprite();
      // 实际玩家大小，参与碰撞检测等
      this.bodyS = new MonsterBody();
      this.bloodS = new Blood();
      // 血条
      this.subBlood = new SubBlood();
      this.bloodShowFrameCount = 30;
      this.baohuzhaoFrameCount = 130;
      this.hurtSourceList = [];
    }
    init(info) {
      super.init(info);
      this.props = {
        hp: info.hp,
        mp: info.mp,
        power: info.power,
        killValue: 0,
        luckyValue: 0,
        speed: getFixed(info.speed * BASE_SPEED)
      };
      this.type = info.type;
      this.hp = this.props.hp;
      this.rebirth();
    }
    initEntity() {
      this.entityS.size(34 * PixelRatio, 22 * PixelRatio);
      this.entityS.pos((GridWidth - this.entityS.width) / 2, (GridWidth - this.entityS.height) / 2);
      this.entityS.loadImage(`${ServiceIp}images/player/other/shadow.png`);
    }
    getRect(monsterData) {
      if (!monsterData) {
        monsterData = this.getMonsterData();
      }
      return { width: this.entityS.width, height: this.entityS.height, x: monsterData.pos.x + this.entityS.x, y: monsterData.pos.y + this.entityS.y };
    }
    initBody() {
    }
    onUpdate(dt) {
      this.bodyS.onUpdate(dt);
    }
    renderMonster(data) {
      if (data.state === "dead" /* dead */ && this.hp <= 0)
        return;
      this.zOrder = data.row;
      if (data.hurting) {
        this.removeIced(data);
      } else if (this.contains(this.baohuzhaoAni)) {
        this.removeChild(this.baohuzhaoAni);
        this.removeChild(this.bloodS);
      }
      if (this.hp !== data.hp) {
        this.renderHpChange(data);
        this.hp = data.hp;
      }
      if (data.direction && data.direction !== this.bodyS.direction) {
        this.bodyS.setDirection(data.direction);
      }
      this.renderPosition(data);
      this.bodyS.setAction(data.state);
      if (data.hurting) {
        this.initBaohuzhao(data);
      }
    }
    notMove(data) {
      return MoveCondition.indexOf(data.state) === -1;
    }
    renderPosition(data) {
      let position = data.pos;
      if (this.targetPos.x !== position.x || this.targetPos.y !== position.y) {
        this.tw.clear();
        if (data.state !== "skill" /* skill */) {
          this.bodyS.setAction(this.bodyS.isAnger ? "angerMove" /* angerMove */ : "move" /* move */);
        }
        this.pos(this.targetPos.x, this.targetPos.y);
        this.targetPos.x = position.x;
        this.targetPos.y = position.y;
        this.tw.to(this, { x: position.x, y: position.y }, OneFrameTime, Laya.Ease.linearOut);
      }
    }
    renderHpChange(data) {
      if (this.type !== 1 /* linghun */) {
        playSound(`${ServiceIp}sound/monster-hurt.wav`);
        this.renderSubBlood(data, Math.ceil(this.hp - data.hp));
        if (data.hp <= 0) {
          return;
        }
        if (data.hp < this.hp) {
          this.initBlood(data);
        }
      } else if (this.type === 1 /* linghun */) {
        if (data.hp <= 0) {
          playSound(`${ServiceIp}sound/game-start.wav`);
        }
      }
    }
    renderSubBlood(data, val) {
      this.subBlood.create(val, data.isStriked ? "monster" : "");
      this.subBlood.pos(0, 0);
      this.subBlood.scale(0.2, 0.2);
      this.addChild(this.subBlood);
      Laya.Tween.to(this.subBlood, { x: 17 * PixelRatio, y: -105 * PixelRatio, scaleX: 1, scaleY: 1 }, 120, Laya.Ease.linearOut);
      startTickTask("bloodShowFrameCount", this, this.bloodShowFrameCount, () => {
        this.subBlood.destroy();
        this.removeChild(this.subBlood);
      });
    }
    initBlood(data) {
      this.bloodS.setTotal(this.props.hp);
      this.bloodS.setCurrent(data.hp);
      this.bloodS.x = -ResRate["monster-blood"].x;
      this.bloodS.y = -ResRate["monster-blood"].y;
      this.addChild(this.bloodS);
    }
    initBaohuzhao(data) {
      if (data.hp <= 0 || this.contains(this.baohuzhaoAni))
        return;
      this.baohuzhaoAni.source = `${ServiceIp}images/player/baohuzhao.atlas`;
      this.baohuzhaoAni.x = ResRate["baohuzhao"].x;
      this.baohuzhaoAni.y = ResRate["baohuzhao"].y;
      this.baohuzhaoAni.scale(PixelRatio, PixelRatio);
      this.baohuzhaoAni.interval = 100;
      this.baohuzhaoAni.play(0, true);
      this.addChild(this.baohuzhaoAni);
    }
    /**
     * 怪物出生
     */
    rebirth() {
      this.rebirthAni.source = `${ServiceIp}images/monster/monster-rebirth.atlas`;
      this.rebirthAni.interval = 40;
      this.rebirthAni.x = (GridWidth - 70 * PixelRatio) / 2, this.rebirthAni.y = (GridWidth - 68 * PixelRatio) / 2;
      this.rebirthAni.scale(PixelRatio, PixelRatio);
      this.addChild(this.rebirthAni);
      this.rebirthAni.play(0, false);
      this.initEntity();
      startTickTask("rebirthFrameCount", this, this.rebirthFrameCount, () => {
        this.removeChild(this.rebirthAni);
        this.addChild(this.entityS);
        this.initBody();
      });
    }
    push() {
      var _a;
      let monsterData = this.getMonsterData();
      if (!monsterData || monsterData.state === "skill" /* skill */)
        return;
      let row = monsterData.row;
      let col = monsterData.col;
      switch (monsterData.direction) {
        case 1 /* LEFT */:
          col--;
          break;
        case 2 /* RIGHT */:
          col++;
          break;
        case 3 /* UP */:
          row--;
          break;
        case 4 /* DOWN */:
          row++;
          break;
      }
      if (!GamePanel.instance.grid[row])
        return;
      let grid = GamePanel.instance.grid[row][col];
      if (!grid || !(grid instanceof Box))
        return;
      monsterData.state = this.bodyS.isAnger && ((_a = this.bodyS.stateTable) == null ? void 0 : _a.angerSkill) ? "angerSkill" /* angerSkill */ : "skill" /* skill */;
      startTickTask("monsterPushFrameCount", this, this.monsterPushFrameCount, () => {
        let monsterData2 = this.getMonsterData();
        if (!monsterData2)
          return;
        monsterData2.state = this.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
      });
      let boxData = grid.getBoxData();
      if (boxData.pushing)
        return;
      boxData.pushing = true;
      boxData.playerId = 0;
      startTickTask("pushFrameCount", grid, grid.pushFrameCount, () => {
        let boxData2 = grid.getBoxData();
        if (!boxData2)
          return;
        boxData2.pushing = false;
        StateService.getInstance().handleBoxPushed(grid, boxData2, 0, this.props.power, monsterData.direction);
      });
    }
    removeIced(data) {
      if (data.state !== "iced" /* iced */)
        return;
      this.bodyS.setAction(this.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */);
    }
    dead(data) {
      this.clearSkill(data);
      if (this.contains(this.baohuzhaoAni)) {
        this.removeChild(this.baohuzhaoAni);
      }
      renderMonsterCount();
      this.removeChild(this.bloodS);
      startTickTask("deadFrameCount", this, this.deadFrameCount, () => {
        this && this.deadStop();
      });
      request("area.roomHandler.monsterDead", { monsterId: this.id, killId: this.killId, v: this.killValue, s: Laya.timer.scale });
    }
    anger() {
      var _a;
      if (!this.bodyS || this.bodyS.isAnger || !((_a = this.bodyS.stateTable) == null ? void 0 : _a.anger))
        return;
      let monsterData = this.getMonsterData();
      if (monsterData.state === "iced" /* iced */ || monsterData.state === "fired" /* fired */ || monsterData.state === "dead" /* dead */ || monsterData.hp <= 0)
        return;
      this.bodyS.isAnger = true;
      monsterData.state = "anger" /* anger */;
      startTickTask("angerFrameCount", this, this.angerFrameCount, () => {
        let monsterData2 = this.getMonsterData();
        if (!monsterData2 || monsterData2.state === "dead" /* dead */)
          return;
        monsterData2.state = "angerDefault" /* angerDefault */;
      });
      if (this.props.angerSpeed) {
        this.props.speed = this.props.angerSpeed;
      }
    }
    clearSkill(data) {
      if (data && data.skillGridList && data.skillGridList.length) {
        data.skillGridList.forEach((grid) => {
          if (!this)
            return;
          GamePanel.instance.removeFromMoveGrid(grid.row, grid.col, this.skillObject);
        });
        data.skillGridList = [];
      }
    }
    deadStop() {
      var _a;
      (_a = this.bodyS.fsm) == null ? void 0 : _a.destroy();
      this.removeChild(this.entityS);
      this.removeChild(this.bodyS);
      MonsterService.getInstance().recover(this);
    }
    getMonsterData() {
      return StateService.getInstance().state.monster.find((item) => item.id === this.id);
    }
  };

  // src/entity/monster/changancheng/Daoyao.ts
  var Daoyao = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new DaoyaoTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/conditional/ConditionalSameRowOrColChangeDirection.ts
  var ConditionalSameRowOrColChangeDirection = class extends BTConditional {
    constructor(context) {
      super(context);
      this.stateService = StateService.getInstance();
      this.context = context;
    }
    onUpdate() {
      let roleDataList = this.stateService.state.players;
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (monsterData.state === "anger" /* anger */ || monsterData.state === "iced" /* iced */ || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      for (let i = 0; i < roleDataList.length; i++) {
        let roleData = roleDataList[i];
        if (roleData.state === "dead" /* dead */ || roleData.state === "linghun" /* linghun */)
          continue;
        if (roleData.row === monsterData.row && roleData.col !== monsterData.col) {
          let random = MyRandom();
          let offset = random > 0.5 ? 1 : -1;
          if (this.stateService.monsterCanMoveByRowCol(monsterData.row + 1 * offset, monsterData.col)) {
            monsterData.direction = offset > 0 ? 4 /* DOWN */ : 3 /* UP */;
          } else if (this.stateService.monsterCanMoveByRowCol(monsterData.row + 1 * -offset, monsterData.col)) {
            monsterData.direction = offset < 0 ? 4 /* DOWN */ : 3 /* UP */;
          }
          return 2 /* Success */;
        }
        if (roleData.col === monsterData.col && roleData.row !== monsterData.row) {
          let random = MyRandom();
          let offset = random > 0.5 ? 1 : -1;
          if (this.stateService.monsterCanMoveByRowCol(monsterData.row, monsterData.col + 1 * offset)) {
            monsterData.direction = offset > 0 ? 2 /* RIGHT */ : 1 /* LEFT */;
          } else if (this.stateService.monsterCanMoveByRowCol(monsterData.row, monsterData.col + 1 * -offset)) {
            monsterData.direction = offset < 0 ? 1 /* LEFT */ : 2 /* RIGHT */;
          }
          return 2 /* Success */;
        }
      }
      return 3 /* Failure */;
    }
  };

  // src/util/bt/biz/tree/DaozeiTree.ts
  var DaozeiTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ConditionalSameRowOrColChangeDirection(this.context),
            // new ActionMoveGrid(this.context),
            new ActionMoveGrid(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/changancheng/Daozei.ts
  var Daozei = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new DaozeiTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
    anger() {
      super.anger();
    }
  };

  // src/util/bt/biz/action/ActionFire.ts
  var ActionFire = class extends BTAction {
    // public fireBomb = new FireBomb()
    // public skillGridList: any
    constructor(context) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
      this.skillStatus = 0;
      // 0：未释放，1：释放中，2：释放结束
      this.fireFrameCount = 170;
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      if (monsterData.state === "dead" /* dead */) {
        this.context.clearSkill(monsterData);
        return 3 /* Failure */;
      }
      if (monsterData.nuqi < this.context.skillValue)
        return 3 /* Failure */;
      if (this.skillStatus === 0) {
        monsterData.state = "skill" /* skill */;
        this.skillStatus = 1;
        this.context.skillObject.power = this.context.props.power;
        this.context.skillObject.playerId = 0;
        monsterData.skillGridList = this.getFireGridList(monsterData);
        monsterData.skillGridList.forEach((grid) => {
          GamePanel.instance.setMoveGrid(grid.row, grid.col, this.context.skillObject);
        });
        startTickTask("fireFrameCount", this, this.fireFrameCount, () => {
          if (!this)
            return;
          let monsterData2 = this.context.getMonsterData();
          if (!monsterData2)
            return;
          this.context.clearSkill(monsterData2);
          this.skillStatus = 2;
        });
      }
      if (this.skillStatus === 2) {
        monsterData.state = this.context.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
        monsterData.nuqi = 0;
        return 2 /* Success */;
      }
      return 1 /* Running */;
    }
    getFireGridList(monsterData) {
      let list2 = [];
      switch (monsterData.direction) {
        case 1 /* LEFT */:
          monsterData.col - 1 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 1 });
          monsterData.col - 2 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 2 });
          monsterData.col - 3 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 3 });
          break;
        case 2 /* RIGHT */:
          monsterData.col + 1 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 1 });
          monsterData.col + 2 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 2 });
          monsterData.col + 3 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 3 });
          break;
        case 3 /* UP */:
          monsterData.row - 1 >= 0 && list2.push({ row: monsterData.row - 1, col: monsterData.col });
          monsterData.row - 2 >= 0 && list2.push({ row: monsterData.row - 2, col: monsterData.col });
          monsterData.row - 3 >= 0 && list2.push({ row: monsterData.row - 3, col: monsterData.col });
          break;
        case 4 /* DOWN */:
          monsterData.row + 1 < GameRows && list2.push({ row: monsterData.row + 1, col: monsterData.col });
          monsterData.row + 2 < GameRows && list2.push({ row: monsterData.row + 2, col: monsterData.col });
          monsterData.row + 3 < GameRows && list2.push({ row: monsterData.row + 3, col: monsterData.col });
          break;
      }
      return list2;
    }
    onEnd() {
      super.onEnd();
      this.skillStatus = 0;
    }
  };

  // src/util/bt/biz/conditional/ConditionalAnger.ts
  var ConditionalAnger = class extends BTConditional {
    constructor(context) {
      super(context);
      this.context = context;
    }
    onUpdate(dt = 0) {
      var _a, _b;
      if ((_b = (_a = this.context) == null ? void 0 : _a.bodyS) == null ? void 0 : _b.isAnger)
        return 2 /* Success */;
      return 3 /* Failure */;
    }
  };

  // src/util/bt/biz/tree/DenglongTree.ts
  var DenglongTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            // new ConditionalSameRowOrCol(this.context),
            // new ActionFindNextDirection(this.context, 3),
            // new ActionMoveGrid(this.context),
            // new ConditionalSameRowOrCol(this.context),
            new ActionFire(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ConditionalAnger(this.context),
            new ActionFindNextDirection(this.context, 5),
            new ActionMoveGrid(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/changancheng/Denglong.ts
  var Denglong = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.skillValue = 6;
      this.skillObject = new FireBomb();
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 1,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new DenglongTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/entity/monster/skill/DenglongmoFire.ts
  var { regClass: regClass7 } = Laya;
  var DenglongmoFire = class extends Laya.Sprite {
    constructor() {
      super();
    }
    initUI() {
      if (!this.ani) {
        this.ani = new Laya.Animation();
      }
      if (this.contains(this.ani)) {
        this.removeChild(this.ani);
      }
      let d = DirectionMap[this.direction];
      this.ani.source = `${ServiceIp}images/monster/denglongmo/denglongmo-skill-huoyan-${d}.atlas`;
      this.ani.x = ResRate["denglongmo-fire-" + d].x;
      this.ani.y = ResRate["denglongmo-fire-" + d].y;
      this.ani.scale(PixelRatio, PixelRatio);
      this.ani.play(0, true);
      this.addChild(this.ani);
    }
    setDirection(direction) {
      this.direction = direction;
      this.initUI();
    }
    onDestroy() {
      this.ani.stop();
      this.removeChild(this.ani);
    }
  };
  DenglongmoFire = __decorateClass([
    regClass7("dbPecLp0Tu-EGwKwsCDl-Q")
  ], DenglongmoFire);

  // src/util/bt/biz/action/ActionFireBig.ts
  var ActionFireBig = class extends BTAction {
    constructor(context) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
      this.skillStatus = 0;
      // 0：未释放，1：释放中，2：释放结束
      this.fireFrameCount = 170;
      // public fireBomb = new FireBomb()
      // public skillGridList: any
      this.denglongmoFire = new DenglongmoFire();
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      if (monsterData.nuqi < this.context.skillValue)
        return 3 /* Failure */;
      if (monsterData.state === "dead" /* dead */) {
        this.context.clearSkill(monsterData);
        GamePanel.instance.removeChild(this.denglongmoFire);
        return 3 /* Failure */;
      }
      if (this.skillStatus === 0) {
        this.skillStatus = 1;
        monsterData.state = "default" /* default */;
        this.denglongmoFire.setDirection(monsterData.direction);
        this.denglongmoFire.size(474 * PixelRatio, 435 * PixelRatio);
        this.denglongmoFire.pos(monsterData.pos.x, monsterData.pos.y);
        this.denglongmoFire.zOrder = 1e3;
        GamePanel.instance.addChild(this.denglongmoFire);
        this.context.skillObject.power = this.context.props.power;
        this.context.skillObject.playerId = 0;
        monsterData.skillGridList = this.getFireGridList(monsterData);
        monsterData.skillGridList.forEach((grid) => {
          GamePanel.instance.setMoveGrid(grid.row, grid.col, this.context.skillObject);
        });
        startTickTask("fireFrameCount", this, this.fireFrameCount, () => {
          if (!this)
            return;
          GamePanel.instance.removeChild(this.denglongmoFire);
          let monsterData2 = this.context.getMonsterData();
          this.skillStatus = 2;
          if (!monsterData2)
            return;
          monsterData2.skillGridList.forEach((grid) => {
            GamePanel.instance.removeFromMoveGrid(grid.row, grid.col, this.context.skillObject);
          });
        });
      }
      if (this.skillStatus === 2) {
        monsterData.nuqi = 0;
        return 2 /* Success */;
      }
      return 1 /* Running */;
    }
    getFireGridList(monsterData) {
      let list2 = [];
      switch (monsterData.direction) {
        case 1 /* LEFT */:
          monsterData.col - 1 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 1 });
          monsterData.col - 1 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 1 });
          monsterData.col - 2 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 2 });
          monsterData.col - 2 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 2 });
          monsterData.col - 3 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 3 });
          monsterData.col - 3 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 3 });
          monsterData.col - 4 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 4 });
          monsterData.col - 4 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 4 });
          monsterData.col - 5 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 5 });
          monsterData.col - 5 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 5 });
          monsterData.col - 6 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 6 });
          monsterData.col - 6 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 6 });
          monsterData.col - 7 >= 0 && list2.push({ row: monsterData.row, col: monsterData.col - 7 });
          monsterData.col - 7 >= 0 && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 7 });
          break;
        case 2 /* RIGHT */:
          monsterData.col + 1 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 1 });
          monsterData.col + 1 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 1 });
          monsterData.col + 2 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 2 });
          monsterData.col + 2 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 2 });
          monsterData.col + 3 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 3 });
          monsterData.col + 3 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 3 });
          monsterData.col + 4 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 4 });
          monsterData.col + 4 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 4 });
          monsterData.col + 5 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 5 });
          monsterData.col + 5 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 5 });
          monsterData.col + 6 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 6 });
          monsterData.col + 6 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 6 });
          monsterData.col + 7 < GameCols && list2.push({ row: monsterData.row, col: monsterData.col + 7 });
          monsterData.col + 7 < GameCols && monsterData.row >= 1 && list2.push({ row: monsterData.row - 1, col: monsterData.col + 7 });
          break;
        case 3 /* UP */:
          monsterData.row - 1 >= 0 && list2.push({ row: monsterData.row - 1, col: monsterData.col });
          monsterData.row - 1 >= 0 && list2.push({ row: monsterData.row - 1, col: monsterData.col - 1 });
          monsterData.row - 2 >= 0 && list2.push({ row: monsterData.row - 2, col: monsterData.col });
          monsterData.row - 2 >= 0 && list2.push({ row: monsterData.row - 2, col: monsterData.col - 1 });
          monsterData.row - 3 >= 0 && list2.push({ row: monsterData.row - 3, col: monsterData.col });
          monsterData.row - 3 >= 0 && list2.push({ row: monsterData.row - 3, col: monsterData.col - 1 });
          monsterData.row - 4 >= 0 && list2.push({ row: monsterData.row - 4, col: monsterData.col });
          monsterData.row - 4 >= 0 && list2.push({ row: monsterData.row - 4, col: monsterData.col - 1 });
          monsterData.row - 5 >= 0 && list2.push({ row: monsterData.row - 5, col: monsterData.col });
          monsterData.row - 5 >= 0 && list2.push({ row: monsterData.row - 5, col: monsterData.col - 1 });
          monsterData.row - 6 >= 0 && list2.push({ row: monsterData.row - 6, col: monsterData.col });
          monsterData.row - 6 >= 0 && list2.push({ row: monsterData.row - 6, col: monsterData.col - 1 });
          monsterData.row - 7 >= 0 && list2.push({ row: monsterData.row - 7, col: monsterData.col });
          monsterData.row - 7 >= 0 && list2.push({ row: monsterData.row - 7, col: monsterData.col - 1 });
          break;
        case 4 /* DOWN */:
          monsterData.row + 1 < GameRows && list2.push({ row: monsterData.row + 1, col: monsterData.col });
          monsterData.row + 1 < GameRows && list2.push({ row: monsterData.row + 1, col: monsterData.col - 1 });
          monsterData.row + 2 < GameRows && list2.push({ row: monsterData.row + 2, col: monsterData.col });
          monsterData.row + 2 < GameRows && list2.push({ row: monsterData.row + 2, col: monsterData.col - 1 });
          monsterData.row + 3 < GameRows && list2.push({ row: monsterData.row + 3, col: monsterData.col });
          monsterData.row + 3 < GameRows && list2.push({ row: monsterData.row + 3, col: monsterData.col - 1 });
          monsterData.row + 4 < GameRows && list2.push({ row: monsterData.row + 4, col: monsterData.col });
          monsterData.row + 4 < GameRows && list2.push({ row: monsterData.row + 4, col: monsterData.col - 1 });
          monsterData.row + 5 < GameRows && list2.push({ row: monsterData.row + 5, col: monsterData.col });
          monsterData.row + 5 < GameRows && list2.push({ row: monsterData.row + 5, col: monsterData.col - 1 });
          monsterData.row + 6 < GameRows && list2.push({ row: monsterData.row + 6, col: monsterData.col });
          monsterData.row + 6 < GameRows && list2.push({ row: monsterData.row + 6, col: monsterData.col - 1 });
          monsterData.row + 7 < GameRows && list2.push({ row: monsterData.row + 7, col: monsterData.col });
          monsterData.row + 7 < GameRows && list2.push({ row: monsterData.row + 7, col: monsterData.col - 1 });
          break;
      }
      return list2;
    }
    onEnd() {
      super.onEnd();
      this.skillStatus = 0;
    }
  };

  // src/util/bt/biz/action/ActionSkillBefore.ts
  var ActionSkillBefore = class extends BTAction {
    // 0：未释放，1：释放中，2：释放结束
    constructor(context, frameCount = 50) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
      this.skillBeforeFrameCount = 50;
      this.skillStatus = 0;
      this.skillBeforeFrameCount = frameCount;
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      if (monsterData.nuqi < this.context.skillValue)
        return 3 /* Failure */;
      if (this.skillStatus === 0) {
        this.skillStatus = 1;
        monsterData.state = "skill" /* skill */;
        startTickTask("skillBeforeFrameCount", this, this.skillBeforeFrameCount, () => {
          if (!this)
            return 3 /* Failure */;
          this.skillStatus = 2;
        });
      }
      if (this.skillStatus === 2) {
        return 2 /* Success */;
      }
      return 1 /* Running */;
    }
    onEnd() {
      super.onEnd();
      this.skillStatus = 0;
    }
  };

  // src/util/bt/biz/conditional/ConditionalOffsetRowOrCol.ts
  var ConditionalOffsetRowOrCol = class extends BTConditional {
    constructor(context, offset = 0) {
      super(context);
      this.stateService = StateService.getInstance();
      this.offset = 0;
      this.context = context;
      this.offset = offset;
    }
    onUpdate() {
      let roleDataList = this.stateService.state.players;
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (monsterData.state === "anger" /* anger */ || monsterData.state === "iced" /* iced */ || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      for (let i = 0; i < roleDataList.length; i++) {
        let roleData = roleDataList[i];
        if (roleData.state === "dead" /* dead */ || roleData.state === "linghun" /* linghun */)
          continue;
        if ((roleData.row === monsterData.row || roleData.row === monsterData.row + this.offset) && roleData.col !== monsterData.col) {
          monsterData.direction = roleData.col > monsterData.col ? 2 /* RIGHT */ : 1 /* LEFT */;
          return 2 /* Success */;
        }
        if ((roleData.col === monsterData.col || roleData.col === monsterData.col + this.offset) && roleData.row !== monsterData.row) {
          monsterData.direction = roleData.row > monsterData.row ? 4 /* DOWN */ : 3 /* UP */;
          return 2 /* Success */;
        }
      }
      return 3 /* Failure */;
    }
  };

  // src/util/bt/biz/tree/DenglongmoTree.ts
  var DenglongmoTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ConditionalOffsetRowOrCol(this.context, -1),
            new ActionSkillBefore(this.context, 40),
            new ActionFireBig(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/changancheng/Denglongmo.ts
  var Denglongmo = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.skillValue = 0;
      this.skillObject = new FireBomb();
      this.stateTable = {
        default: 1,
        angerDefault: 0,
        move: 0,
        angerMove: 0,
        anger: 0,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 1,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new DenglongmoTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/conditional/ConditionalSameRowOrCol.ts
  var ConditionalSameRowOrCol = class extends BTConditional {
    constructor(context) {
      super(context);
      this.stateService = StateService.getInstance();
      this.context = context;
    }
    onUpdate() {
      let roleDataList = this.stateService.state.players;
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (monsterData.state === "anger" /* anger */ || monsterData.state === "iced" /* iced */ || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      for (let i = 0; i < roleDataList.length; i++) {
        let roleData = roleDataList[i];
        if (roleData.state === "dead" /* dead */ || roleData.state === "linghun" /* linghun */)
          continue;
        if (roleData.row === monsterData.row && roleData.col !== monsterData.col) {
          monsterData.direction = roleData.col > monsterData.col ? 2 /* RIGHT */ : 1 /* LEFT */;
          return 2 /* Success */;
        }
        if (roleData.col === monsterData.col && roleData.row !== monsterData.row) {
          monsterData.direction = roleData.row > monsterData.row ? 4 /* DOWN */ : 3 /* UP */;
          return 2 /* Success */;
        }
      }
      return 3 /* Failure */;
    }
  };

  // src/util/bt/biz/action/ActionRunEnd.ts
  var ActionRunEnd = class extends BTAction {
    constructor(context) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
      this.skillStatus = 0;
      // 0：未释放，1：前摇，2：释放中，3释放结束
      this.skillFrameCount = 40;
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      let offset = 0, row, col, direction = monsterData.direction;
      if (this.skillStatus === 0) {
        monsterData.state = "skill" /* skill */;
        this.skillStatus = 1;
        startTickTask("skillFrameCount", this, this.skillFrameCount, () => {
          if (!this || !this.context)
            return;
          this.skillStatus = 2;
          let monsterData2 = this.context.getMonsterData();
          if (!monsterData2)
            return 3 /* Failure */;
          monsterData2.state = this.context.bodyS.isAnger ? "angerMove" /* angerMove */ : "move" /* move */;
        });
      }
      if (this.skillStatus === 1) {
        return 1 /* Running */;
      }
      if (this.skillStatus === 2) {
        switch (direction) {
          case 1 /* LEFT */:
            offset = getFixed(Math.max(monsterData.pos.x - this.context.props.speed * 5 * dt, 0));
            if (!this.stateSerice.monsterCanMove(offset, monsterData.pos.y) || !this.stateSerice.monsterCanMove(offset, monsterData.pos.y + this.context.entityS.width) || monsterData.col === 0) {
              monsterData.state = this.context.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
              this.skillStatus = 3;
              return 2 /* Success */;
            }
            if (!monsterData.hurting && !this.context.hurtSourceList.length) {
              this.stateSerice.monsterCrash(this.context, offset, monsterData.pos.y, direction);
            }
            monsterData.pos.x = offset;
            this.context.posX = offset;
            col = getColByX(getFixed(
              offset + this.context.entityS.width
              /* - 5 * PixelRatio*/
            ));
            if (monsterData.col !== col) {
              this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
            }
            break;
          case 2 /* RIGHT */:
            offset = getFixed(Math.min(monsterData.pos.x + this.context.props.speed * 5 * dt, maxRight + 10 * PixelRatio));
            if (!this.stateSerice.monsterCanMove(getFixed(offset + this.context.entityS.width), monsterData.pos.y) || !this.stateSerice.monsterCanMove(offset + this.context.entityS.width, monsterData.pos.y + this.context.entityS.width) || monsterData.col === GameCols - 1) {
              monsterData.state = this.context.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
              this.skillStatus = 3;
              return 2 /* Success */;
            }
            if (!monsterData.hurting && !this.context.hurtSourceList.length) {
              this.stateSerice.monsterCrash(this.context, getFixed(offset + this.context.entityS.width), monsterData.pos.y, direction);
            }
            monsterData.pos.x = offset;
            this.context.posX = offset;
            col = getColByX(offset);
            if (monsterData.col !== col) {
              this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
            }
            break;
          case 3 /* UP */:
            offset = getFixed(Math.max(monsterData.pos.y - this.context.props.speed * 5 * dt, 5 * PixelRatio));
            if (!this.stateSerice.monsterCanMove(monsterData.pos.x, offset) || !this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width, offset) || monsterData.row === 0) {
              monsterData.state = this.context.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
              this.skillStatus = 3;
              return 2 /* Success */;
            }
            if (!monsterData.hurting && !this.context.hurtSourceList.length) {
              this.stateSerice.monsterCrash(this.context, monsterData.pos.x, offset, direction);
            }
            monsterData.pos.y = offset;
            this.context.posY = offset;
            row = getRowByY(getFixed(
              offset + this.context.entityS.width
              /* - 5 * PixelRatio*/
            ));
            if (row === 14) {
              row = 13;
            }
            if (monsterData.row !== row) {
              this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
            }
            break;
          case 4 /* DOWN */:
            offset = getFixed(Math.min(monsterData.pos.y + this.context.props.speed * 5 * dt, maxDown + 10 * PixelRatio));
            if (!this.stateSerice.monsterCanMove(monsterData.pos.x, getFixed(offset + this.context.entityS.width)) || !this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width, getFixed(offset + this.context.entityS.width)) || monsterData.row === GameRows - 1) {
              monsterData.state = this.context.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
              this.skillStatus = 3;
              return 2 /* Success */;
            }
            if (!monsterData.hurting && !this.context.hurtSourceList.length) {
              this.stateSerice.monsterCrash(this.context, monsterData.pos.x, getFixed(offset + this.context.entityS.width), direction);
            }
            monsterData.pos.y = offset;
            this.context.posY = offset;
            row = getRowByY(offset);
            if (monsterData.row !== row) {
              this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
            }
            break;
        }
        return 1 /* Running */;
      }
      if (this.skillStatus === 3) {
        return 2 /* Success */;
      }
    }
    onEnd() {
      super.onEnd();
      this.skillStatus = 0;
    }
  };

  // src/util/bt/biz/tree/GuibingTree.ts
  var GuibingTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ConditionalAnger(this.context),
            new ConditionalSameRowOrCol(this.context),
            // new ActionMoveGrid(this.context),
            new ActionRunEnd(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
            // new ActionMoveGrid(this.context),
            // new ActionMoveGrid(this.context),
            // new ActionMoveGrid(this.context),
            // new ActionMoveGrid(this.context),
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/changancheng/Guibing.ts
  var Guibing = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 1,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new GuibingTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/tree/LinghunTree.ts
  var LinghunTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        // new CompositeSelector(this.context, [
        new ActionFindNextDirection(this.context, 3),
        new ActionMoveGrid(this.context),
        new ActionFindNextDirection(this.context, 10),
        new ActionMoveGrid(this.context)
        // ])
      ]);
    }
  };

  // src/entity/monster/tongyong/Linghun.ts
  var Linghun = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 0,
        move: 1,
        angerMove: 0,
        anger: 0,
        hurt: 0,
        fired: 0,
        iced: 0,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new LinghunTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/tree/CaichongTree.ts
  var CaichongTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ActionFindNextDirection(this.context, 6),
            new ActionMoveGrid(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/xiaoguocun/Caichong.ts
  var Caichong = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new CaichongTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/action/ActionMove.ts
  var ActionMove = class extends BTAction {
    constructor(context) {
      super(context);
      this.monsterService = MonsterService.getInstance();
      this.stateSerice = StateService.getInstance();
    }
    onStart() {
      super.onStart();
    }
    onUpdate(dt) {
      if (!dt) {
        return 3 /* Failure */;
      }
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (!monsterData.direction)
        return 3 /* Failure */;
      if (MoveCondition.indexOf(monsterData.state) === -1)
        return 3 /* Failure */;
      let offset = 0, row, col, direction = monsterData.direction;
      monsterData.state = this.context.bodyS.isAnger ? "angerMove" /* angerMove */ : "move" /* move */;
      switch (direction) {
        case 1 /* LEFT */:
          offset = getFixed(Math.max(monsterData.pos.x - this.context.props.speed * dt, 0));
          if (!this.stateSerice.monsterCanMove(offset, monsterData.pos.y) || !this.stateSerice.monsterCanMove(offset, monsterData.pos.y + this.context.entityS.width) || offset <= 0) {
            return 2 /* Success */;
          }
          if (!monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, offset, monsterData.pos.y, direction);
          }
          monsterData.pos.x = offset;
          this.context.posX = offset;
          col = getColByX(getFixed(
            offset + this.context.entityS.width
            /* - 5 * PixelRatio*/
          ));
          if (monsterData.col !== col) {
            this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
          }
          break;
        case 2 /* RIGHT */:
          offset = getFixed(Math.min(monsterData.pos.x + this.context.props.speed * dt, maxRight + 5 * PixelRatio));
          col = getColByX(offset);
          if (!this.stateSerice.monsterCanMove(getFixed(offset + this.context.entityS.width), monsterData.pos.y) || !this.stateSerice.monsterCanMove(offset + this.context.entityS.width, monsterData.pos.y + this.context.entityS.width) || offset >= maxRight + 5 * PixelRatio) {
            return 2 /* Success */;
          }
          if (!monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, getFixed(offset + this.context.entityS.width), monsterData.pos.y, direction);
          }
          monsterData.pos.x = offset;
          this.context.posX = offset;
          if (monsterData.col !== col) {
            this.stateSerice.moveToGrid(monsterData, this.context, monsterData.row, col);
          }
          break;
        case 3 /* UP */:
          offset = getFixed(Math.max(monsterData.pos.y - this.context.props.speed * dt, 5 * PixelRatio));
          if (!this.stateSerice.monsterCanMove(monsterData.pos.x, offset) || !this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width, offset) || offset <= 5 * PixelRatio) {
            return 2 /* Success */;
          }
          if (!monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, monsterData.pos.x, offset, direction);
          }
          monsterData.pos.y = offset;
          this.context.posY = offset;
          row = getRowByY(getFixed(
            offset + this.context.entityS.width
            /* - 5 * PixelRatio*/
          ));
          if (row === 14) {
            row = 13;
          }
          if (monsterData.row !== row) {
            this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
          }
          break;
        case 4 /* DOWN */:
          offset = getFixed(Math.min(monsterData.pos.y + this.context.props.speed * dt, maxDown + 10 * PixelRatio));
          row = getRowByY(offset);
          if (!this.stateSerice.monsterCanMove(monsterData.pos.x, getFixed(offset + this.context.entityS.width)) || !this.stateSerice.monsterCanMove(monsterData.pos.x + this.context.entityS.width, getFixed(offset + this.context.entityS.width)) || offset >= maxDown + 10 * PixelRatio) {
            return 2 /* Success */;
          }
          if (!monsterData.hurting && !this.context.hurtSourceList.length) {
            this.stateSerice.monsterCrash(this.context, monsterData.pos.x, getFixed(offset + this.context.entityS.width), direction);
          }
          monsterData.pos.y = offset;
          this.context.posY = offset;
          if (monsterData.row !== row) {
            this.stateSerice.moveToGrid(monsterData, this.context, row, monsterData.col);
          }
          break;
      }
      return 1 /* Running */;
    }
    onEnd() {
      super.onEnd();
    }
  };

  // src/util/bt/biz/tree/DaocaorenTree.ts
  var DaocaorenTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        // new CompositeSelector(this.context, [
        // new CompositeSequence(this.context, [
        //     new ConditionalAnger(this.context),
        //     new ActionAnger(this.context),
        // ]),
        // new CompositeSequence(this.context, [
        // new ConditionalMove(this.context),
        // new CompositeSelector(this.context, [
        new ActionRandomDirection(this.context),
        new ActionMove(this.context)
        // ])
        // ])
        // ])
      ]);
    }
  };

  // src/entity/monster/xiaoguocun/Daocaoren.ts
  var Daocaoren = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new DaocaorenTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
    anger() {
      super.anger();
    }
  };

  // src/entity/monster/xiaoguocun/Feichong.ts
  var Feichong = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 0,
        move: 1,
        angerMove: 0,
        anger: 0,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new CaichongTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/conditional/ConditionalSameRowOrColAndStone.ts
  var ConditionalSameRowOrColAndStone = class extends BTConditional {
    constructor(context) {
      super(context);
      this.stateService = StateService.getInstance();
      this.context = context;
    }
    onUpdate() {
      let roleDataList = this.stateService.state.players;
      let monsterData = this.context.getMonsterData();
      if (!monsterData)
        return 3 /* Failure */;
      if (monsterData.state === "anger" /* anger */ || monsterData.state === "iced" /* iced */ || monsterData.state === "dead" /* dead */)
        return 3 /* Failure */;
      for (let i = 0; i < roleDataList.length; i++) {
        let roleData = roleDataList[i];
        if (roleData.state === "dead" /* dead */ || roleData.state === "linghun" /* linghun */)
          continue;
        if (roleData.row === monsterData.row && roleData.col !== monsterData.col) {
          let minCol, maxCol;
          if (roleData.col > monsterData.col) {
            minCol = monsterData.col;
            maxCol = roleData.col;
          } else {
            minCol = roleData.col;
            maxCol = monsterData.col;
          }
          for (let j = minCol + 1; j < maxCol; j++) {
            let grid = GamePanel.instance.grid[monsterData.row][j];
            if (grid && grid instanceof Box) {
              monsterData.direction = roleData.col > monsterData.col ? 2 /* RIGHT */ : 1 /* LEFT */;
              return 2 /* Success */;
            }
            if (grid && !(grid instanceof Box)) {
              return 3 /* Failure */;
            }
          }
        }
        if (roleData.col === monsterData.col && roleData.row !== monsterData.row) {
          let minRow, maxRow;
          if (roleData.row > monsterData.row) {
            minRow = monsterData.row;
            maxRow = roleData.row;
          } else {
            minRow = roleData.row;
            maxRow = monsterData.row;
          }
          for (let j = minRow + 1; j < maxRow; j++) {
            let grid = GamePanel.instance.grid[j][monsterData.col];
            if (grid && grid instanceof Box) {
              monsterData.direction = roleData.row > monsterData.row ? 4 /* DOWN */ : 3 /* UP */;
              return 2 /* Success */;
            }
            if (grid && !(grid instanceof Box)) {
              return 3 /* Failure */;
            }
          }
        }
      }
      return 3 /* Failure */;
    }
  };

  // src/util/bt/biz/action/ActionPush.ts
  var ActionPush = class extends BTAction {
    constructor(context) {
      super(context);
      this.stateService = StateService.getInstance();
      this.monsterPushFrameCount = 10;
    }
    onStart() {
      super.onStart();
    }
    onUpdate() {
      this.context.push();
      return 2 /* Success */;
    }
    onEnd() {
      super.onEnd();
    }
  };

  // src/util/bt/biz/tree/ShuoshuNotMoveTree.ts
  var ShuoshuNotMoveTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ConditionalSameRowOrColAndStone(this.context),
            new ActionPush(this.context)
          ])
        ])
      ]);
    }
  };

  // src/util/bt/biz/tree/ShuoshuTree.ts
  var ShuoshuTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        new CompositeSelector(this.context, [
          new CompositeSequence(this.context, [
            new ConditionalSameRowOrColAndStone(this.context),
            new ActionMoveGrid(this.context),
            new ActionPush(this.context)
          ]),
          new CompositeSequence(this.context, [
            new ActionRandomDirection(this.context),
            new ActionMoveGrid(this.context)
          ])
        ])
      ]);
    }
  };

  // src/entity/monster/xiaoguocun/Shuoshu.ts
  var Shuoshu = class extends Monster {
    constructor(notMoveFlag = 0) {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.notMoveFlag = 0;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 1,
        angerSkill: 1
      };
      this.notMoveFlag = notMoveFlag;
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, this.notMoveFlag ? new ShuoshuNotMoveTree(this) : new ShuoshuTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/util/bt/biz/tree/TianshuTree.ts
  var TianshuTree = class extends BTTree {
    constructor(context) {
      super(context);
      this.initTree();
    }
    initTree() {
      this.root = new CompositeSequence(this.context, [
        // new CompositeSelector(this.context, [
        // new CompositeSequence(this.context, [
        //     new ConditionalAnger(this.context),
        //     new ActionAnger(this.context),
        // ]),
        // new CompositeSequence(this.context, [
        // new ConditionalMove(this.context),
        // new CompositeSelector(this.context, [
        new ActionRandomDirection(this.context),
        new ActionMove(this.context)
        // ])
        // ])
        // ])
      ]);
    }
  };

  // src/entity/monster/xiaoguocun/Tianshu.ts
  var Tianshu = class extends Monster {
    constructor() {
      super();
      this.firedFrameCount = 35;
      this.hurtedFrameCount = 20;
      this.stateTable = {
        default: 1,
        angerDefault: 1,
        move: 1,
        angerMove: 1,
        anger: 1,
        hurt: 1,
        fired: 1,
        iced: 1,
        dead: 1,
        skill: 0,
        angerSkill: 0
      };
    }
    init(info) {
      super.init(info);
    }
    initBody() {
      super.initBody();
      this.bodyS.init(this.id, this.type, new TianshuTree(this), this.stateTable);
      this.addChild(this.bodyS);
    }
  };

  // src/entity/monster/MonsterFactory.ts
  var MonsterFactory = class _MonsterFactory {
    static getInstance() {
      if (!this.instance) {
        this.instance = new _MonsterFactory();
      }
      return this.instance;
    }
    create(type, notMove = 0) {
      switch (type) {
        case 1 /* linghun */:
          return new Linghun();
        case 101 /* tianshu */:
          return new Tianshu();
        case 102 /* caichong */:
          return new Caichong();
        case 103 /* shuoshu */:
          return new Shuoshu(notMove);
        case 104 /* daocaoren */:
          return new Daocaoren();
        case 105 /* feichong */:
          return new Feichong();
        case 201 /* daoyao */:
          return new Daoyao();
        case 202 /* guibing */:
          return new Guibing();
        case 203 /* daozei */:
          return new Daozei();
        case 204 /* denglong */:
          return new Denglong();
        case 205 /* denglongmo */:
          return new Denglongmo();
      }
    }
  };

  // src/service/MonsterService.ts
  var MonsterService = class _MonsterService {
    constructor() {
      this.stateService = StateService.getInstance();
      this.monsterList = [];
    }
    refreshMonster(time) {
      let monsters = this.monsterInfo[time];
      if (monsters) {
        monsters.sort((a, b) => {
          a.id - b.id;
        });
        monsters.forEach((item, i) => {
          let monsterInfo = __spreadValues(__spreadValues({}, item), MonsterDetail[item.type][GameScene.instance.mapInfo.starLevel - 1]);
          if (GameScene.instance.isWujinshilian()) {
            let rate2 = Math.pow(1.05, GameScene.instance.currentGuanqia);
            monsterInfo.hp = monsterInfo.hp * rate2;
            monsterInfo.power = monsterInfo.power * rate2;
          }
          let grid = GamePanel.instance.grid[monsterInfo.row][monsterInfo.col];
          if (grid && grid instanceof Box) {
            let boxData = grid.getBoxData();
            if (grid.isIce() || grid.isFire()) {
              this.stateService.disappear(grid, boxData);
            } else {
              grid.dead(boxData);
              GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
            }
          }
          let monster = this.create(monsterInfo);
          let monsterData = {
            id: monster.id,
            pos: new Laya.Vector2(monster.x, monster.y),
            row: monster.row,
            col: monster.col,
            type: "Monster" /* Monster */,
            zOrder: i,
            hp: monster.props.hp,
            direction: 4 /* DOWN */,
            state: "default" /* default */,
            hurting: false,
            nuqi: 0
          };
          this.stateService.state.monster.push(monsterData);
          this.stateService.lastState = deepClone(this.stateService.state);
          GamePanel.instance.setMoveGrid(monster.row, monster.col, monster);
          GamePanel.instance.addChild(monster);
        });
      }
    }
    monsterAnger() {
      this.monsterList.forEach((monster) => {
        if (monster.stateTable && monster.stateTable.anger) {
          monster.anger();
        }
      });
    }
    destroy() {
      this.monsterList = [];
      this.monsterInfo = null;
    }
    /**
     * 怪物行为树运行，放在网络时间流中，避免因客户端差异而不同步
     * 暂时用不到
     */
    // public monsterRun () {
    //     this.monsterList.forEach((monster: Monster) => {
    //         monster.onUpdate()
    //     })
    // }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _MonsterService();
      }
      return this.instance;
    }
    setMonsterInfo(monsterInfo) {
      this.monsterInfo = monsterInfo;
    }
    createMonsterFunc(info) {
      let monster = MonsterFactory.getInstance().create(info.type, info.notMove);
      monster.pos(getFixed(ColToXMap[info.col] + PixelRatio), getFixed(RowToYMap[info.row] + PixelRatio));
      monster.size(getFixed(GridWidth * 3 / 4), getFixed(GridHeight * 3 / 5));
      monster.initPos(info.row, info.col);
      monster.targetPos = new Laya.Vector2(monster.x, monster.y);
      monster.init(info);
      return monster;
    }
    create(info) {
      let monster = Laya.Pool.getItemByCreateFun("monster", this.createMonsterFunc.bind(null, info));
      this.monsterList.push(monster);
      return monster;
    }
    getMonsterById(id) {
      return this.monsterList.find((item) => item.id === id);
    }
    recover(monster) {
      if (!monster)
        return;
      let index = this.monsterList.findIndex((item) => item.id === monster.id);
      if (index !== -1) {
        this.monsterList.splice(index, 1);
      }
      index = this.stateService.state.monster.findIndex((item) => item.id === monster.id);
      let mosterData = this.stateService.state.monster[index];
      GamePanel.instance.removeFromMoveGrid(mosterData.row, mosterData.col, monster);
      if (index !== -1) {
        this.stateService.state.monster.splice(index, 1);
      }
      monster.onDestroy();
    }
  };

  // src/service/RoomRoleService.ts
  var RoomRoleService = class _RoomRoleService {
    constructor() {
      this.roleList = [];
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _RoomRoleService();
      }
      return this.instance;
    }
    initRoom(room) {
      this.room = room;
    }
    addPlayerToRoom(player, index) {
      let role = RoleService.getInstance().transferRole(player);
      this.room.players[index] = role;
      this.roleList.splice(index - 1, 0, role);
      return role;
    }
    removePlayerFromRoom(playerId, index) {
      if (!playerId || playerId !== this.room.players[index].id)
        return null;
      let role = this.room.players[index];
      this.room.players[index] = null;
      let i = this.roleList.findIndex((item) => item.id === playerId);
      if (i !== -1) {
        this.roleList.splice(i, 1);
      }
      return role;
    }
    getRoomPlayerById(playerId) {
      return this.roleList.find((item) => item.id === playerId);
    }
    getFangdong() {
      return this.getRoomPlayerById(this.room.playerId);
    }
    getPlayerRoomPosition(playerId) {
      for (let position in this.room.players) {
        if (this.room.players[position] && this.room.players[position] !== -1 && this.room.players[position].id === playerId) {
          return position;
        }
      }
    }
    destroy() {
      this.room = null;
      this.roleList = [];
    }
  };

  // src/service/StateService.ts
  var maxDown = getFixed(MapHeight - MapMarginTop - GridHeight);
  var maxRight = getFixed(MapWidth - GridWidth);
  var directionMap = {
    [-2 /* up */]: 3 /* UP */,
    [-3 /* down */]: 4 /* DOWN */,
    [-4 /* left */]: 1 /* LEFT */,
    [-5 /* right */]: 2 /* RIGHT */
  };
  var DirectionReverse = {
    [4 /* DOWN */]: 3 /* UP */,
    [3 /* UP */]: 4 /* DOWN */,
    [1 /* LEFT */]: 2 /* RIGHT */,
    [2 /* RIGHT */]: 1 /* LEFT */
  };
  var StateService = class _StateService {
    constructor() {
      this.playerWidth = 34 * PixelRatio;
      this.playerHeight = 34 * PixelRatio;
      this.boxService = BoxService.getInstance();
      this.real = true;
      // 当前input是否是真实消息，而不是客户端预测
      this.state = {
        players: [],
        monster: [],
        boxes: [],
        huoyan: []
      };
      this.taskList = [];
      this.frameId = 0;
      this.count = 0;
      this.playerRect = {};
    }
    destroy() {
      this.count = 0;
      this.frameId = 0;
      this.lastState = null;
      this.playerRect = {};
      this.taskList = [];
      this.real = true;
      this.state = {
        players: [],
        monster: [],
        boxes: [],
        huoyan: []
      };
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _StateService();
      }
      return this.instance;
    }
    applyInput(input, real) {
      let playerData, player, box, boxData;
      this.real = !!real;
      if (!this.state.players.length)
        return;
      switch (input.type) {
        case 1 /* ActorMove */:
          playerData = this.state.players.find((e) => e.id === input.id);
          player = GamePanel.instance.getRoomPlayerById(playerData.id);
          if (!playerData) {
            return;
          }
          this.handleMoveInput(playerData, player, input);
          if (this.real) {
            player.posX = playerData.pos.x;
            player.posY = playerData.pos.y;
          }
          break;
        case 3 /* ActorPush */:
          player = GamePanel.instance.getRoomPlayerById(input.id);
          playerData = player.getRoleData();
          if (!playerData)
            return;
          player.pushing = true;
          startTickTask("pushFrameCount", player, player.pushFrameCount, () => {
            player.pushing = false;
          });
          box = player.push(playerData, input.direction);
          if (box && box instanceof Box) {
            boxData = box.getBoxData();
            if (boxData.pushing)
              return;
            boxData.pushing = true;
            let playerId = player.id;
            let power = player.props.power;
            startTickTask("pushFrameCount", box, box.pushFrameCount, () => {
              let boxData2 = box.getBoxData();
              if (!boxData2)
                return;
              boxData2.pushing = false;
              this.handleBoxPushed(box, boxData2, playerId, power, input.direction);
            });
          }
          break;
        case 4 /* ActorWeakpush */:
          playerData = this.state.players.find((e) => e.id === input.id);
          player = GamePanel.instance.getRoomPlayerById(input.id);
          box = player.weakpush(playerData, input.direction);
          if (box && box instanceof Box) {
            boxData = this.state.boxes.find((item) => item.id === box.id);
            this.handleBoxWeakpushed(box, boxData, input);
          }
          break;
        case 2 /* TimePast */:
          this.count++;
          tickTask();
          this.state.boxes.forEach((boxData2) => {
            if (boxData2 && boxData2.state === "move" /* move */) {
              let box2 = this.boxService.boxes.find((box3) => box3.id === boxData2.id);
              this.handleBoxMove(box2, boxData2, input);
            }
          });
          this.state.players.forEach((playerData2, i) => {
            player = GamePanel.instance.getRoomPlayerById(playerData2.id);
            if (player && playerData2.hp > 0) {
              this.checkGrid(player, playerData2);
            }
          });
          let monsterService = MonsterService.getInstance();
          this.state.monster.forEach((monsterData) => {
            if (monsterData.state === "dead" /* dead */)
              return;
            let monster = monsterService.monsterList.find((item) => item.id === monsterData.id);
            if (monster && monster.bodyS.id && monsterData.hp > 0) {
              this.checkGrid(monster, monsterData);
              monster.onUpdate(getFixed(input.dt));
            }
          });
          this.state.huoyan.forEach((huoyanData, i) => {
            let huoyan = GamePanel.instance.huoyan;
            if (huoyan) {
              this.handleHuoyanMove(huoyan, huoyanData, input);
            }
          });
          break;
        case 6 /* RefreshBox */:
          if (GamePanel.instance.jiesuan)
            return;
          BoxService.getInstance().refreshBox();
          GameScene.instance.remainTimes = input.times;
          break;
        case 9 /* RefreshMonster */:
          if (GamePanel.instance.jiesuan)
            return;
          MonsterService.getInstance().refreshMonster(input.times);
          break;
        case 13 /* RefreshCollect */:
          if (GamePanel.instance.jiesuan)
            return;
          GoodsService.getInstance().refreshCollect(GamePanel.instance.map.collect[input.times].map((item) => {
            return __spreadProps(__spreadValues({}, item), {
              isCollect: true
            });
          }));
          break;
        case 10 /* MonsterAnger */:
          MonsterService.getInstance().monsterAnger();
          break;
        case 11 /* RoleRebirth */:
          let { id, value } = input;
          playerData = this.state.players.find((e) => e.id === id);
          if (playerData.state !== "linghun" /* linghun */ || playerData.hp > 0)
            return;
          player = GamePanel.instance.getRoomPlayerById(input.id);
          removeTickTask(player, "flyFrameCount");
          playerData.state = "default" /* default */;
          playerData.saving = false;
          playerData.hp = Math.min(value, player.props.hp);
          playerData.hurting = true;
          startTickTask("baohuzhaoFrameCount", player, player.baohuzhaoFrameCount, () => {
            let roleData = player.getRoleData();
            if (!roleData)
              return;
            roleData.hurting = false;
          });
          player.rebirth(playerData);
          break;
        case 12 /* RoleFly */:
          player = GamePanel.instance.getRoomPlayerById(input.id);
          removeTickTask(player, "flyFrameCount");
          player.fly();
          playerData = this.state.players.find((e) => e.id === input.id);
          playerData.saving = false;
          break;
      }
    }
    handleHuoyanMove(huoyan, huoyanData, input) {
      let offset = 0;
      let moveRow = 0;
      let moveCol = 0;
      let dt = getFixed(input.dt);
      switch (huoyanData.direction) {
        case 1 /* LEFT */:
          offset = getFixed(huoyanData.pos.x - dt * BASE_SPEED * 5 * 3);
          if (offset <= 0) {
            huoyanData.pos.x = 0;
            huoyanData.col = 0;
            this.changeHuoyanDirection(huoyan, huoyanData, 3 /* UP */);
            return;
          }
          moveCol = getColByX(huoyanData.pos.x + huoyan.width / 2);
          if (huoyanData.col !== moveCol) {
            GamePanel.instance.removeFromMoveGrid(huoyanData.row, huoyanData.col, huoyan);
            huoyanData.col = moveCol;
            GamePanel.instance.setMoveGrid(huoyanData.row, moveCol, huoyan);
          }
          this.huoyanCrashDetetion(huoyan, huoyanData, huoyanData.row, moveCol, 1 /* LEFT */);
          huoyanData.pos.x = offset;
          break;
        case 2 /* RIGHT */:
          offset = getFixed(huoyanData.pos.x + dt * BASE_SPEED * 5 * 3);
          if (offset >= maxRight) {
            huoyanData.pos.x = maxRight;
            huoyanData.col = GameCols - 1;
            this.changeHuoyanDirection(huoyan, huoyanData, 4 /* DOWN */);
            return;
          }
          moveCol = getColByX(huoyanData.pos.x + huoyan.width / 2);
          if (huoyanData.col !== moveCol) {
            GamePanel.instance.removeFromMoveGrid(huoyanData.row, huoyanData.col, huoyan);
            huoyanData.col = moveCol;
            GamePanel.instance.setMoveGrid(huoyanData.row, moveCol, huoyan);
          }
          this.huoyanCrashDetetion(huoyan, huoyanData, huoyanData.row, moveCol, 2 /* RIGHT */);
          huoyanData.pos.x = offset;
          break;
        case 3 /* UP */:
          offset = getFixed(huoyanData.pos.y - dt * BASE_SPEED * 5 * 3);
          if (offset <= 0) {
            huoyanData.pos.y = 0;
            huoyanData.row = 0;
            huoyanData.zOrder = 0;
            this.changeHuoyanDirection(huoyan, huoyanData, 2 /* RIGHT */);
            return;
          }
          moveRow = getRowByY(huoyanData.pos.y + huoyan.height / 2);
          if (huoyanData.row !== moveRow) {
            GamePanel.instance.removeFromMoveGrid(huoyanData.row, huoyanData.col, huoyan);
            huoyanData.row = moveRow;
            huoyanData.zOrder = huoyanData.row;
            GamePanel.instance.setMoveGrid(moveRow, huoyanData.col, huoyan);
          }
          this.huoyanCrashDetetion(huoyan, huoyanData, moveRow, huoyanData.col, 3 /* UP */);
          huoyanData.pos.y = offset;
          break;
        case 4 /* DOWN */:
          offset = getFixed(huoyanData.pos.y + dt * BASE_SPEED * 5 * 3);
          if (offset >= maxDown - 10 * PixelRatio) {
            huoyanData.pos.y = maxDown - 10 * PixelRatio;
            huoyanData.row = GameRows - 1;
            huoyanData.zOrder = huoyanData.row;
            this.changeHuoyanDirection(huoyan, huoyanData, 1 /* LEFT */);
            return;
          }
          moveRow = getRowByY(huoyanData.pos.y + huoyan.height / 2);
          if (huoyanData.row !== moveRow) {
            GamePanel.instance.removeFromMoveGrid(huoyanData.row, huoyanData.col, huoyan);
            huoyanData.row = moveRow;
            huoyanData.zOrder = huoyanData.row;
            GamePanel.instance.setMoveGrid(moveRow, huoyanData.col, huoyan);
          }
          this.huoyanCrashDetetion(huoyan, huoyanData, moveRow, huoyanData.col, 4 /* DOWN */);
          huoyanData.pos.y = offset;
          break;
      }
    }
    huoyanCrashDetetion(huoyan, huoyanData, row, col, direction) {
      let spriteList = [];
      let grid1, grid2, grid3;
      grid1 = GamePanel.instance.moveGrid[row][col];
      if (grid1) {
        spriteList = spriteList.concat(grid1);
      }
      switch (direction) {
        case 1 /* LEFT */:
        case 2 /* RIGHT */:
          if (row > 0) {
            grid2 = GamePanel.instance.moveGrid[row - 1][col];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (row < GameRows - 1) {
            grid3 = GamePanel.instance.moveGrid[row + 1][col];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
        case 3 /* UP */:
        case 4 /* DOWN */:
          if (col > 0) {
            grid2 = GamePanel.instance.moveGrid[row][col - 1];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (col < GameCols - 1) {
            grid3 = GamePanel.instance.moveGrid[row][col + 1];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
      }
      spriteList.forEach((item) => {
        if (item === huoyan)
          return;
        if (item instanceof Role) {
          let roleData = item.getRoleData();
          if (roleData && !roleData.hurting) {
            let result = isColliding(huoyan.getRect(huoyanData), item.getRect(roleData));
            if (result) {
              this.hited(item, roleData, huoyanData.power, 0, false, true);
            }
          }
        }
      });
    }
    changeHuoyanDirection(huoyan, huoyanData, direction) {
      huoyan.loadImage(`${ServiceIp}images/game/gameAtlas/huoyan-${DirectionMap[direction]}.png`);
      huoyanData.direction = direction;
    }
    handleBoxMove(box, boxData, input) {
      let offset = 0;
      let moveRow = 0;
      let moveCol = 0;
      let dt = getFixed(input.dt);
      switch (boxData.direction) {
        case 1 /* LEFT */:
          offset = getFixed(boxData.pos.x - dt * BASE_SPEED * 5 * 3);
          if (offset <= 0) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.pos.x = 0;
            boxData.col = 0;
            this.boxStop(box, boxData);
            return;
          }
          moveCol = getColByX(box.getEntityXByX(offset) + box.entityS.width / 2);
          if (boxData.col !== moveCol) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.col = moveCol;
            GamePanel.instance.setMoveGrid(boxData.row, moveCol, box);
            if (GamePanel.instance.isChangeDirection(boxData.row, moveCol)) {
              boxData.pos.x = gridToAxis(boxData.row, moveCol).x;
              let d = directionMap[GamePanel.instance.cover[boxData.row][moveCol]];
              boxData.direction = d;
              return;
            }
          }
          if (!this.boxCanMove(box, boxData, box.getEntityXByX(offset), box.getEntityYByY(boxData.pos.y) + box.entityS.width / 2, 1 /* LEFT */)) {
            return;
          }
          if (this.crashDetection(box, boxData, box.getEntityXByX(offset), box.getEntityYByY(boxData.pos.y), 1 /* LEFT */)) {
            return;
          }
          boxData.pos.x = offset;
          break;
        case 2 /* RIGHT */:
          offset = getFixed(boxData.pos.x + dt * BASE_SPEED * 5 * 3);
          if (offset >= maxRight) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.pos.x = maxRight;
            boxData.col = GameCols - 1;
            this.boxStop(box, boxData);
            return;
          }
          moveCol = getColByX(box.getEntityXByX(offset) + box.entityS.width / 2);
          if (boxData.col !== moveCol) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.col = moveCol;
            GamePanel.instance.setMoveGrid(boxData.row, moveCol, box);
            if (GamePanel.instance.isChangeDirection(boxData.row, moveCol)) {
              boxData.pos.x = gridToAxis(boxData.row, moveCol).x;
              let d = directionMap[GamePanel.instance.cover[boxData.row][moveCol]];
              boxData.direction = d;
              return;
            }
          }
          if (!this.boxCanMove(box, boxData, getFixed(box.getEntityXByX(offset) + GridWidth), box.getEntityYByY(boxData.pos.y) + box.entityS.width / 2, 2 /* RIGHT */)) {
            return;
          }
          if (this.crashDetection(box, boxData, getFixed(box.getEntityXByX(offset) + GridWidth), box.getEntityYByY(boxData.pos.y), 2 /* RIGHT */)) {
            return;
          }
          boxData.pos.x = offset;
          break;
        case 3 /* UP */:
          offset = getFixed(boxData.pos.y - dt * BASE_SPEED * 5 * 3);
          if (offset <= 0) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.pos.y = 0 - AllStoneOffsetY;
            boxData.row = 0;
            boxData.zOrder = 0;
            this.boxStop(box, boxData);
            return;
          }
          moveRow = getRowByY(box.getEntityYByY(offset) + box.entityS.width / 2);
          if (boxData.row !== moveRow) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.row = moveRow;
            boxData.zOrder = boxData.row;
            GamePanel.instance.setMoveGrid(moveRow, boxData.col, box);
            if (GamePanel.instance.isChangeDirection(moveRow, boxData.col)) {
              boxData.pos.y = gridToAxis(moveRow, boxData.col).y - AllStoneOffsetY;
              let d = directionMap[GamePanel.instance.cover[moveRow][boxData.col]];
              boxData.direction = d;
              return;
            }
          }
          if (!this.boxCanMove(box, boxData, box.getEntityXByX(boxData.pos.x) + box.entityS.width / 2, box.getEntityYByY(offset), 3 /* UP */)) {
            return;
          }
          if (this.crashDetection(box, boxData, box.getEntityXByX(boxData.pos.x), box.getEntityYByY(offset), 3 /* UP */)) {
            return;
          }
          boxData.pos.y = offset;
          break;
        case 4 /* DOWN */:
          offset = getFixed(boxData.pos.y + dt * BASE_SPEED * 5 * 3);
          if (offset >= maxDown - AllStoneOffsetY) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.pos.y = maxDown - AllStoneOffsetY;
            boxData.row = GameRows - 1;
            boxData.zOrder = boxData.row;
            this.boxStop(box, boxData);
            return;
          }
          moveRow = getRowByY(box.getEntityYByY(offset) + box.entityS.width / 2);
          if (boxData.row !== moveRow) {
            GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
            boxData.row = moveRow;
            boxData.zOrder = boxData.row;
            GamePanel.instance.setMoveGrid(moveRow, boxData.col, box);
            if (GamePanel.instance.isChangeDirection(moveRow, boxData.col)) {
              boxData.pos.y = gridToAxis(moveRow, boxData.col).y - AllStoneOffsetY;
              let d = directionMap[GamePanel.instance.cover[moveRow][boxData.col]];
              boxData.direction = d;
              return;
            }
          }
          if (!this.boxCanMove(box, boxData, box.getEntityXByX(boxData.pos.x) + box.entityS.width / 2, getFixed(box.getEntityYByY(offset) + GridHeight), 4 /* DOWN */)) {
            return;
          }
          if (this.crashDetection(box, boxData, box.getEntityXByX(boxData.pos.x), getFixed(box.getEntityYByY(offset) + GridHeight), 4 /* DOWN */)) {
            return;
          }
          boxData.pos.y = offset;
          break;
      }
    }
    monsterCrash(animal, x, y, direction) {
      let { row, col } = axisToGrid(x, y);
      let spriteList = [];
      let grid1, grid2, grid3;
      grid1 = GamePanel.instance.moveGrid[row][col];
      if (grid1) {
        spriteList = spriteList.concat(grid1);
      }
      switch (direction) {
        case 1 /* LEFT */:
        case 2 /* RIGHT */:
          if (row > 0) {
            grid2 = GamePanel.instance.moveGrid[row - 1][col];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (row < GameRows - 1) {
            grid3 = GamePanel.instance.moveGrid[row + 1][col];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
        case 3 /* UP */:
        case 4 /* DOWN */:
          if (col > 0) {
            grid2 = GamePanel.instance.moveGrid[row][col - 1];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (col < GameCols - 1) {
            grid3 = GamePanel.instance.moveGrid[row][col + 1];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
      }
      spriteList.forEach((item) => {
        if (item === animal)
          return;
        if (item instanceof Role) {
          let roleData = item.getRoleData();
          if (roleData && !roleData.hurting) {
            let result = isColliding(animal.getRect(), item.getRect(roleData));
            if (result) {
              this.hited(item, roleData, animal.props.power, 0, false, false);
            }
          }
        }
      });
      return false;
    }
    roleCrash(role, x, y, direction) {
      let { row, col } = axisToGrid(x, y);
      let spriteList = [];
      let grid1, grid2, grid3;
      grid1 = GamePanel.instance.moveGrid[row][col];
      if (grid1) {
        spriteList = spriteList.concat(grid1);
      }
      switch (direction) {
        case 1 /* LEFT */:
        case 2 /* RIGHT */:
          if (row > 0) {
            grid2 = GamePanel.instance.moveGrid[row - 1][col];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (row < GameRows - 1) {
            grid3 = GamePanel.instance.moveGrid[row + 1][col];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
        case 3 /* UP */:
        case 4 /* DOWN */:
          if (col > 0) {
            grid2 = GamePanel.instance.moveGrid[row][col - 1];
            if (grid2) {
              spriteList = spriteList.concat(grid2);
            }
          }
          if (col < GameCols - 1) {
            grid3 = GamePanel.instance.moveGrid[row][col + 1];
            if (grid3) {
              spriteList = spriteList.concat(grid3);
            }
          }
          break;
      }
      spriteList.forEach((item) => {
        if (item === role)
          return;
        if (item instanceof Monster && item.bodyS && item.bodyS.id && !item.isDead() && !UnHurtMonster[item.type]) {
          let monsterData = this.state.monster.find((m) => m.id === item.id);
          if (monsterData.state === "iced" /* iced */)
            return;
          if (!monsterData.hurting && !item.hurtSourceList.length) {
            let result = isColliding(role.getRect(), item.getRect(monsterData));
            if (result) {
              let roleData = this.state.players.find((p) => p.id === role.id);
              this.hited(role, roleData, item.props.power);
            }
          }
        }
      });
      return false;
    }
    hited(animal, animalData, value, playerId = 0, canStrike = false, canAvoid = false) {
      if (animalData.hurting || animalData.hp <= 0 || GamePanel.instance.jiesuan)
        return;
      if (animal instanceof Role) {
        animalData.hurting = true;
        let missRandom = canAvoid ? MyRandom() : 1;
        if (missRandom <= getFixed(animal.props.luckyValue / 100)) {
          animalData.missing = true;
        } else {
          if (canStrike) {
            let random = MyRandom();
            let player = RoomRoleService.getInstance().getRoomPlayerById(playerId);
            if (playerId && random <= getFixed(player.props.killValue / 100)) {
              value = value * 2;
              animalData.isStriked = true;
            } else {
              animalData.isStriked = false;
            }
          }
          animalData.hp -= value;
          animal.killId = playerId;
          animal.killValue = value;
          if (animalData.state === "iced" /* iced */) {
            animal.removeIced();
          }
          if (animalData.hp <= 0) {
            animalData.equipState = "dead" /* dead */;
            animalData.state = "dead" /* dead */;
            animal.dead();
            return;
          } else {
            animalData.equipState = "hurt" /* hurt */;
            startTickTask("hurtFrameCount", animal, animal.hurtFrameCount, () => {
              let data = animal.getRoleData();
              if (!data)
                return;
              data.equipState = "default" /* default */;
            });
            animal.playHurt(animalData);
            animalData.state = "default" /* default */;
          }
          startTickTask("baohuzhaoFrameCount", animal, animal.baohuzhaoFrameCount, () => {
            let roleData = animal.getRoleData();
            if (!roleData)
              return;
            roleData.hurting = false;
          });
        }
      } else if (animal instanceof Monster && animal.bodyS.id) {
        animal.hurtSourceList.push(playerId);
        startTickTask("hurtProtectFrameCount", animal, animal.hurtProtectFrameCount, () => {
          let data = animal.getMonsterData();
          if (!data)
            return;
          if (animal.hurtSourceList.length) {
            data.hurting = true;
          }
        });
        if (canStrike) {
          let random = MyRandom();
          let player = RoomRoleService.getInstance().getRoomPlayerById(playerId);
          if (playerId && random <= getFixed(player.props.killValue / 100)) {
            value = value * 2;
            animalData.isStriked = true;
          } else {
            animalData.isStriked = false;
          }
        }
        animalData.hp -= value;
        animal.killId = playerId;
        animal.killValue = value;
        if (animalData.hp <= 0) {
          if (!GameScene.instance.guanqiaType || GameScene.instance.guanqiaType === guanqiaType.monster) {
            GameScene.instance.monsterCount--;
          }
          animalData.state = "dead" /* dead */;
          animal.dead(animalData);
          return;
        } else {
          if (animalData.state !== "fired" /* fired */) {
            animalData.state = "hurt" /* hurt */;
          }
          startTickTask("hurtedFrameCount", animal, animal.hurtedFrameCount, () => {
            let monsterData = animal.getMonsterData();
            if (!monsterData || monsterData.state === "dead" /* dead */)
              return;
            monsterData.state = animal.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
          });
        }
        startTickTask("baohuzhaoFrameCount", animal, animal.baohuzhaoFrameCount, () => {
          animal.hurtSourceList = [];
          let monsterData = animal.getMonsterData();
          if (!monsterData)
            return;
          monsterData.hurting = false;
        });
      }
    }
    boxCanMove(box, boxData, x, y, direction) {
      let { row, col } = axisToGrid(x, y);
      let moveGrid = GamePanel.instance.moveGrid[row][col];
      if (GamePanel.instance.grid[row][col] instanceof Box || GamePanel.instance.grid[row][col] === -1 /* obstacle */ || GamePanel.instance.moveGrid[row][col] instanceof Box || GamePanel.instance.grid[row][col] === -99 /* huoyanArea */ || moveGrid && moveGrid.length && moveGrid.find((item) => item !== box && item instanceof Box)) {
        GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
        switch (direction) {
          case 1 /* LEFT */:
            boxData.col = col + 1;
            boxData.pos.x = ColToXMap[boxData.col];
            break;
          case 2 /* RIGHT */:
            boxData.col = col - 1;
            boxData.pos.x = ColToXMap[boxData.col];
            break;
          case 3 /* UP */:
            boxData.row = row + 1;
            boxData.pos.y = RowToYMap[boxData.row] - AllStoneOffsetY;
            boxData.zOrder = boxData.row;
            break;
          case 4 /* DOWN */:
            boxData.row = row - 1;
            boxData.pos.y = RowToYMap[boxData.row] - AllStoneOffsetY;
            boxData.zOrder = boxData.row;
            break;
        }
        this.boxStop(box, boxData);
        return false;
      }
      return true;
    }
    isCrash(source, target, sourceData, targetData) {
      if (source === target)
        return false;
      if (!sourceData || !targetData)
        return false;
      let sourceRect = {
        x: sourceData.pos.x,
        // @ts-ignore
        y: (
          /*source instanceof Box ? RowToYMap[sourceData.row] :*/
          sourceData.pos.y
        ),
        width: source instanceof Box ? GridWidth : source.entityS.width,
        height: source instanceof Box ? GridWidth : source.entityS.height
      };
      let targetRect = {
        x: targetData.pos.x,
        // @ts-ignore
        y: (
          /*target instanceof Box ? RowToYMap[targetData.row] :*/
          targetData.pos.y
        ),
        width: target instanceof Box ? GridHeight : target.entityS.width,
        height: target instanceof Box ? GridHeight : target.entityS.height
      };
      return isColliding(sourceRect, targetRect);
    }
    /**
    * 碰撞检测，是否碰到怪物或者玩家或者其他石头
    * 这里进行了优化，只需要检测当前石头x,y所属格子及其左右或者上下的三个格子里面的怪物即可
    * 可有碰到移动的箱子才返回ture，此时需要停下
    */
    crashDetection(box, boxData, x, y, direction) {
      let spriteList = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
      spriteList.forEach((item) => {
        if (item === box)
          return;
        if (item instanceof Role) {
          let roleData = item.getRoleData();
          if (roleData && !roleData.hurting) {
            let result = isColliding({ width: box.entityS.width, height: box.entityS.height, x, y }, item.getRect(roleData));
            if (result) {
              this.hited(item, roleData, boxData.power, boxData.playerId, true, true);
            }
          }
        }
        if (item instanceof Monster && !UnHurtMonster[item.type]) {
          let monsterData = item.getMonsterData();
          if (!monsterData.hurting && monsterData.state !== "dead" /* dead */ && item.hurtSourceList.indexOf(boxData.playerId) === -1) {
            this.playerRect.x = monsterData.pos.x;
            this.playerRect.y = monsterData.pos.y;
            this.playerRect.width = item.entityS.width;
            this.playerRect.height = item.entityS.width;
            let result = isColliding({ width: box.entityS.width, height: box.entityS.height, x, y }, this.playerRect);
            if (result) {
              this.hited(item, monsterData, boxData.power, boxData.playerId, true, true);
            }
          }
        }
      });
      return false;
    }
    boxStop(box, boxData) {
      let { row, col } = boxData;
      GamePanel.instance.removeFromMoveGrid(row, col, box);
      if (box.isIce() || box.isFire()) {
        box.dead(boxData);
        GamePanel.instance.setGrid(row, col, 0);
      } else {
        let goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
        if (this.hasCrashGoods(box, boxData, goods)) {
          box.dead(boxData);
          GamePanel.instance.setGrid(row, col, 0);
        } else {
          GamePanel.instance.setGrid(row, col, box);
          boxData.state = "default" /* default */;
        }
      }
    }
    handleBoxPushed(box, boxData, playerId, power, direction) {
      if (boxData.state !== "default" /* default */)
        return;
      if (playerId || playerId === 0)
        boxData.playerId = playerId;
      boxData.direction = direction;
      boxData.power = power;
      switch (boxData.direction) {
        case 1 /* LEFT */:
          if (boxData.col === 0 || GamePanel.instance.grid[boxData.row][boxData.col - 1] instanceof Box || GamePanel.instance.grid[boxData.row][boxData.col - 1] === -1 /* obstacle */ || GamePanel.instance.grid[boxData.row][boxData.col - 1] === -99 /* huoyanArea */) {
            if (!box.canBreak)
              return;
            box.dead(boxData);
            GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
            return;
          }
          break;
        case 2 /* RIGHT */:
          if (boxData.col === GameCols - 1 || GamePanel.instance.grid[boxData.row][boxData.col + 1] instanceof Box || GamePanel.instance.grid[boxData.row][boxData.col + 1] === -1 /* obstacle */ || GamePanel.instance.grid[boxData.row][boxData.col + 1] === -99 /* huoyanArea */) {
            if (!box.canBreak)
              return;
            box.dead(boxData);
            GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
            return;
          }
          break;
        case 3 /* UP */:
          if (boxData.row === 0 || GamePanel.instance.grid[boxData.row - 1][boxData.col] instanceof Box || GamePanel.instance.grid[boxData.row - 1][boxData.col] === -1 /* obstacle */ || GamePanel.instance.grid[boxData.row - 1][boxData.col] === -99 /* huoyanArea */) {
            if (!box.canBreak)
              return;
            box.dead(boxData);
            GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
            return;
          }
          break;
        case 4 /* DOWN */:
          if (boxData.row === GameRows - 1 || GamePanel.instance.grid[boxData.row + 1][boxData.col] instanceof Box || GamePanel.instance.grid[boxData.row + 1][boxData.col] === -1 /* obstacle */ || GamePanel.instance.grid[boxData.row + 1][boxData.col] === -99 /* huoyanArea */) {
            if (!box.canBreak)
              return;
            box.dead(boxData);
            GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
            return;
          }
          break;
      }
      boxData.state = "move" /* move */;
      GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
      GamePanel.instance.setMoveGrid(boxData.row, boxData.col, box);
      playSound(`${ServiceIp}sound/push-box.wav`);
    }
    boxNotWeakPushed(row, col) {
      return GamePanel.instance.grid[row][col] instanceof Box || GamePanel.instance.grid[row][col] === -1 /* obstacle */ || GamePanel.instance.grid[row][col] === -99 /* huoyanArea */ || GamePanel.instance.moveGrid[row][col] instanceof Array && GamePanel.instance.moveGrid[row][col].find((item) => item instanceof Animal || item instanceof Box);
    }
    handleBoxWeakpushed(box, boxData, input) {
      if (boxData.state !== "default" /* default */)
        return;
      boxData.playerId = boxData.playerId;
      boxData.direction = input.direction;
      boxData.state = "weakpushing" /* weakpushing */;
      let goods = [];
      switch (boxData.direction) {
        case 1 /* LEFT */:
          if (boxData.col === 0 || this.boxNotWeakPushed(boxData.row, boxData.col - 1)) {
            boxData.state = "default" /* default */;
            return;
          }
          boxData.col--;
          boxData.pos.x = ColToXMap[boxData.col];
          goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
          if (this.hasCrashGoods(box, boxData, goods)) {
            boxData.col++;
            this.disappear(box, boxData);
            return;
          }
          GamePanel.instance.setGrid(boxData.row, boxData.col + 1, 0);
          GamePanel.instance.setGrid(boxData.row, boxData.col, box);
          break;
        case 2 /* RIGHT */:
          if (boxData.col === GameCols - 1 || this.boxNotWeakPushed(boxData.row, boxData.col + 1)) {
            boxData.state = "default" /* default */;
            return;
          }
          boxData.col++;
          boxData.pos.x = ColToXMap[boxData.col];
          goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
          if (this.hasCrashGoods(box, boxData, goods)) {
            boxData.col--;
            this.disappear(box, boxData);
            return;
          }
          GamePanel.instance.setGrid(boxData.row, boxData.col - 1, 0);
          GamePanel.instance.setGrid(boxData.row, boxData.col, box);
          break;
        case 3 /* UP */:
          if (boxData.row === 0 || this.boxNotWeakPushed(boxData.row - 1, boxData.col)) {
            boxData.state = "default" /* default */;
            return;
          }
          boxData.row--;
          boxData.pos.y = RowToYMap[boxData.row] - AllStoneOffsetY;
          goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
          if (this.hasCrashGoods(box, boxData, goods)) {
            boxData.row++;
            this.disappear(box, boxData);
            return;
          }
          boxData.zOrder = boxData.row;
          GamePanel.instance.setGrid(boxData.row + 1, boxData.col, 0);
          GamePanel.instance.setGrid(boxData.row, boxData.col, box);
          break;
        case 4 /* DOWN */:
          if (boxData.row === GameRows - 1 || this.boxNotWeakPushed(boxData.row + 1, boxData.col)) {
            boxData.state = "default" /* default */;
            return;
          }
          boxData.row++;
          boxData.pos.y = RowToYMap[boxData.row] - AllStoneOffsetY;
          goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(boxData.row, boxData.col, 1);
          if (this.hasCrashGoods(box, boxData, goods)) {
            boxData.row--;
            this.disappear(box, boxData);
            return;
          }
          boxData.zOrder = boxData.row;
          GamePanel.instance.setGrid(boxData.row - 1, boxData.col, 0);
          GamePanel.instance.setGrid(boxData.row, boxData.col, box);
          break;
      }
    }
    hasCrashGoods(box, boxData, animals) {
      for (let i = 0; i < animals.length; i++) {
        let targetData = null;
        if (animals[i] instanceof Role) {
          targetData = animals[i].getRoleData();
        } else if (animals[i] instanceof Monster) {
          targetData = animals[i].getMonsterData();
        } else if (animals[i] instanceof Box) {
          targetData = animals[i].getBoxData();
        }
        if (!targetData)
          return false;
        let result = this.isCrash(box, animals[i], boxData, targetData);
        if (result) {
          return true;
        }
      }
      return false;
    }
    hasCrashGoodsByRect(box, boxData, animals) {
      for (let i = 0; i < animals.length; i++) {
        let targetData = null;
        if (animals[i] instanceof Role) {
          targetData = animals[i].getRoleData();
        } else if (animals[i] instanceof Monster) {
          targetData = animals[i].getMonsterData();
        } else if (animals[i] instanceof Box) {
          targetData = animals[i].getBoxData();
        }
        if (!targetData)
          return false;
        let result = isColliding(box.getRect(boxData), animals[i].getRect(targetData));
        if (result) {
          return true;
        }
      }
      return false;
    }
    /**
     * 消失，轻推时遇到玩家或者怪物，石头会消失
     */
    disappear(box, boxData) {
      boxData.state = "dead" /* dead */;
      box.isBreak = true;
      GamePanel.instance.setGrid(boxData.row, boxData.col, 0);
      GamePanel.instance.removeFromMoveGrid(boxData.row, boxData.col, box);
    }
    handleMoveInput(playerData, player, input) {
      const { direction, dt } = input;
      playerData.direction = direction;
      this.handlePlayerMove(playerData, player, dt);
    }
    // TODO !!! 这里是否需要替换为真实坐标，有待考虑
    handlePlayerMove(roleData, player, dt) {
      let offset = 0;
      let row, col;
      let posX = roleData.pos.x;
      let posY = roleData.pos.y;
      let s = player.speed;
      if (player.speed / BASE_SPEED > 7.1) {
        s = Math.random() * 3;
      }
      switch (roleData.direction) {
        case 1 /* LEFT */:
          offset = getFixed(Math.max(posX - s * dt, 0));
          if (!this.playerCanMove(roleData, getFixed(offset + AllowOffset), roleData.pos.y, 1 /* LEFT */) || !this.playerCanMove(roleData, getFixed(offset + AllowOffset), getFixed(roleData.pos.y + this.playerHeight), 1 /* LEFT */))
            return;
          col = getColByX(getFixed(offset + this.playerWidth / 2));
          if (roleData.col !== col && this.real) {
            this.moveToGrid(roleData, player, roleData.row, col);
          }
          if (this.real && !roleData.hurting) {
            this.roleCrash(player, offset, roleData.pos.y, roleData.direction);
          }
          roleData.pos.x = offset;
          break;
        case 2 /* RIGHT */:
          offset = getFixed(Math.min(posX + s * dt, maxRight));
          if (!this.playerCanMove(roleData, getFixed(offset + this.playerWidth - AllowOffset), roleData.pos.y, 2 /* RIGHT */) || !this.playerCanMove(roleData, getFixed(offset + this.playerWidth - AllowOffset), getFixed(roleData.pos.y + this.playerHeight), 2 /* RIGHT */))
            return;
          col = getColByX(offset + this.playerWidth / 2);
          if (roleData.col !== col && this.real) {
            this.moveToGrid(roleData, player, roleData.row, col);
          }
          if (this.real && !roleData.hurting) {
            this.roleCrash(player, getFixed(offset + player.entityS.width), roleData.pos.y, roleData.direction);
          }
          roleData.pos.x = offset;
          break;
        case 3 /* UP */:
          offset = getFixed(Math.max(posY - s * dt, 5 * PixelRatio));
          if (!this.playerCanMove(roleData, roleData.pos.x, getFixed(offset + AllowOffset), 3 /* UP */) || !this.playerCanMove(roleData, getFixed(roleData.pos.x + this.playerWidth), getFixed(offset + AllowOffset), 3 /* UP */))
            return;
          row = getRowByY(offset + this.playerHeight / 2);
          if (roleData.row !== row && this.real) {
            this.moveToGrid(roleData, player, row, roleData.col);
          }
          if (this.real && !roleData.hurting) {
            this.roleCrash(player, roleData.pos.x, offset, roleData.direction);
          }
          roleData.zOrder = row;
          roleData.pos.y = offset;
          break;
        case 4 /* DOWN */:
          offset = getFixed(Math.min(posY + s * dt, maxDown + 10 * PixelRatio));
          if (!this.playerCanMove(roleData, roleData.pos.x, getFixed(offset + this.playerHeight - AllowOffset), 4 /* DOWN */) || !this.playerCanMove(roleData, getFixed(roleData.pos.x + this.playerWidth), getFixed(offset + this.playerHeight - AllowOffset), 4 /* DOWN */))
            return;
          row = getRowByY(offset + this.playerHeight / 2);
          if (roleData.row !== row && this.real) {
            this.moveToGrid(roleData, player, row, roleData.col);
          }
          if (this.real && !roleData.hurting) {
            this.roleCrash(player, roleData.pos.x, getFixed(offset + player.entityS.width), roleData.direction);
          }
          roleData.zOrder = row;
          roleData.pos.y = offset;
          break;
      }
      return true;
    }
    monsterCanMove(x, y) {
      let { row, col } = axisToGrid(x, y);
      let gridType = GamePanel.instance.grid[row][col];
      if (gridType === void 0 || gridType instanceof Box || gridType === -1 /* obstacle */ || gridType === -99 /* huoyanArea */) {
        return false;
      }
      return true;
    }
    monsterCanMoveByRowCol(row, col) {
      if (!GamePanel.instance.grid[row])
        return false;
      let gridType = GamePanel.instance.grid[row][col];
      if (gridType === void 0 || gridType instanceof Box || gridType === -1 /* obstacle */ || gridType === -99 /* huoyanArea */) {
        return false;
      }
      return true;
    }
    /**
     * 目标位置是否能够移动
     * @param x 
     * @param y 
     */
    playerCanMove(roleData, x, y, direction) {
      let { row, col } = axisToGrid(x, y);
      let gridType = GamePanel.instance.grid[row][col];
      if (gridType instanceof Box || gridType === -1 /* obstacle */) {
        let grid = { x: ColToXMap[col], y: RowToYMap[row] };
        if (direction === 3 /* UP */ || direction === 4 /* DOWN */) {
          let width = getFixed(Math.min(roleData.pos.x + this.playerWidth, grid.x + GridWidth) - Math.max(roleData.pos.x, grid.x));
          if (width <= THRESHOLD) {
            if (roleData.pos.x < grid.x && !(GamePanel.instance.grid[row][col - 1] instanceof Box) && GamePanel.instance.grid[row][col - 1] !== -1 /* obstacle */) {
              roleData.pos.x = Math.max(0, getFixed(grid.x - this.playerWidth - 1 * PixelRatio));
              return false;
            }
            if (roleData.pos.x > grid.x && !(GamePanel.instance.grid[row][col + 1] instanceof Box) && GamePanel.instance.grid[row][col + 1] !== -1 /* obstacle */) {
              roleData.pos.x = getFixed(grid.x + GridWidth + 1 * PixelRatio);
              return false;
            }
          }
        }
        if (direction === 1 /* LEFT */ || direction === 2 /* RIGHT */) {
          let height = getFixed(Math.min(roleData.pos.y + this.playerHeight, grid.y + GridHeight) - Math.max(roleData.pos.y, grid.y));
          if (height <= THRESHOLD) {
            if (roleData.pos.y < grid.y && !(GamePanel.instance.grid[row - 1][col] instanceof Box) && GamePanel.instance.grid[row - 1][col] !== -1 /* obstacle */) {
              roleData.pos.y = Math.max(getFixed(grid.y - this.playerHeight - 1 * PixelRatio), 0);
              return false;
            }
            if (roleData.pos.y > grid.y && !(GamePanel.instance.grid[row + 1][col] instanceof Box) && GamePanel.instance.grid[row + 1][col] !== -1 /* obstacle */) {
              roleData.pos.y = getFixed(grid.y + GridHeight + 1 * PixelRatio);
              return false;
            }
          }
        }
        switch (direction) {
          case 1 /* LEFT */:
            roleData.pos.x = getFixed(grid.x + GridWidth + 1 * PixelRatio);
            break;
          case 2 /* RIGHT */:
            roleData.pos.x = Math.max(0, getFixed(grid.x - this.playerWidth - 1 * PixelRatio));
            break;
          case 3 /* UP */:
            roleData.pos.y = getFixed(grid.y + GridHeight + 1 * PixelRatio);
            break;
          case 4 /* DOWN */:
            roleData.pos.y = Math.max(0, getFixed(grid.y - this.playerHeight - 1 * PixelRatio));
            break;
        }
        return false;
      }
      return true;
    }
    moveToGrid(roleData, animal, row, col) {
      if (!roleData)
        return;
      GamePanel.instance.removeFromMoveGrid(roleData.row, roleData.col, animal);
      GamePanel.instance.setMoveGrid(row, col, animal);
      roleData.row = row;
      roleData.col = col;
    }
    checkGrid(player, roleData) {
      if (!roleData)
        return;
      let spriteList = GamePanel.instance.moveGrid[roleData.row][roleData.col];
      if (!spriteList || !spriteList.length)
        return;
      spriteList.forEach((moveGridItem) => {
        if (moveGridItem instanceof FireBomb) {
          if (player instanceof Monster && !UnHurtMonster[player.type] && (!roleData.hurting && player.hurtSourceList.indexOf(moveGridItem.playerId) === -1) && roleData.state !== "hurt" /* hurt */ && roleData.state !== "dead" /* dead */ && roleData.state !== "fired" /* fired */) {
            this.hited(player, roleData, moveGridItem.power, moveGridItem.playerId);
            if (roleData.state !== "dead" /* dead */) {
              roleData.state = "fired" /* fired */;
              startTickTask("firedFrameCount", player, player.firedFrameCount, () => {
                let data = player.getMonsterData();
                if (!data)
                  return;
                data.state = player.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
              });
            }
          } else if (player instanceof Role && !roleData.hurting && roleData.state !== "dead" /* dead */ && roleData.state !== "fired" /* fired */) {
            this.hited(player, roleData, moveGridItem.power, moveGridItem.playerId);
            startTickTask("firedFrameCount", player, player.firedFrameCount, () => {
              let data = player.getRoleData();
              if (!data)
                return;
              data.state = "default" /* default */;
            });
          }
        } else if (moveGridItem instanceof IceBomb) {
          if (player instanceof Monster && !UnHurtMonster[player.type] && !roleData.hurting && roleData.state !== "iced" /* iced */ && roleData.state !== "dead" /* dead */ && roleData.state !== "hurt" /* hurt */ && roleData.state !== "fired" /* fired */) {
            roleData.state = "iced" /* iced */;
            startTickTask("icedFrameCount", player, player.icedFrameCount, () => {
              let data = player.getMonsterData();
              if (!data)
                return;
              player.removeIced(data);
              data.state = player.bodyS.isAnger ? "angerDefault" /* angerDefault */ : "default" /* default */;
            });
          }
          if (player instanceof Role && !roleData.hurting && roleData.state !== "iced" /* iced */ && roleData.state !== "dead" /* dead */ && roleData.state !== "fired" /* fired */ && roleData.state !== "linghun" /* linghun */) {
            roleData.state = "iced" /* iced */;
            player.playIced();
            startTickTask("icedFrameCount", player, player.icedFrameCount, () => {
              let data = player.getRoleData();
              if (!data || data.state === "dead" /* dead */ || data.state === "linghun" /* linghun */)
                return;
              data.state = "default" /* default */;
              player.removeIced(data);
            });
          }
        } else if (player instanceof Role && moveGridItem instanceof Role) {
          let moveGridData = moveGridItem.getRoleData();
          if (!moveGridData || moveGridData.state !== "linghun" /* linghun */ || moveGridData.saving)
            return;
          moveGridData.saving = true;
          if (player.isSelf()) {
            request("area.playerHandler.moveToDeadPlayer", { playerId: moveGridItem.id });
          }
        }
      });
      spriteList = GamePanel.instance.getMoveGridRangeCollect(roleData.row, roleData.col, 1);
      spriteList.forEach((moveGridItem) => {
        if (player instanceof Role && moveGridItem instanceof Goods && isColliding(player.getRect(roleData), moveGridItem.getRect())) {
          let param = { id: moveGridItem.id, type: moveGridItem.type, row: moveGridItem.row, col: moveGridItem.col };
          if (moveGridItem instanceof Collect) {
            GameScene.instance.monsterCount--;
            renderMonsterCount();
            moveGridItem.onRemove();
            param.isCollect = 1;
            playSound(`${ServiceIp}sound/pickup.wav`);
            request("area.roomHandler.collectDead", param);
          } else {
            if (moveGridItem.playerId && moveGridItem.playerId !== player.id)
              return;
            moveGridItem.onRemove();
            if (moveGridItem.type === 1) {
              playSound(`${ServiceIp}sound/pickup-exp.wav`);
            } else if (moveGridItem.type === 2 || moveGridItem.type === 3) {
              playSound(`${ServiceIp}sound/pickup-gold.wav`);
            } else {
              playSound(`${ServiceIp}sound/pickup.wav`);
            }
            let role = RoomRoleService.getInstance().getRoomPlayerById(player.id);
            if (role) {
              role.addGoods(0, moveGridItem.type);
            }
            if (player.isSelf()) {
              request("area.roomHandler.collectDead", param);
            }
          }
        }
      });
      if (player instanceof Monster && UnHurtMonster[player.type]) {
        let cover = GamePanel.instance.cover[roleData.row][roleData.col];
        if (cover >= -19 /* dest9 */ && cover <= -11 /* dest1 */) {
          GameScene.instance.monsterCount--;
          roleData.hp = 0;
          roleData.state = "dead" /* dead */;
          player.dead(roleData);
        }
      }
    }
    removeAnimalById(animalId) {
      let index = this.state.monster.findIndex((item) => item.id === animalId);
      this.state.monster.splice(index, 1);
      this.lastState.monster.splice(index, 1);
    }
  };

  // src/entity/box/Box.ts
  var PLAYER_SPEED = GridWidth * 3 * 1.2;
  var { regClass: regClass8 } = Laya;
  var Box = class extends Laya.Sprite {
    constructor(boxInfo) {
      super();
      // 破裂后是否能够刷新，由关卡决定
      this.mapData = getMapData();
      this.speed = GridWidth * 2;
      // 石头速度, 先定义为玩家速度的两倍吧
      // public power = 0            // 力量，等于推箱子的角色或者怪物的力量
      this.playerId = 0;
      this.breakAni = new Laya.Animation();
      this.entityS = { width: GridWidth - 16 * PixelRatio, height: GridHeight - 16 * PixelRatio, x: 8 * PixelRatio, y: 8 * PixelRatio };
      this.actionRoute = "area.playerHandler.sendAction";
      this.tw = new Laya.Tween();
      this.boxBreakFrameCount = 10;
      // Max:20
      this.playBreakFrameCount = 25;
      this.weakpushFrameCount = 3;
      this.pushFrameCount = 10;
      this.breakSound = `${ServiceIp}sound/box-break.wav`;
      this.isBreak = false;
      this.isWeakpush = false;
      this.boxInfo = boxInfo;
      this.id = boxInfo.id;
      this.type = boxInfo.type;
      this.row = boxInfo.row;
      this.zOrder = this.row;
      this.col = boxInfo.col;
      this.initRow = boxInfo.row;
      this.initCol = boxInfo.col;
      this.canBreak = !boxInfo.notBreak;
      if (boxInfo.breakSound)
        this.breakSound = boxInfo.breakSound;
    }
    getRect(boxData) {
      if (!boxData)
        boxData = this.getBoxData();
      return {
        x: boxData.pos.x + 8 * PixelRatio,
        y: RowToYMap[boxData.row] + 8 * PixelRatio,
        width: this.entityS.width,
        height: this.entityS.height
      };
    }
    onCreate() {
      let img = this.mapData[this.type].img;
      this.loadImage(img);
      this.size(this.boxInfo.width, this.boxInfo.height);
      this.x = ColToXMap[this.col];
      this.y = this.boxInfo.offsetY ? getFixed(RowToYMap[this.row] - this.boxInfo.offsetY) : RowToYMap[this.row];
      this.targetPos = new Laya.Vector2(this.x, this.y);
    }
    getEntityYByY(y) {
      return y + 4 * PixelRatio + AllStoneOffsetY;
    }
    getEntityXByX(x) {
      return x + 4 * PixelRatio;
    }
    renderBox(data) {
      if (data.state === "default" /* default */ && this.isBreak) {
        this.x = data.pos.x;
        this.y = data.pos.y;
        this.zOrder = data.zOrder;
        this.breakAni.source = "";
        this.isBreak = false;
        Laya.Tween.to(this, { alpha: 1 }, 200, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
          this.alpha = 1;
        }));
      }
      this.renderBoxPos(data);
      switch (data.state) {
        case "default" /* default */:
          if (!this.trackAni)
            return;
          this.removeChild(this.trackAni);
          this.trackAni = null;
          break;
        case "move" /* move */:
          this.renderBoxTrack(data);
          break;
        case "weakpushing" /* weakpushing */:
          this.renderWeakpush(data);
          break;
        case "breaking" /* breaking */:
          this.playBreak(data);
          break;
        case "dead" /* dead */:
          this.alpha = 0;
          break;
      }
    }
    renderWeakpush(boxData) {
      if (this.isWeakpush)
        return;
      let offset = 0;
      this.isWeakpush = true;
      startTickTask("weakpushFrameCount", this, this.weakpushFrameCount, () => {
        let boxData2 = StateService.getInstance().state.boxes.find((item) => item.id === this.id);
        if (!boxData2)
          return;
        boxData2.state = "default" /* default */;
        this.isWeakpush = false;
      });
      switch (boxData.direction) {
        case 1 /* LEFT */:
          offset = boxData.pos.x;
          Laya.Tween.to(this, { x: offset }, 50, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            this.targetPos.x = offset;
          }));
          break;
        case 2 /* RIGHT */:
          offset = boxData.pos.x;
          Laya.Tween.to(this, { x: offset }, 50, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            this.targetPos.x = offset;
            this.changeDirectionGrid = null;
          }));
          break;
        case 3 /* UP */:
          offset = boxData.pos.y;
          Laya.Tween.to(this, { y: offset }, 50, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            this.targetPos.y = offset;
            this.zOrder = boxData.zOrder;
          }));
          break;
        case 4 /* DOWN */:
          offset = offset = boxData.pos.y;
          Laya.Tween.to(this, { y: offset }, 50, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
            this.targetPos.y = offset;
            this.zOrder = boxData.zOrder;
          }));
          break;
      }
    }
    renderBoxPos(boxData) {
      let position = boxData.pos;
      this.zOrder = boxData.zOrder;
      if (!this.targetPos) {
        this.pos(position.x, position.y);
        this.targetPos = new Laya.Vector2(position.x, position.y);
      } else if (this.targetPos.x !== position.x || this.targetPos.y !== position.y) {
        this.tw.clear();
        this.pos(this.targetPos.x, this.targetPos.y);
        this.targetPos.x = position.x;
        this.targetPos.y = position.y;
        this.tw.to(this, { x: position.x, y: position.y }, OneFrameTime, Laya.Ease.linearOut);
      }
    }
    renderBoxTrack(boxData) {
      if (this.trackAni) {
        if (this.lastDirection !== boxData.direction) {
          if (this.trackAniTimer) {
            clearTimeout(this.trackAniTimer);
            this.trackAniTimer = null;
          } else {
            this.removeChild(this.trackAni);
          }
          this.playTrack(boxData.direction);
        }
      } else {
        this.trackAni = new Laya.Animation();
        this.trackAniTimer = setTimeout(() => {
          this.trackAniTimer = null;
          this.playTrack(boxData.direction);
        }, 200);
      }
      this.lastDirection = boxData.direction;
    }
    // isChangeDirection (row: number, col: number) {
    //     let grid = GamePanel.instance.cover[row][col]
    //     return grid === CoverType.up || grid === CoverType.down || grid === CoverType.left || grid === CoverType.right
    // }
    dead(boxData) {
      boxData.state = "breaking" /* breaking */;
      if (this.trackAniTimer) {
        clearTimeout(this.trackAniTimer);
        this.trackAniTimer = null;
      }
      if (this.type === 102 /* baoxiang */) {
        GoodsService.getInstance().refreshCollect([
          { type: MyRandom() < 0.66 ? 2 : 3, row: boxData.row, col: boxData.col }
        ]);
      }
      if (!this.isIce() && !this.isFire()) {
        startTickTask("playBreakFrameCount", this, this.playBreakFrameCount, () => {
          let boxData2 = this.getBoxData();
          if (!boxData2)
            return;
          if (boxData2.state === "breaking" /* breaking */) {
            boxData2.state = "dead" /* dead */;
          }
        });
      }
    }
    playBreak(boxData) {
      if (this.isBreak || !this.parent)
        return;
      this.isBreak = true;
      this.alpha = 0;
      this.breakAni.source = `${ServiceIp}images/map/stone-${BoxType[this.type]}-break.atlas`;
      this.breakAni.x = boxData.pos.x - (this.boxInfo.breakWidth - this.width) / 2;
      this.breakAni.y = boxData.pos.y - (this.boxInfo.breakHeight - this.height) / 2;
      this.breakAni.scale(PixelRatio, PixelRatio);
      this.breakAni.interval = 100;
      this.breakAni.play(false);
      this.breakAni.on(Laya.Event.COMPLETE, this, () => {
        var _a;
        this.breakAni.source = "";
        (_a = this.parent) == null ? void 0 : _a.removeChild(this.breakAni);
      });
      this.parent.addChild(this.breakAni);
      playSound(this.breakSound);
      this.playBreakEnd();
    }
    // public breakFrame () {
    //     startTickTask('boxBreakFrameCount', this, this.boxBreakFrameCount, () => {
    //         let boxData = StateService.getInstance().state.boxes.find(item => item.id === this.id)
    //         boxData.state = BoxStatus.breaking
    //         this.breakEndFrame()
    //     })
    // }
    playBreakEnd() {
    }
    getBoxData() {
      return StateService.getInstance().state.boxes.find((item) => item.id === this.id);
    }
    playTrack(direction) {
      if (!this.trackAni)
        return;
      switch (direction) {
        case 1 /* LEFT */:
          this.trackAni.source = `${ServiceIp}images/cover/track-left.atlas`;
          this.trackAni.x = this.width;
          this.trackAni.y = 0;
          this.trackAni.scale(PixelRatio, PixelRatio);
          break;
        case 2 /* RIGHT */:
          this.trackAni.source = `${ServiceIp}images/cover/track-right.atlas`;
          this.trackAni.x = -ResRate["track-right"].width;
          this.trackAni.y = 0;
          this.trackAni.scale(PixelRatio, PixelRatio);
          break;
        case 3 /* UP */:
          this.trackAni.source = `${ServiceIp}images/cover/track-up.atlas`;
          this.trackAni.x = 0;
          this.trackAni.y = this.height - 5;
          this.trackAni.scale(PixelRatio, PixelRatio);
          break;
        case 4 /* DOWN */:
          this.trackAni.source = `${ServiceIp}images/cover/track-down.atlas`;
          this.trackAni.x = 0;
          this.trackAni.y = -ResRate["track-down"].height;
          this.trackAni.scale(PixelRatio, PixelRatio);
          break;
      }
      this.trackAni.play();
      this.addChild(this.trackAni);
    }
    isIce() {
      return false;
    }
    isFire() {
      return false;
    }
    /**
     * 刷新，每15秒石会自动刷新
     */
    // public refresh () {
    //     this.row = this.initRow
    //     this.col = this.initCol
    //     this.status = BoxStatus.default
    //     this.zOrder = this.row
    //     GamePanel.instance.setGrid(this.row, this.col, this)
    //     this.x = this.boxInfo.offsetX ? ColToXMap[this.col] - this.boxInfo.offsetX : ColToXMap[this.col]
    //     this.y = this.boxInfo.offsetY ? RowToYMap[this.row] - this.boxInfo.offsetY : RowToYMap[this.row]
    //     this.targetPos.x = this.x
    //     this.targetPos.y = this.y
    //     this.power = 0
    //     this.alpha = 1
    //     if (!GamePanel.instance.contains(this)) {
    //         GamePanel.instance.addChild(this)
    //     }
    // }
  };
  Box = __decorateClass([
    regClass8("ZJMsF_ztTgelUn81qbcAVQ")
  ], Box);

  // src/entity/box/FireBox.ts
  var FireBox = class _FireBox extends Box {
    constructor() {
      super(...arguments);
      this.bombAni = new Laya.Animation();
      this.fireBomb = new FireBomb();
      this.bombFrameCount = 15;
      this.fireBreakDelayFrameCount = 10;
      this.fireBombDelayFrameCount = 16;
      this.removeBreakAniFrameCount = 25;
      this.removeFireBombFrameCount = 60;
    }
    playBreakEnd() {
      startTickTask("fireBreakDelayFrameCount", this, this.fireBreakDelayFrameCount, () => {
        this.playBomb();
      });
    }
    playBomb() {
      if (!this.parent)
        return;
      let boxData = this.getBoxData();
      if (!boxData)
        return;
      this.bombAni.source = `${ServiceIp}images/cover/fire-box/fire-bomb.atlas`;
      this.bombAni.x = ColToXMap[boxData.col - 2] - 4 * PixelRatio;
      this.bombAni.y = RowToYMap[boxData.row - 2] - 26 * PixelRatio;
      this.bombAni.scale(PixelRatio, PixelRatio);
      playSound(`${ServiceIp}sound/fire-bomb.wav`);
      this.fireBomb.power = boxData.power;
      this.fireBomb.playerId = boxData.playerId;
      this.bombAni.interval = 80;
      this.bombAni.play(false);
      this.parent.addChild(this.bombAni);
      startTickTask("fireBombDelayFrameCount", this, this.fireBombDelayFrameCount, () => {
        let boxData2 = this.getBoxData();
        if (!boxData2)
          return;
        GamePanel.instance.setMoveGridRange(boxData2.row, boxData2.col, 2, this.fireBomb);
      });
      startTickTask("removeFireBombFrameCount", this, this.removeFireBombFrameCount, () => {
        var _a;
        let boxData2 = this.getBoxData();
        if (!boxData2)
          return;
        if (boxData2.state === "breaking" /* breaking */) {
          boxData2.state = "dead" /* dead */;
        }
        GamePanel.instance.removeFromMoveGridRange(boxData2.row, boxData2.col, 2, this.fireBomb);
        (_a = this.parent) == null ? void 0 : _a.removeChild(this.bombAni);
      });
      startTickTask("bombFrameCount", this, this.bombFrameCount, () => {
        let boxData2 = this.getBoxData();
        if (!boxData2)
          return;
        let fireList = this.getGridFireBox(boxData2.row, boxData2.col, 2);
        fireList.forEach((item) => {
          let data = item.getBoxData();
          data.power = boxData2.power;
          data.playerId = boxData2.playerId;
          StateService.getInstance().boxStop(item, data);
        });
      });
    }
    getGridFireBox(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          let grid = GamePanel.instance.moveGrid[i][j];
          if (grid && grid.length) {
            result = result.concat(grid.filter((item) => item instanceof _FireBox && !item.isBreak));
          }
          grid = GamePanel.instance.grid[i][j];
          if (grid !== this && grid instanceof _FireBox && !grid.isBreak) {
            result.push(grid);
          }
        }
      }
      return result;
    }
    isFire() {
      return true;
    }
  };

  // src/entity/box/IceBox.ts
  var IceBox = class extends Box {
    constructor() {
      super(...arguments);
      this.bombAni = new Laya.Animation();
      this.iceBomb = new IceBomb();
      this.iceBreakDelayFrameCount = 10;
      this.iceBombDelayFrameCount = 16;
      this.removeBreakAniFrameCount = 25;
      this.removeIceBombFrameCount = 70;
    }
    playBreakEnd() {
      startTickTask("iceBreakDelayFrameCount", this, this.iceBreakDelayFrameCount, () => {
        this.playBomb();
      });
    }
    playBomb() {
      if (!this.parent)
        return;
      let boxData = this.getBoxData();
      this.bombAni.source = `${ServiceIp}images/cover/ice-box/ice-bomb.atlas`;
      this.bombAni.x = ColToXMap[boxData.col - 2] - 8 * PixelRatio;
      this.bombAni.y = RowToYMap[boxData.row - 2] - 8 * PixelRatio;
      this.bombAni.scale(PixelRatio, PixelRatio);
      playSound(`${ServiceIp}sound/ice-bomb.wav`);
      this.bombAni.interval = 80;
      this.bombAni.play(false);
      this.parent.addChild(this.bombAni);
      startTickTask("iceBombDelayFrameCount", this, this.iceBombDelayFrameCount, () => {
        let boxData2 = this.getBoxData();
        if (!boxData2)
          return;
        GamePanel.instance.setMoveGridRange(boxData2.row, boxData2.col, 2, this.iceBomb);
      });
      startTickTask("removeIceBombFrameCount", this, this.removeIceBombFrameCount, () => {
        var _a;
        let boxData2 = this.getBoxData();
        if (!boxData2)
          return;
        if (boxData2.state === "breaking" /* breaking */) {
          boxData2.state = "dead" /* dead */;
        }
        GamePanel.instance.removeFromMoveGridRange(boxData2.row, boxData2.col, 2, this.iceBomb);
        (_a = this.parent) == null ? void 0 : _a.removeChild(this.bombAni);
      });
    }
    isIce() {
      return true;
    }
  };

  // src/service/BoxService.ts
  var BoxService = class _BoxService {
    constructor() {
      this.boxes = [];
    }
    refreshBox() {
      StateService.getInstance().state.boxes.forEach((boxData) => {
        if (!BoxNoRefreshMap[boxData.boxType] && boxData.state === "dead" /* dead */) {
          let box = this.boxes.find((item) => item.id === boxData.id);
          if (!box)
            return;
          let grid = GamePanel.instance.grid[box.initRow][box.initCol];
          if (grid)
            return;
          let goods = GamePanel.instance.getMoveGridRangeAnimalsAndBox(box.initRow, box.initCol, 1);
          boxData.row = box.initRow;
          boxData.col = box.initCol;
          boxData.zOrder = box.initRow;
          boxData.pos.x = box.boxInfo.offsetX ? ColToXMap[boxData.col] - box.boxInfo.offsetX : ColToXMap[boxData.col];
          boxData.pos.y = box.boxInfo.offsetY ? RowToYMap[boxData.row] - box.boxInfo.offsetY : RowToYMap[boxData.row];
          if (StateService.getInstance().hasCrashGoods(box, boxData, goods))
            return;
          boxData.state = "default" /* default */;
          box.row = boxData.row;
          box.col = boxData.col;
          box.targetPos.x = boxData.pos.x;
          box.targetPos.y = boxData.pos.y;
          GamePanel.instance.setGrid(boxData.row, boxData.col, box);
        }
      });
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _BoxService();
      }
      return this.instance;
    }
    createBoxFunc(boxInfo) {
      let box;
      if (boxInfo.type === 100 /* fire */) {
        box = new FireBox(boxInfo);
      } else if (boxInfo.type === 101 /* ice */) {
        box = new IceBox(boxInfo);
      } else {
        box = new Box(boxInfo);
      }
      box.onCreate();
      return box;
    }
    create(boxInfo) {
      let box = Laya.Pool.getItemByCreateFun("box", this.createBoxFunc.bind(null, boxInfo));
      this.boxes.push(box);
      return box;
    }
    getBoxById(id) {
      return this.boxes.find((item) => item.id === id);
    }
    destroy() {
      this.boxes = [];
    }
    // public getBox(row: number, col: number) {
    //     return this.boxes[row + '-' + col]
    // }
  };

  // src/entity/ui/functionPanel.ts
  var bagDialog;
  var getFunctionPanel = () => {
    let infoPanel = new Laya.VBox();
    infoPanel.loadImage(`${ServiceIp}images/system/panelAtlas/chat-panel.png`);
    let shop = new Laya.Sprite();
    shop.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    shop.size(69 * PixelRatio * ScaleRate, 50 * PixelRatio * ScaleRate);
    shop.loadImage(`${ServiceIp}images/hall/menu/shop-btn.png`);
    infoPanel.addChild(shop);
    let jishou = new Laya.Sprite();
    jishou.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    jishou.size(69 * PixelRatio * ScaleRate, 50 * PixelRatio * ScaleRate);
    jishou.loadImage(`${ServiceIp}images/hall/menu/jishou-btn.png`);
    infoPanel.addChild(jishou);
    let pet = new Laya.Sprite();
    pet.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    pet.size(69 * PixelRatio * ScaleRate, 50 * PixelRatio * ScaleRate);
    pet.loadImage(`${ServiceIp}images/hall/menu/pet-btn.png`);
    infoPanel.addChild(pet);
    let family = new Laya.Sprite();
    family.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    family.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    family.loadImage(`${ServiceIp}images/hall/menu/menu-family.png`);
    infoPanel.addChild(family);
    let bag2 = new Laya.Sprite();
    bag2.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    bag2.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    bag2.loadImage(`${ServiceIp}images/hall/menu/menu-bag.png`);
    infoPanel.addChild(bag2);
    bag2.on(Laya.Event.MOUSE_DOWN, onClickBag);
    let task = new Laya.Sprite();
    task.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    task.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    task.loadImage(`${ServiceIp}images/hall/menu/menu-task.png`);
    infoPanel.addChild(task);
    let trade = new Laya.Sprite();
    trade.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    trade.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    trade.loadImage(`${ServiceIp}images/hall/menu/menu-trade.png`);
    infoPanel.addChild(trade);
    let rank = new Laya.Sprite();
    rank.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    rank.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    rank.loadImage(`${ServiceIp}images/hall/menu/menu-rank.png`);
    infoPanel.addChild(rank);
    let mail = new Laya.Sprite();
    mail.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    mail.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    mail.loadImage(`${ServiceIp}images/hall/menu/menu-mail.png`);
    infoPanel.addChild(mail);
    let menu = new Laya.Sprite();
    menu.pos(10 * PixelRatio * ScaleRate, 20 * PixelRatio * ScaleRate);
    menu.size(50 * PixelRatio * ScaleRate, 56 * PixelRatio * ScaleRate);
    menu.loadImage(`${ServiceIp}images/hall/menu/menu-menu.png`);
    infoPanel.addChild(menu);
    return infoPanel;
  };
  function onClickBag(e) {
    e.stopPropagation();
    let role = RoleService.getInstance().role;
    if (!role.getBag()) {
      request("area.playerHandler.getPlayerBag", { type: 0 }, (res) => {
        if (res.code === 200) {
          role.setBag(res.data.content);
          showBag();
        }
      });
    } else {
      showBag();
    }
  }
  function showBag() {
    let bag2 = getMyBag(closeBag);
    bag2.scale(ScaleRate, ScaleRate);
    bagDialog = showDialog(null, bag2, null, -1);
  }
  function closeBag() {
    hideDialog(null, bagDialog);
  }

  // src/runtime/GameScene.ts
  var { regClass: regClass9 } = Laya;
  var GameScene = class extends GameSceneBase {
    constructor() {
      super();
      this.rate = 1;
      this.currentGuanqia = 0;
      this.gameTimer = null;
      this.remainTimes = 300;
      // 当前游戏剩余时间
      this.monsterCount = 0;
      this.guanqiaType = guanqiaType.monster;
      if (isDebugger) {
        Laya.Stat.show(0, 0);
      }
      GameScene.instance = this;
    }
    onOpened(param) {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.mapInfo = param.mapInfo;
      this.room = param.room;
      this.players = param.players;
      this.map = param.mapData;
      this.initFunctionPanel();
      this.initInfoPanel();
      this.initChartPanel();
      this.initCenterPanel();
      this.initGamePanel();
      this.initOptPanel();
      this.enterGame();
      if (this.room.type === "pve" /* pve */) {
        playMusic(`${ServiceIp}music/tanxian.mp3`);
      } else {
        playMusic(`${ServiceIp}music/luandou.mp3`);
      }
      playSound(`${ServiceIp}sound/game-start.wav`);
      this.initJoyStick();
      window.addEventListener("beforeunload", this.beforeUnloadHandler);
      window.addEventListener("unload", this.beforeUnloadHandler);
    }
    isWujinshilian() {
      return this.mapInfo.id === "99-1";
    }
    beforeUnloadHandler(e) {
      e.returnValue = "确定离开页面吗?";
    }
    initFunctionPanel() {
      this.functionPanel = getFunctionPanel();
      this.functionPanel.pos(0, 0);
      this.functionPanel.size(Math.max(60 * PixelRatio, (DeviceWidth - DeviceHeight) / 2 - 160 * PixelRatio * ScaleRate), DeviceHeight);
      this.addChild(this.functionPanel);
    }
    initInfoPanel() {
      this.infoPanel = getInfoPanel(this.map, RoomRoleService.getInstance().roleList, this.room.type, this.mapInfo.starLevel);
      this.infoPanel.pos(this.functionPanel.width, 0);
      this.infoPanel.size(160 * PixelRatio, 600 * PixelRatio);
      this.infoPanel.zOrder = 10;
      this.infoPanel.scale(ScaleRate, ScaleRate);
      this.addChild(this.infoPanel);
      if (this.gameTimer)
        clearInterval(this.gameTimer);
      this.remainTimes = this.map.times;
      this.gameTimer = setInterval(() => {
        if (this.remainTimes <= 0) {
          return;
        }
        renderTimer(this.remainTimes--);
      }, 1e3);
    }
    initGamePanel() {
      this.gamePanel = new GamePanel();
      this.gamePanel.pos(DeviceWidth - this.chartPanel.width - MapWidth * ScaleRate, MapMarginTop * ScaleRate);
      this.gamePanel.size(MapWidth, MapHeight - MapMarginTop);
      this.gamePanel.zOrder = 1;
      this.gamePanel.scale(ScaleRate, ScaleRate);
      this.addChild(this.gamePanel);
      this.gamePanel.initUI();
    }
    initCenterPanel() {
      this.remainTimes = this.map.times;
      this.guanqiaType = this.map.type;
      if (this.guanqiaType === guanqiaType.linghun) {
        this.monsterCount = getMonsterListByInfo(this.map.monster).filter((item) => item.type === 1 /* linghun */).length;
      } else if (this.guanqiaType === guanqiaType.pickup) {
        this.monsterCount = this.map.winCount || getMonsterListByInfo(this.map.collect).length;
        renderMonsterCount();
      } else {
        this.monsterCount = getMonsterListByInfo(this.map.monster).length;
      }
      this.centerPanel = new Laya.Sprite();
      this.centerPanel.pos(DeviceWidth - this.chartPanel.width - MapWidth * ScaleRate, 0);
      this.centerPanel.size(MapWidth, MapHeight);
      this.centerPanel.scale(ScaleRate, ScaleRate);
      this.centerPanel.loadImage(getUrlImg(this.map.img || this.mapInfo.img));
      this.addChild(this.centerPanel);
    }
    initChartPanel() {
      let chatChannel2 = new ChatChannel();
      chatChannel2.x = PixelRatio;
      chatChannel2.zOrder = MaxZOrder;
      chatChannel2.pos(Laya.Browser.width - (DeviceWidth - MapWidth * ScaleRate - 160 * PixelRatio * ScaleRate - this.functionPanel.width), DeviceHeight - 32 * PixelRatio);
      this.addChild(chatChannel2);
      chatChannel2.changeChannel(2 /* room */);
      this.chartPanel = getChatPanel(DeviceWidth - MapWidth * ScaleRate - 160 * PixelRatio * ScaleRate - this.functionPanel.width, DeviceHeight, chatChannel2);
      this.chartPanel.pos(Laya.Browser.width - this.chartPanel.width, 0);
      this.chartPanel.zOrder = 10;
      this.addChild(this.chartPanel);
    }
    initJoyStick() {
      this.joystick.size(DeviceWidth - this.chartPanel.width, DeviceHeight - 50 * PixelRatio);
      this.joystick.pos(0, 0);
      this.joystick.zOrder = MaxZOrder - 2;
    }
    initOptPanel() {
      this.optPanel.size(300 * PixelRatio, 300 * PixelRatio);
      this.optPanel.pos(DeviceWidth - this.optPanel.width, DeviceHeight - this.optPanel.height - 50 * PixelRatio);
      this.optPanel.zOrder = MaxZOrder - 1;
      this.rebirth.loadImage(`${ServiceIp}images/option/rebirth.png`);
      this.rebirth.size(64 * PixelRatio, 64 * PixelRatio);
      this.rebirth.pos(110 * PixelRatio, 100 * PixelRatio);
      this.rebirth.on(Laya.Event.CLICK, this, () => {
        this.gamePanel.role.handleClickRebirth({ keyCode: 49 });
      });
      this.change.loadImage(`${ServiceIp}images/option/change.png`);
      this.change.size(64 * PixelRatio, 64 * PixelRatio);
      this.change.pos(220 * PixelRatio, 100 * PixelRatio);
      this.change.on(Laya.Event.CLICK, this, () => {
        this.gamePanel.role.handleClickDoubleExp({ keyCode: 50 });
      });
      this.push.loadImage(`${ServiceIp}images/option/push.png`);
      this.push.size(96 * PixelRatio, 96 * PixelRatio);
      this.push.pos(170 * PixelRatio, 180 * PixelRatio);
      this.push.on(Laya.Event.CLICK, this, (e) => {
        EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
          type: 3 /* ActorPush */,
          direction: this.joystick.getComponent(JoyStick).direction,
          id: this.gamePanel.role.id
        });
      });
      this.weakpush.loadImage(`${ServiceIp}images/option/weakpush.png`);
      this.weakpush.size(64 * PixelRatio, 64 * PixelRatio);
      this.weakpush.pos(90 * PixelRatio, 200 * PixelRatio);
      this.weakpush.on(Laya.Event.CLICK, this, () => {
        EventManager.getInstance().emit("ClientSync" /* ClientSync */, {
          type: 4 /* ActorWeakpush */,
          direction: this.joystick.getComponent(JoyStick).direction,
          id: this.gamePanel.role.id
        });
      });
    }
    onClosed(type) {
      var pomelo = window.pomelo;
      pomelo.off("onLeave");
      pomelo.off("onGameEnd");
      pomelo.off("onReceiveMsg");
      pomelo.off("onStartNext");
      window.removeEventListener("beforeunload", this.beforeUnloadHandler);
      window.removeEventListener("unload", this.beforeUnloadHandler);
      StateService.getInstance().destroy();
      this.gamePanel.onDestroy();
      BoxService.getInstance().boxes = [];
      EventManager.instance.off("PlayerLeaveRoom" /* PlayerLeaveRoom */, this.playerLeaveRoom, this);
      clearInterval(this.gameTimer);
      this.gameTimer = null;
      this.removeChild(this.gamePanel);
      this.removeChild(this.centerPanel);
      this.joystick.getComponent(JoyStick).onDestroy();
    }
    enterGame() {
      var pomelo = window.pomelo;
      pomelo.on("onLeave", (data) => {
        var user = data.user;
        this.gamePanel.event("roleLeave", user);
      });
      pomelo.on("onGameEnd", (res) => {
        this.showJiesuanPanel(res.data);
      });
      pomelo.on("onReceiveMsg", (res) => {
        addChat(res.data);
        let role = this.gamePanel.getRoomPlayerById(res.data.playerId);
        if (role) {
          role.showChatDialog(res.data.msg);
        }
      });
      pomelo.on("onStartNext", (res) => {
        this.map = res.data.mapData;
        setGameRandomSeed(res.data.seed);
        StateService.getInstance().destroy();
        this.gamePanel.onDestroy();
        BoxService.getInstance().boxes = [];
        this.removeChild(this.gamePanel);
        this.removeChild(this.centerPanel);
        this.initCenterPanel();
        this.initGamePanel();
        renderNextPanelData(this.map, this.currentGuanqia);
        playMusic(`${ServiceIp}music/tanxian.mp3`);
      });
      EventManager.instance.on("PlayerLeaveRoom" /* PlayerLeaveRoom */, this.playerLeaveRoom, this);
    }
    playerLeaveRoom(id) {
      renderRoleItems(this.room.type, RoomRoleService.getInstance().roleList, this.infoPanel.getChildByName("roleListPanel"));
    }
    showJiesuanPanel(data) {
      let allFail = true;
      let panel = new Laya.Sprite();
      panel.size(528 * PixelRatio, 460 * PixelRatio);
      let flag = new Laya.Sprite();
      flag.pos(0, 0);
      flag.size(245 * PixelRatio, 84 * PixelRatio);
      for (let position in data.players) {
        let player = data.players[position];
        if (player.id === GamePanel.instance.role.id) {
          switch (player.result) {
            case 1 /* win */:
              flag.loadImage(`${ServiceIp}images/game/gameAtlas/win.png`);
              playSound(`${ServiceIp}sound/game-win.wav`);
              break;
            case 2 /* fail */:
              flag.loadImage(`${ServiceIp}images/game/gameAtlas/fail.png`);
              playSound(`${ServiceIp}sound/game-fail.wav`);
              break;
            case 3 /* ping */:
              flag.loadImage(`${ServiceIp}images/game/gameAtlas/ping.png`);
              playSound(`${ServiceIp}sound/game-fail.wav`);
              break;
          }
          break;
        }
      }
      panel.addChild(flag);
      let list2 = new Laya.Sprite();
      list2.pos(0, 80 * PixelRatio);
      list2.size(528 * PixelRatio, 379 * PixelRatio);
      list2.loadImage(`${ServiceIp}images/game/gameAtlas/jiesuan.png`);
      panel.addChild(list2);
      let i = 0;
      for (let position in data.players) {
        let player = data.players[position];
        let expRate = Math.min(getFixed(player.exp / LevelExp[player.level - 1]), 1);
        let item = new Laya.HBox();
        item.size(444 * PixelRatio, 35 * PixelRatio);
        item.pos(80 * PixelRatio, 178 * PixelRatio + i++ * item.height);
        list2.addChild(item);
        let result = new Laya.Label();
        switch (player.result) {
          case 1 /* win */:
            result.text = "胜利";
            allFail = false;
            break;
          case 2 /* fail */:
            result.text = "失败";
            break;
          case 3 /* ping */:
            result.text = "平局";
            allFail = false;
            break;
        }
        result.fontSize = 16 * PixelRatio;
        result.size(81 * PixelRatio, 24 * PixelRatio);
        item.addChild(result);
        let name = new Laya.Label(player.name);
        name.size(90 * PixelRatio, 24 * PixelRatio);
        name.fontSize = 14 * PixelRatio;
        name.color = "black";
        item.addChild(name);
        let killCount = new Laya.Label(player.killCount);
        killCount.size(90 * PixelRatio, 24 * PixelRatio);
        killCount.fontSize = 14 * PixelRatio;
        killCount.color = "black";
        item.addChild(killCount);
        let expPanel = new Laya.Sprite();
        expPanel.size(120 * PixelRatio, 13 * PixelRatio);
        item.addChild(expPanel);
        let exp = new Laya.Image(`${ServiceIp}images/game/gameAtlas/exp-progress-short.png`);
        exp.size(0, 13 * PixelRatio);
        exp.y = 3 * PixelRatio;
        expPanel.addChild(exp);
        Laya.Tween.to(exp, { width: 110 * PixelRatio * expRate }, 500, Laya.Ease.linearIn);
        let addExp = new Laya.Label("+" + player.addExp);
        addExp.pos(30 * PixelRatio, -7 * PixelRatio);
        addExp.fontSize = 20 * PixelRatio;
        addExp.color = "red";
        expPanel.addChild(addExp);
        let gold = new Laya.Label(player.gold);
        gold.size(90 * PixelRatio, 24 * PixelRatio);
        gold.fontSize = 20 * PixelRatio;
        gold.color = "white";
        item.addChild(gold);
        if (player.id === GamePanel.instance.role.id) {
          let level = new Laya.Label(player.level);
          level.pos(170 * PixelRatio, 23 * PixelRatio);
          level.fontSize = 12 * PixelRatio;
          level.color = "black";
          list2.addChild(level);
          let topName = new Laya.Label(player.name);
          topName.pos(220 * PixelRatio, 21 * PixelRatio);
          topName.fontSize = 14 * PixelRatio;
          topName.color = "black";
          list2.addChild(topName);
          if (player.showDouble) {
            let doubleExpImg = new Laya.Image(`${ServiceIp}images/game/gameAtlas/double-exp-text.png`);
            doubleExpImg.size(doubleExpImg.width * PixelRatio, doubleExpImg.height * PixelRatio);
            doubleExpImg.pos(350 * PixelRatio, 10 * PixelRatio);
            list2.addChild(doubleExpImg);
          }
          let topExp = new Laya.Image(`${ServiceIp}images/game/gameAtlas/exp-progress-long.png`);
          topExp.size(375 * PixelRatio * expRate, 18 * PixelRatio);
          topExp.pos(135.5 * PixelRatio, 107 * PixelRatio);
          list2.addChild(topExp);
          let topAddExp = new Laya.Label("+" + player.addExp);
          topAddExp.pos(400 * PixelRatio, 95 * PixelRatio);
          topAddExp.fontSize = 20 * PixelRatio;
          topAddExp.color = "#f49127";
          list2.addChild(topAddExp);
          let rateText2 = new Laya.Text();
          rateText2.text = getFixed(expRate * 100) + "%";
          rateText2.pos(300 * PixelRatio, 110 * PixelRatio);
          rateText2.color = "white";
          rateText2.fontSize = 12 * PixelRatio;
          list2.addChild(rateText2);
          let topKillCount = new Laya.Label(player.killCount);
          topKillCount.size(90 * PixelRatio, 24 * PixelRatio);
          topKillCount.pos(250 * PixelRatio, 60 * PixelRatio);
          topKillCount.fontSize = 20 * PixelRatio;
          topKillCount.color = "white";
          list2.addChild(topKillCount);
          let topGold = new Laya.Label(player.gold);
          topGold.size(90 * PixelRatio, 24 * PixelRatio);
          topGold.pos(440 * PixelRatio, 60 * PixelRatio);
          topGold.fontSize = 24 * PixelRatio;
          topGold.color = "white";
          list2.addChild(topGold);
        }
        let role = RoomRoleService.getInstance().getRoomPlayerById(player.id);
        if (player.level !== role.level) {
          let levelUpImg = new Laya.Image(`${ServiceIp}images/game/gameAtlas/level-up.png`);
          levelUpImg.size(levelUpImg.width * PixelRatio, levelUpImg.height * PixelRatio);
          levelUpImg.pos(100 * PixelRatio, -5 * PixelRatio);
          expPanel.addChild(levelUpImg);
        }
        if (player.showDouble) {
          let doubleExpImg = new Laya.Image(`${ServiceIp}images/game/gameAtlas/double-exp-text2.png`);
          doubleExpImg.size(doubleExpImg.width * PixelRatio, doubleExpImg.height * PixelRatio);
          doubleExpImg.pos(100 * PixelRatio, -5 * PixelRatio);
          expPanel.addChild(doubleExpImg);
        }
        role.updateExpAndLevel(player.exp, player.level);
      }
      panel.scale(ScaleRate, ScaleRate);
      this.currentGuanqia++;
      renderRoleItems(this.room.type, RoomRoleService.getInstance().roleList, this.infoPanel.getChildByName("roleListPanel"));
      showDialog(this.parent, panel, () => {
        if (data.end || allFail) {
          if (RoleService.getInstance().role.id === this.room.playerId) {
            request("area.roomHandler.gameEndStatusChange", null);
          }
          Laya.Scene.open("scene/roomScene.ls", true, { room: this.room, players: this.room.players, mapInfo: this.mapInfo });
        } else {
          if (RoleService.getInstance().role.id === this.room.playerId) {
            request("area.roomHandler.startNext", { s: this.mapInfo.starLevel, c: this.currentGuanqia });
          } else {
            request("area.roomHandler.check", { s: this.mapInfo.starLevel, c: this.currentGuanqia });
          }
        }
      }, 3e3, true);
    }
  };
  GameScene = __decorateClass([
    regClass9("hWc8bDgeSpOA5i-FNilJoQ")
  ], GameScene);

  // src/entity/Huoyan.ts
  var PLAYER_SPEED2 = GridWidth * 3 * 1.2;
  var { regClass: regClass10 } = Laya;
  var Huoyan = class extends Laya.Sprite {
    constructor(boxInfo) {
      super();
      this.mapData = getMapData();
      this.power = 0;
      // 力量，等于推箱子的角色或者怪物的力量
      this.entityS = { width: GridWidth - 20 * PixelRatio, height: GridHeight - 20 * PixelRatio };
      this.actionRoute = "area.playerHandler.sendAction";
      this.tw = new Laya.Tween();
      this.status = "default" /* default */;
      this.id = boxInfo.id;
      this.type = boxInfo.type;
      this.row = boxInfo.row;
      this.zOrder = this.row;
      this.col = boxInfo.col;
      let img = this.mapData[this.type].img;
      this.loadImage(img);
      this.size(boxInfo.width, boxInfo.height);
      this.x = ColToXMap[this.col];
      this.y = boxInfo.offsetY ? getFixed(RowToYMap[this.row] - boxInfo.offsetY) : RowToYMap[this.row];
      this.targetPos = new Laya.Vector2(this.x, this.y);
    }
    getRect(data) {
      if (!data) {
        data = this.getHuoyanData();
      }
      return __spreadValues({
        x: data.pos.x + 10 * PixelRatio,
        y: RowToYMap[data.row] + 10 * PixelRatio
      }, this.entityS);
    }
    renderHuoyan(data) {
      if (!data)
        return;
      this.renderHuoyanPos(data);
    }
    renderHuoyanPos(huoyanData) {
      let position = huoyanData.pos;
      this.zOrder = huoyanData.zOrder;
      if (!this.targetPos) {
        this.pos(position.x, position.y);
        this.targetPos = new Laya.Vector2(position.x, position.y);
      } else if (this.targetPos.x !== position.x || this.targetPos.y !== position.y) {
        this.tw.clear();
        this.pos(this.targetPos.x, this.targetPos.y);
        this.targetPos.x = position.x;
        this.targetPos.y = position.y;
        this.tw.to(this, { x: position.x, y: position.y }, OneFrameTime, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
        }));
      }
    }
    getHuoyanData() {
      return StateService.getInstance().state.huoyan.find((item) => item.id === this.id);
    }
  };
  Huoyan = __decorateClass([
    regClass10("5akHe3eoRX-egIefTfW02g")
  ], Huoyan);

  // src/script/GamePanelScript.ts
  var { regClass: regClass11 } = Laya;
  var GamePanelScript = class extends Laya.Script {
    onUpdate() {
      let gamePanel = this.owner;
      gamePanel.onUpdate(getFixed(Laya.timer.delta / 1e3));
    }
  };
  GamePanelScript = __decorateClass([
    regClass11("71IA53bYR9W-dPZDi2NP6w")
  ], GamePanelScript);

  // src/entity/GamePanel.ts
  var { regClass: regClass12, property, Prefab } = Laya;
  var rolePool = Laya.Pool.getPoolBySign("Role");
  var GamePanel = class extends Laya.Sprite {
    constructor() {
      super();
      this.stateService = StateService.getInstance();
      this.collectService = GoodsService.getInstance();
      this.mapData = getMapData();
      this.text = "";
      // public otherRoles: Role[] = [];
      this.roomRoleService = RoomRoleService.getInstance();
      this.boxService = BoxService.getInstance();
      this.roleList = [];
      this.monsterList = MonsterService.getInstance().monsterList;
      this.grid = [];
      // 石头棋盘
      this.cover = [];
      // 箭头、道具等棋盘
      this.moveGrid = [];
      this.mode = 1 /* tanxian */;
      this.frame = 0;
      this.shouldUpdate = false;
      this.pendingMsg = [];
      this.actionRoute = "area.playerHandler.sendAction";
      this.joyStick = GameScene.instance.joystick.getComponent(JoyStick);
      this.jiesuan = false;
      this.roleLeaveFrameCount = 1;
      this.waiguaCount = 0;
      this.lastSt = Date.now();
      GamePanel.instance = this;
      EventManager.getInstance().off("ClientSync" /* ClientSync */, this.handleClientSync, this);
      EventManager.getInstance().on("ClientSync" /* ClientSync */, this.handleClientSync, this);
      let pomelo = window.pomelo;
      pomelo.off("onAction");
      pomelo.on("onAction", (res) => {
        let { lastFrameId, inputs } = res;
        if (lastFrameId === 0) {
          this.shouldUpdate = true;
        }
        this.handleReceiveAction(lastFrameId, inputs);
      });
    }
    transferPlayers(players, wuchabie = false) {
      let result = {};
      this.roleList = [];
      for (let key in players) {
        if (!players[key] || players[key] === -1) {
          continue;
        } else {
          result[key] = RoleService.getInstance().transferRole(players[key]);
          result[key].state = "default" /* default */;
          if (wuchabie) {
            result[key].props.hp = 150;
            result[key].props.power = 33;
            result[key].props.mp = 0;
            result[key].props.speed = 5;
            result[key].props.killValue = 0;
            result[key].props.luckyValue = 0;
          }
          this.roleList.push(result[key]);
        }
      }
    }
    onDestroy() {
      var pomelo = window.pomelo;
      pomelo.off("onReward");
      pomelo.off("onPlayerLeaveRoom");
      pomelo.off("onRoomChange");
      pomelo.off("onRefreshBox");
      pomelo.off("onAction");
      EventManager.getInstance().off("ClientSync" /* ClientSync */, this.handleClientSync, this);
      this.roleList = [];
      this.role = null;
      this.huoyan = null;
      this.grid = [];
      this.cover = [];
      this.moveGrid = [];
      this.roleList = [];
      this.frame = 0;
      this.shouldUpdate = false;
      this.pendingMsg = [];
      this.map = null;
      this.jiesuan = false;
      MonsterService.getInstance().destroy();
      this.boxService.destroy();
      this.stateService.destroy();
      clearTickTask();
      stopAll();
    }
    handleReceiveAction(lastFrameId, inputs) {
      if (this.stateService.lastState && this.stateService.lastState.players) {
        this.stateService.state = this.stateService.lastState;
      }
      for (const data of inputs) {
        this.stateService.applyInput(data, true);
      }
      this.stateService.lastState = deepClone(this.stateService.state);
      this.pendingMsg = this.pendingMsg.filter((msg) => msg.frameId > lastFrameId);
      for (const msg of this.pendingMsg) {
        this.stateService.applyInput(msg.input);
      }
    }
    handleClientSync(input) {
      if (!this.shouldUpdate)
        return;
      let msg = null;
      if (input.type === 1 /* ActorMove */ || input.type === 3 /* ActorPush */ || input.type === 4 /* ActorWeakpush */ || input.type === 5 /* ActorRebirth */ || input.type === 7 /* ActorStop */) {
        msg = {
          frameId: this.stateService.frameId++,
          input
        };
        request(this.actionRoute, msg);
      }
      if (input.type === 1 /* ActorMove */) {
        this.stateService.applyInput(input);
        this.pendingMsg.push(msg);
      }
    }
    initUI() {
      this.map = GameScene.instance.map;
      this.transferPlayers(GameScene.instance.room.players, "pvp2" /* wuchabie */ === this.roomRoleService.room.type);
      this.role = this.roleList.find((item) => item.id === RoleService.getInstance().role.id);
      let cover = this.map.cover;
      for (let i = 0; i < cover.length; i++) {
        let row = [];
        for (let j = 0; j < cover[i].length; j++) {
          row.push(0);
        }
        this.grid.push(row);
        this.cover.push([...row]);
        this.moveGrid.push(row.map((item) => 0));
      }
      if (isDebugger) {
        this.initGrid();
      }
      this.initBox();
      if (this.map.hasFlame) {
        this.initHuoyan();
      }
      this.initRoleList();
      if (this.map.monster) {
        this.initMonster();
      }
      var pomelo = window.pomelo;
      pomelo.on("onReward", (res) => {
        if (res.playerId === this.role.id) {
          this.clearMap();
          this.jiesuan = true;
          GoodsService.getInstance().refreshCollect(res.reward.map((item) => {
            return __spreadProps(__spreadValues({}, item), {
              playerId: this.role.id
            });
          }));
        }
      });
      pomelo.on("onPlayerLeaveRoom", (res) => {
        let { playerId, index } = res.data;
        this.roomRoleService.removePlayerFromRoom(playerId, index);
        let roleIndex = this.roleList.findIndex((item) => item.id === playerId);
        this.removeChild(this.roleList[roleIndex]);
        EventManager.instance.emit("PlayerLeaveRoom" /* PlayerLeaveRoom */, playerId);
        let roleData = this.roleList[roleIndex].getRoleData();
        if (roleData) {
          roleData.state = "dead" /* dead */;
        }
        this.roleList.splice(roleIndex, 1);
        startTickTask("roleLeaveFrameCount", this, this.roleLeaveFrameCount, () => {
          let stateIndex = this.stateService.state.players.findIndex((item) => item.id === playerId);
          if (stateIndex === -1)
            return;
          this.stateService.state.players.splice(stateIndex, 1);
        });
      });
      pomelo.on("onRoomChange", (res) => {
        let room = res.data.room;
        GameScene.instance.room.playerId = room.playerId;
      });
      pomelo.on("onRefreshBox", () => {
        this.boxService.refreshBox();
      });
      this.addComponent(GamePanelScript);
    }
    clearMap() {
      for (var i = this.numChildren - 1; i >= 0; i--) {
        var child = this.getChildAt(i);
        if (child instanceof Box || child instanceof Monster || child instanceof Huoyan || child instanceof Laya.Image || child instanceof Laya.Animation) {
          this.removeChild(child);
        }
      }
      this.grid = [];
      this.cover = [];
      let cover = this.map.cover;
      for (let i2 = 0; i2 < cover.length; i2++) {
        let row = [];
        for (let j = 0; j < cover[i2].length; j++) {
          row.push(0);
        }
        this.grid.push(row);
        this.cover.push([...row]);
      }
    }
    initGrid() {
      for (let i = 0; i < GameRows + 1; i++) {
        let line = new Laya.Sprite();
        line.graphics.drawLine(0, i * GridHeight, this.width, i * GridHeight, "#000000");
        this.addChild(line);
        let t = new Laya.Label(i + "");
        t.pos(0, i * GridHeight);
        this.addChild(t);
      }
      for (let j = 0; j < GameCols + 1; j++) {
        let line = new Laya.Sprite();
        line.graphics.drawLine(j * GridWidth, 0, j * GridWidth, this.height, "#000000");
        this.addChild(line);
        let t = new Laya.Label(j + "");
        t.pos(j * GridWidth, 0);
        this.addChild(t);
      }
    }
    initHuoyan() {
      let i = 0, j = 0;
      let boxInfo = __spreadProps(__spreadValues({}, this.mapData[-100 /* huoyan */]), {
        id: 1,
        type: -100 /* huoyan */,
        row: i,
        col: j
      });
      this.huoyan = new Huoyan(boxInfo);
      this.huoyan.power = HuoyanPower[GameScene.instance.mapInfo.starLevel - 1];
      this.huoyan.status = "move" /* move */;
      this.setMoveGrid(i, j, this.huoyan);
      this.addChild(this.huoyan);
      let huoyanData = {
        id: boxInfo.id,
        pos: new Laya.Vector2(this.huoyan.x, this.huoyan.y),
        row: i,
        col: j,
        type: "Box" /* Box */,
        // TODO
        power: this.huoyan.power,
        zOrder: i,
        direction: 2 /* RIGHT */
      };
      this.stateService.state.huoyan.push(huoyanData);
      this.stateService.lastState = deepClone(this.stateService.state);
    }
    initBox() {
      let cover = this.map.cover;
      let id = 0;
      for (let i = 0; i < cover.length; i++) {
        for (let j = 0; j < cover[i].length; j++) {
          let type = cover[i][j];
          if (!type)
            continue;
          let boxInfo = __spreadProps(__spreadValues({}, this.mapData[type]), {
            id: id++,
            type,
            row: i,
            col: j
          });
          if (type < 1e3 && type > 0) {
            let box = this.boxService.create(boxInfo);
            this.setGrid(i, j, box);
            this.addChild(box);
            let boxData = {
              id: boxInfo.id,
              pos: new Laya.Vector2(box.x, box.y),
              row: i,
              col: j,
              type: "Box" /* Box */,
              boxType: type,
              zOrder: i,
              state: "default" /* default */
            };
            this.stateService.state.boxes.push(boxData);
            this.stateService.lastState = deepClone(this.stateService.state);
          } else if (type >= 1e3) {
            let c = new Laya.Image(boxInfo.img);
            c.size(boxInfo.width, boxInfo.height);
            c.x = boxInfo.offsetX ? getFixed(ColToXMap[j] + boxInfo.offsetX) : ColToXMap[j];
            c.y = boxInfo.offsetY ? getFixed(RowToYMap[i] - boxInfo.offsetY) : RowToYMap[i];
            c.zOrder = i;
            this.setGrid(i, j, -1 /* obstacle */);
            this.addChild(c);
          } else if (type === -99 /* huoyanArea */) {
            this.setGrid(i, j, -99 /* huoyanArea */);
          } else if (type === -100 /* huoyan */) {
          } else if (type < 0) {
            let ani = new Laya.Animation();
            ani.source = boxInfo.img;
            ani.interval = boxInfo.interval || 100;
            ani.x = boxInfo.offsetX ? getFixed(ColToXMap[j] + boxInfo.offsetX) : ColToXMap[j];
            ani.y = boxInfo.offsetY ? getFixed(RowToYMap[i] + boxInfo.offsetY) : RowToYMap[i];
            ani.scale(PixelRatio, PixelRatio);
            ani.play();
            this.setCover(i, j, type);
            this.addChild(ani);
          }
        }
      }
    }
    initMonster() {
      MonsterService.getInstance().setMonsterInfo(this.map.monster);
      renderMonsterCount();
    }
    initRoleList() {
      let playerPosition = this.map.playerPosition;
      this.roleList.forEach((role, index) => {
        var _a, _b;
        let row = (_a = playerPosition[index]) == null ? void 0 : _a.row;
        let col = (_b = playerPosition[index]) == null ? void 0 : _b.col;
        this.setMoveGrid(row, col, role);
        role.pos(getFixed(ColToXMap[col] + PixelRatio), getFixed(RowToYMap[row] + PixelRatio));
        role.size(getFixed(GridWidth * 3 / 4), getFixed(GridHeight * 3 / 5));
        role.initPos(row, col);
        role.setGaming(true);
        role.registerEvent();
        role.initFsmCB();
        role.targetPos = new Laya.Vector2(role.x, role.y);
        this.addChild(role);
        role.initRebirthAni();
        this.stateService.state.players.push({
          id: role.id,
          type: "Role" /* Role */,
          row,
          col,
          zOrder: row,
          pos: new Laya.Vector2(role.x, role.y),
          direction: 4 /* DOWN */,
          hp: role.props.hp,
          state: "default" /* default */,
          equipState: "default" /* default */,
          hurting: false
        });
        this.stateService.lastState = deepClone(this.stateService.state);
      });
    }
    /**
     * 设置某个格子为box，只有box才可以占据某个格子，其他都是浮动的，不会挡路，只有box和固定障碍物是档路的，因为要这样设计
     * @param row 
     * @param col 
     * @param box 
     */
    setGrid(row, col, box) {
      if (this.jiesuan)
        return;
      this.grid[row][col] = box;
    }
    /**
     * 设置某个格子为box，只有box才可以占据某个格子，其他都是浮动的，不会挡路，只有box和固定障碍物是档路的，因为要这样设计
     * @param row 
     * @param col 
     * @param box 
     */
    setCover(row, col, box) {
      if (this.jiesuan)
        return;
      this.cover[row][col] = box;
    }
    /**
     * 将可移动物体加入moveGrid中
     * @param obj 
     */
    setMoveGrid(row, col, obj) {
      if (obj === 0) {
        this.moveGrid[row][col] = obj;
      } else {
        if (!this.moveGrid[row][col])
          this.moveGrid[row][col] = [];
        this.moveGrid[row][col].push(obj);
      }
    }
    setMoveGridRange(row, col, offset, type) {
      if (this.jiesuan)
        return;
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          this.setMoveGrid(i, j, type);
        }
      }
    }
    isChangeDirection(row, col) {
      let grid = GamePanel.instance.cover[row][col];
      return grid === -2 /* up */ || grid === -3 /* down */ || grid === -4 /* left */ || grid === -5 /* right */;
    }
    gridHasAnimalOrMoveBox(row, col) {
      let grid = this.moveGrid[row][col];
      for (let i = 0; i < grid.length; i++) {
        if (grid[i] instanceof Animal || grid[i] instanceof Box) {
          return true;
        }
      }
      return false;
    }
    /**
     * 获取指定格子及周围格子内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getGridAnimals(row, col) {
      let result = [];
      if (!this.moveGrid[row])
        return result;
      let grid = this.moveGrid[row][col];
      if (grid && grid.length) {
        result = result.concat(grid.filter((item) => item instanceof Animal));
      }
      return result;
    }
    /**
     * 获取指定格子及周围格子内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getGridRangeAnimals(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          result = result.concat(this.getGridAnimals(i, j));
        }
      }
      return result;
    }
    /**
     * 获取指定格子及同行内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getGridRangeRowAnimals(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        result = result.concat(this.getGridAnimals(i, col));
      }
      return result;
    }
    /**
     * 获取指定格子及同列内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getGridRangeColAnimals(row, col, offset) {
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let j = minCol; j <= maxCol; j++) {
        result = result.concat(this.getGridAnimals(row, j));
      }
      return result;
    }
    removeFromMoveGrid(row, col, obj) {
      if (this.moveGrid[row][col] && this.moveGrid[row][col].length) {
        let index = this.moveGrid[row][col].findIndex((item) => item === obj);
        if (index !== -1) {
          this.moveGrid[row][col].splice(index, 1);
          if (this.moveGrid[row][col].length === 0) {
            this.moveGrid[row][col] = 0;
          }
        } else {
        }
      }
    }
    /**
     * 获取指定格子及周围格子内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getMoveGridAnimalsAndBox(row, col) {
      let result = [];
      if (!this.moveGrid[row])
        return result;
      let grid = this.moveGrid[row][col];
      if (grid && grid.length) {
        result = result.concat(grid.filter((item) => item instanceof Animal || item instanceof Box));
      }
      return result;
    }
    /**
     * 获取指定格子及周围格子内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getMoveGridCollect(row, col) {
      let result = [];
      if (!this.moveGrid[row])
        return result;
      let grid = this.moveGrid[row][col];
      if (grid && grid.length) {
        return grid.filter((item) => item instanceof Goods);
      }
      return result;
    }
    /**
     * 获取指定格子及周围格子内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getMoveGridRangeAnimalsAndBox(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          result = result.concat(this.getMoveGridAnimalsAndBox(i, j));
        }
      }
      return result;
    }
    getMoveGridRangeCollect(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          result = result.concat(this.getMoveGridCollect(i, j).filter((item) => result.indexOf(item) === -1));
        }
      }
      return result;
    }
    /**
     * 获取指定格子及同行内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getMoveGridRangeRowAnimalsAndBox(row, col, offset) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let result = [];
      for (let i = minRow; i <= maxRow; i++) {
        result = result.concat(this.getMoveGridAnimalsAndBox(i, col));
      }
      return result;
    }
    /**
     * 获取指定格子及同列内的所有玩家及怪物列表
     * @param row 
     * @param col 
     * @param offset 周围几个格子 row-offset ~ row+offset, col-offset~col+offset
     */
    getMoveGridRangeColAnimalsAndBox(row, col, offset) {
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      let result = [];
      for (let j = minCol; j <= maxCol; j++) {
        result = result.concat(this.getMoveGridAnimalsAndBox(row, j));
      }
      return result;
    }
    removeFromMoveGridRange(row, col, offset, type) {
      let minRow = Math.max(0, row - offset);
      let maxRow = Math.min(GameRows - 1, row + offset);
      let minCol = Math.max(0, col - offset);
      let maxCol = Math.min(GameCols - 1, col + offset);
      for (let i = minRow; i <= maxRow; i++) {
        for (let j = minCol; j <= maxCol; j++) {
          this.removeFromMoveGrid(i, j, type);
        }
      }
    }
    /**
     * 组件被禁用时执行，例如从节点从舞台移除后
     */
    //onDisable(): void {}
    /**
     * 第一次执行update之前执行，只会执行一次
     */
    //onStart(): void {}
    /**
     * 手动调用节点销毁时执行
     */
    //onDestroy(): void {
    /**
     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法
     */
    onUpdate(dt) {
      if (Laya.timer.scale !== 1)
        Laya.timer.scale = 1;
      if (Laya.timer._delta && Laya.timer._delta !== 1)
        Laya.timer._delta = 1;
      if (this.shouldUpdate) {
        this.tick(dt);
        this.renderUI();
      }
    }
    tick(dt) {
      this.joyStick.tick(dt);
    }
    // tick (dt: number) {
    //     this.tickPlayer(dt)
    // }
    // tickPlayer (dt: number) {
    //     for (let i = 0; i < this.roleList.length; i++) {
    //         let player = this.roleList[i]
    //         player.tick(dt)
    //     }
    // }
    renderUI() {
      this.renderPlayers();
      this.renderBoxes();
      this.renderHuoyan();
      this.renderMonster();
    }
    renderMonster() {
      this.stateService.state.monster.forEach((data, i) => {
        var _a;
        (_a = this.monsterList.find((item) => item.id === data.id)) == null ? void 0 : _a.renderMonster(data);
      });
    }
    renderPlayers() {
      this.stateService.state.players.forEach((playerData, i) => {
        var _a;
        (_a = this.roleList.find((item) => item.id === playerData.id)) == null ? void 0 : _a.renderRole(playerData);
      });
    }
    getRoomPlayerById(playerId) {
      return this.roleList.find((item) => item.id === playerId);
    }
    renderBoxes() {
      this.stateService.state.boxes.forEach((boxData) => {
        let box = this.boxService.boxes.find((item) => item.id === boxData.id);
        if (box) {
          box.renderBox(boxData);
        }
      });
    }
    renderHuoyan() {
      if (!this.huoyan)
        return;
      let huoyanData = this.stateService.state.huoyan.find((item) => item.id === this.huoyan.id);
      this.huoyan.renderHuoyan(huoyanData);
    }
    /**
     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法
     */
    //onLateUpdate(): void {}
    /**
     * 鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。
     */
    //onMouseClick(): void {}
  };
  GamePanel = __decorateClass([
    regClass12("pVDbUo8dStazzLCb2drb8w")
  ], GamePanel);

  // src/entity/role/RoleStateManchine.ts
  var RoleStateMachine = class extends StateMachine {
    init(owner, roleId) {
      this.roleId = roleId;
      this.owner = owner;
      this.initParams();
      this.initStateMachines();
    }
    initParams() {
      this.params.set("default" /* default */, getInitParamsTrigger());
      this.params.set("iced" /* iced */, getInitParamsTrigger());
      this.params.set("linghun" /* linghun */, getInitParamsTrigger());
    }
    initStateMachines() {
      let name = RoleJobName[this.owner.job];
      this.stateMachines.set("default" /* default */, new State("default" /* default */, this));
      let iceX = ResRate[name + "-ice"].x;
      let iceY = ResRate[name + "-ice"].y;
      this.stateMachines.set("iced" /* iced */, new State("iced" /* iced */, this, `${ServiceIp}images/player/ice/${name}-ice.atlas`, false, 100, false, iceX, iceY));
      let deadX = ResRate["dead"].x;
      let deadY = ResRate["dead"].y;
      this.stateMachines.set("linghun" /* linghun */, new State("linghun" /* linghun */, this, `${ServiceIp}images/player/dead.atlas`, true, 100, true, deadX, deadY));
    }
    run() {
      if (!this.currentState) {
        this.currentState = this.stateMachines.get("default" /* default */);
        return;
      }
      switch (this.currentState) {
        case this.stateMachines.get("default" /* default */):
          if (this.params.get("iced" /* iced */).value) {
            this.currentState = this.stateMachines.get("iced" /* iced */);
          } else if (this.params.get("linghun" /* linghun */).value) {
            this.currentState = this.stateMachines.get("linghun" /* linghun */);
          }
          break;
        case this.stateMachines.get("iced" /* iced */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          }
          break;
        case this.stateMachines.get("linghun" /* linghun */):
          if (this.params.get("default" /* default */).value) {
            this.currentState = this.stateMachines.get("default" /* default */);
          }
          break;
      }
    }
  };

  // src/util/res/equipRate/heihuo.ts
  var BodyDefaultX = getFixed(-123 * PixelRatio);
  var BodyDefaultY = getFixed(-122 * PixelRatio);
  var WingDefaultX = getFixed(-110 * PixelRatio);
  var WingDefaultY = getFixed(-114 * PixelRatio);
  var HeadDefaultX = getFixed(-112 * PixelRatio);
  var HeadDefaultY = getFixed(-108 * PixelRatio);
  var HeihuoEquipRes = {
    /*************** 黑火之子 **************/
    1750: {
      name: "heihuo-ziqiupifeng",
      label: "紫裘披风",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-98 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-99 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    1770: {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-left",
      label: "龙之翼",
      defaultx: getFixed(-78 * PixelRatio),
      defaulty: getFixed(-75 * PixelRatio),
      movex: getFixed(-78 * PixelRatio),
      movey: getFixed(-78 * PixelRatio),
      pushx: getFixed(-77 * PixelRatio),
      pushy: getFixed(-77 * PixelRatio),
      hurtx: getFixed(-97 * PixelRatio),
      hurty: getFixed(-97 * PixelRatio),
      deadx: getFixed(-80 * PixelRatio),
      deady: getFixed(-84 * PixelRatio)
    },
    "1770-right": {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-right",
      label: "龙之翼",
      defaultx: getFixed(-138 * PixelRatio),
      defaulty: getFixed(-135 * PixelRatio),
      movex: getFixed(-137 * PixelRatio),
      movey: getFixed(-136 * PixelRatio),
      pushx: getFixed(-127 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      deadx: getFixed(-83 * PixelRatio),
      deady: getFixed(-84 * PixelRatio)
    },
    1270: {
      name: "heihuo-honglongkui",
      label: "红龙盔",
      defaultx: getFixed(-89 * PixelRatio),
      defaulty: getFixed(-87 * PixelRatio),
      movex: getFixed(-82 * PixelRatio),
      movey: getFixed(-89 * PixelRatio),
      pushx: getFixed(-86 * PixelRatio),
      pushy: getFixed(-84 * PixelRatio),
      hurtx: getFixed(-94 * PixelRatio),
      hurty: getFixed(-92 * PixelRatio),
      deadx: getFixed(-85 * PixelRatio),
      deady: getFixed(-133 * PixelRatio)
    },
    2750: {
      name: "heihuo-heihuoshouhuan",
      label: "黑火手环",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2250: {
      name: "heihuo-lierenzhuang",
      label: "猎人装",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-117 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-116 * PixelRatio)
    },
    2270: {
      name: "heihuo-honglonglinjia",
      label: "红龙鳞甲",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-123 * PixelRatio),
      pushx: getFixed(-120 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-127 * PixelRatio)
    },
    1280: {
      name: "heihuo-chiyunuding",
      label: "赤羽怒顶",
      defaultx: getFixed(-104 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movex: getFixed(-103 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-101 * PixelRatio),
      deady: getFixed(-101 * PixelRatio)
    },
    1780: {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-left",
      label: "火焰翅",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-77 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-77 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-77 * PixelRatio),
      hurtx: getFixed(-80 * PixelRatio),
      hurty: getFixed(-77 * PixelRatio),
      deadx: getFixed(-80 * PixelRatio),
      deady: getFixed(-77 * PixelRatio)
    },
    "1780-right": {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-right",
      label: "火焰翅",
      defaultx: getFixed(-132 * PixelRatio),
      defaulty: getFixed(-133 * PixelRatio),
      movex: getFixed(-132 * PixelRatio),
      movey: getFixed(-133 * PixelRatio),
      pushx: getFixed(-132 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-132 * PixelRatio),
      hurty: getFixed(-133 * PixelRatio),
      deadx: getFixed(-147 * PixelRatio),
      deady: getFixed(-143 * PixelRatio)
    },
    2280: {
      name: "heihuo-yudiankuangjia",
      label: "御殿狂甲",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-110 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-112 * PixelRatio),
      pushx: getFixed(-111 * PixelRatio),
      pushy: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    3e4: {
      name: "nvxia-huangguan",
      label: "皇冠",
      defaultx: HeadDefaultX,
      defaulty: HeadDefaultY,
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-107 * PixelRatio),
      pushy: getFixed(-100 * PixelRatio)
    },
    1250: {
      name: "heihuo-zijinjiaokui",
      label: "紫金角盔",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-97 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-99 * PixelRatio),
      pushx: getFixed(-100 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-98 * PixelRatio),
      hurty: getFixed(-97 * PixelRatio),
      deadx: getFixed(-98 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1402: {
      name: "heihuo-tianshiguanghuan",
      label: "天使光环",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-117 * PixelRatio),
      movex: getFixed(-117 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-117 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-117 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    2401: {
      name: "heihuo-tianshiyi",
      label: "天使衣-男",
      defaultx: getFixed(-122 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-126 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-123 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-123 * PixelRatio)
    },
    1901: {
      name: "heihuo-tianshichi",
      label: "天使翅",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-111 * PixelRatio),
      movey: getFixed(-114 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-112 * PixelRatio),
      hurty: getFixed(-114 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1401: {
      name: "heihuo-xiaojitoushi",
      label: "小鸡头饰",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-117 * PixelRatio),
      movex: getFixed(-116 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-117 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1403: {
      name: "heihuo-bulaohutou",
      label: "布老虎头套",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-102 * PixelRatio),
      movex: getFixed(-104 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-104 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-113 * PixelRatio),
      deadx: getFixed(-100 * PixelRatio),
      deady: getFixed(-100 * PixelRatio)
    },
    1903: {
      name: "heihuo-bulaohuweiba",
      label: "布老虎尾巴",
      defaultx: getFixed(-136 * PixelRatio),
      defaulty: getFixed(-136 * PixelRatio),
      movex: getFixed(-137 * PixelRatio),
      movey: getFixed(-137 * PixelRatio),
      pushx: getFixed(-135 * PixelRatio),
      pushy: getFixed(-135 * PixelRatio),
      hurtx: getFixed(-136 * PixelRatio),
      hurty: getFixed(-136 * PixelRatio),
      deadx: getFixed(-136 * PixelRatio),
      deady: getFixed(-136 * PixelRatio)
    },
    2403: {
      name: "heihuo-bulaohuyi",
      label: "布老虎衣-男",
      defaultx: getFixed(-122 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-126 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-130 * PixelRatio),
      pushy: getFixed(-130 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-124 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-118 * PixelRatio)
    },
    2903: {
      name: "heihuo-nanbulaohushoutao",
      label: "布老虎手套-男",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1405: {
      name: "heihuo-pangxiemao",
      label: "螃蟹帽",
      defaultx: getFixed(-107 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-112 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-108 * PixelRatio),
      pushy: getFixed(-108 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-108 * PixelRatio),
      deadx: getFixed(-104 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    2405: {
      name: "heihuo-shatanzhuang",
      label: "沙滩装-男",
      defaultx: getFixed(-121 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-127 * PixelRatio),
      movey: getFixed(-128 * PixelRatio),
      pushx: getFixed(-130 * PixelRatio),
      pushy: getFixed(-131 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-124 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1e4: {
      name: "tushoutao",
      label: "兔手套"
    },
    1001: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1002: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    4e4: {
      name: "tianshichi",
      label: "天使翅",
      defaultx: WingDefaultX,
      defaulty: WingDefaultY
    },
    2e4: {
      name: "nv-tianshiyi",
      label: "天使衣",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movex: getFixed(-125 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 冰凌圣女 ********************/
    1050: {
      name: "shengnv-bingjinglengyue",
      label: "冰晶冷月",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-105 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1070: {
      name: "shengnv-fenghuangyushi",
      label: "凤凰羽饰",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-112 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    1550: {
      name: "shengnv-bingjingluoxia",
      label: "冰晶落霞",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio)
    },
    1570: {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-left",
      label: "凤翼天翔",
      defaultx: getFixed(-90 * PixelRatio),
      defaulty: getFixed(-91 * PixelRatio),
      movex: getFixed(-86 * PixelRatio),
      movey: getFixed(-88 * PixelRatio),
      pushx: getFixed(-84 * PixelRatio),
      pushy: getFixed(-84 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-88 * PixelRatio)
    },
    "1570-right": {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-right",
      label: "凤翼天翔",
      defaultx: getFixed(-129 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-131 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-87 * PixelRatio)
    },
    2050: {
      name: "shengnv-bingjingchuyang",
      label: "冰晶初阳",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2070: {
      name: "shengnv-fenghuanghuayi",
      label: "凤凰华衣",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-120 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /********************** 机灵女侠 *********************/
    1150: {
      name: "nvxia-nihongyingluo",
      label: "霓虹缨络",
      defaultx: getFixed(-99 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-100 * PixelRatio),
      pushx: getFixed(-101 * PixelRatio),
      pushy: getFixed(-102 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-100 * PixelRatio),
      deadx: getFixed(-102 * PixelRatio),
      deady: getFixed(-103 * PixelRatio)
    },
    1170: {
      name: "nvxia-jinlian",
      label: "金莲",
      defaultx: getFixed(-93 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-91 * PixelRatio),
      movey: getFixed(-91 * PixelRatio),
      pushx: getFixed(-92 * PixelRatio),
      pushy: getFixed(-93 * PixelRatio),
      hurtx: getFixed(-94 * PixelRatio),
      hurty: getFixed(-94 * PixelRatio),
      deadx: getFixed(-94 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1650: {
      name: "nvxia-yuanyuewandao",
      label: "圆月弯刀",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-119 * PixelRatio),
      pushx: getFixed(-109 * PixelRatio),
      pushy: getFixed(-112 * PixelRatio)
    },
    // 女侠70套
    1670: {
      name: "nvxia-heyeruyi",
      label: "荷叶如意",
      defaultx: getFixed(-81 * PixelRatio),
      defaulty: getFixed(-90 * PixelRatio),
      movex: getFixed(-100 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-95 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio)
    },
    2150: {
      name: "nvxia-nihongcaiyi",
      label: "霓虹彩衣",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2170: {
      name: "nvxia-fengpi",
      label: "凤披",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-126 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2550: {
      name: "shengnv-huayangjinzhuo",
      label: "花漾金镯",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2650: {
      name: "nvxia-nihongzhihuan",
      label: "霓虹指环",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 少年剑客 *******************/
    1350: {
      name: "jianke-huangjinpanlongkui",
      label: "黄金蟠龙盔",
      defaultx: getFixed(-113 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1370: {
      name: "jianke-businiaozhikui",
      label: "不死鸟之盔",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-108 * PixelRatio),
      movex: getFixed(-109 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1850: {
      name: "jianke-huangjinyanyuedao",
      label: "黄金偃月刀",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1870: {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-left",
      label: "不死鸟之翅",
      defaultx: getFixed(-95 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-101 * PixelRatio),
      movey: getFixed(-101 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-75 * PixelRatio),
      hurtx: getFixed(-85 * PixelRatio),
      hurty: getFixed(-84 * PixelRatio),
      deadx: getFixed(-85 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1870-right": {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-right",
      label: "不死鸟之翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-138 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-141 * PixelRatio),
      pushy: getFixed(-137 * PixelRatio),
      deadx: getFixed(-153 * PixelRatio),
      deady: getFixed(-153 * PixelRatio)
    },
    2350: {
      name: "jianke-huangjinlonglinjia",
      label: "黄金龙鳞甲",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-118 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2370: {
      name: "jianke-businiaozhijia",
      label: "不死鸟之甲",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-123 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2850: {
      name: "jianke-huangjinyoulongwan",
      label: "黄金游龙腕",
      defaultx: BodyDefaultX,
      defaulty: BodyDefaultY,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1380: {
      name: "jianke-yeyingxingkui",
      label: "夜映星盔",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-106 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    1880: {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-left",
      label: "夜光背翅",
      defaultx: getFixed(-72 * PixelRatio),
      defaulty: getFixed(-85 * PixelRatio),
      movex: getFixed(-70 * PixelRatio),
      movey: getFixed(-72 * PixelRatio),
      pushx: getFixed(-71 * PixelRatio),
      pushy: getFixed(-71 * PixelRatio),
      hurtx: getFixed(-77 * PixelRatio),
      hurty: getFixed(-71 * PixelRatio),
      deadx: getFixed(-81 * PixelRatio),
      deady: getFixed(-93 * PixelRatio)
    },
    "1880-right": {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-right",
      label: "夜光背翅",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-125 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-133 * PixelRatio),
      hurtx: getFixed(-48 * PixelRatio),
      hurty: getFixed(-66 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-128 * PixelRatio)
    },
    2380: {
      name: "jianke-yezhanhuanjia",
      label: "夜战幻甲",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-118 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1180: {
      name: "nvxia-rongxiuqiuguan",
      label: "荣绣裘冠",
      defaultx: getFixed(-89 * PixelRatio),
      defaulty: getFixed(-89 * PixelRatio),
      movex: getFixed(-90 * PixelRatio),
      movey: getFixed(-92 * PixelRatio),
      pushx: getFixed(-93 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio),
      hurtx: getFixed(-107 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-86 * PixelRatio),
      deady: getFixed(-89 * PixelRatio)
    },
    //荣绣羽翼
    1680: {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-left",
      label: "荣绣羽翼",
      defaultx: getFixed(-67 * PixelRatio),
      defaulty: getFixed(-63 * PixelRatio),
      movex: getFixed(-68 * PixelRatio),
      movey: getFixed(-64 * PixelRatio),
      pushx: getFixed(-67 * PixelRatio),
      pushy: getFixed(-63 * PixelRatio),
      hurtx: getFixed(-67 * PixelRatio),
      hurty: getFixed(-63 * PixelRatio),
      deadx: getFixed(-67 * PixelRatio),
      deady: getFixed(-62 * PixelRatio)
    },
    "1680-right": {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-right",
      label: "荣绣羽翼",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-134 * PixelRatio),
      movey: getFixed(-134 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-134 * PixelRatio),
      deadx: getFixed(-134 * PixelRatio),
      deady: getFixed(-145 * PixelRatio)
    },
    2180: {
      name: "nvxia-rongxiujinfu",
      label: "荣绣锦服",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-123 * PixelRatio),
      hurtx: getFixed(-121 * PixelRatio),
      hurty: getFixed(-122 * PixelRatio),
      deadx: getFixed(-119 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    1080: {
      name: "shengnv-liuguangbingshi",
      label: "流光冰饰",
      defaultx: getFixed(-101 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-97 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-104 * PixelRatio),
      hurty: getFixed(-105 * PixelRatio),
      deadx: getFixed(-107 * PixelRatio),
      deady: getFixed(-107 * PixelRatio)
    },
    1580: {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-left",
      label: "溢彩蝶翅",
      defaultx: getFixed(-59 * PixelRatio),
      defaulty: getFixed(-82 * PixelRatio),
      movex: getFixed(-71 * PixelRatio),
      movey: getFixed(-96 * PixelRatio),
      pushx: getFixed(-76 * PixelRatio),
      pushy: getFixed(-72 * PixelRatio),
      hurtx: getFixed(-76 * PixelRatio),
      hurty: getFixed(-72 * PixelRatio),
      deadx: getFixed(-72 * PixelRatio),
      deady: getFixed(-132 * PixelRatio)
    },
    "1580-right": {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-right",
      label: "溢彩蝶翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-134 * PixelRatio),
      hurty: getFixed(-132 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-125 * PixelRatio)
    },
    2080: {
      name: "shengnv-bingmangshengfu",
      label: "冰芒圣服",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-114 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-117 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-113 * PixelRatio)
    }
  };

  // src/util/res/equipRate/jianke.ts
  var BodyDefaultX2 = getFixed(-123 * PixelRatio);
  var BodyDefaultY2 = getFixed(-122 * PixelRatio);
  var WingDefaultX2 = getFixed(-110 * PixelRatio);
  var WingDefaultY2 = getFixed(-114 * PixelRatio);
  var HeadDefaultX2 = getFixed(-112 * PixelRatio);
  var HeadDefaultY2 = getFixed(-108 * PixelRatio);
  var JiankeEquipRes = {
    /******************** 少年剑客 *******************/
    1350: {
      name: "jianke-huangjinpanlongkui",
      label: "黄金蟠龙盔",
      defaultx: getFixed(-113 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1370: {
      name: "jianke-businiaozhikui",
      label: "不死鸟之盔",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-107 * PixelRatio),
      movex: getFixed(-108 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-112 * PixelRatio),
      pushy: getFixed(-109 * PixelRatio),
      hurtx: getFixed(-112 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1850: {
      name: "jianke-huangjinyanyuedao",
      label: "黄金偃月刀",
      defaultx: getFixed(-102 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1870: {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-left",
      label: "不死鸟之翅",
      defaultx: getFixed(-94 * PixelRatio),
      defaulty: getFixed(-92 * PixelRatio),
      movex: getFixed(-100 * PixelRatio),
      movey: getFixed(-99 * PixelRatio),
      pushx: getFixed(-79 * PixelRatio),
      pushy: getFixed(-73 * PixelRatio),
      hurtx: getFixed(-84 * PixelRatio),
      hurty: getFixed(-82 * PixelRatio),
      deadx: getFixed(-84 * PixelRatio),
      deady: getFixed(-83 * PixelRatio)
    },
    "1870-right": {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-right",
      label: "不死鸟之翅",
      defaultx: getFixed(-133 * PixelRatio),
      defaulty: getFixed(-132 * PixelRatio),
      movex: getFixed(-137 * PixelRatio),
      movey: getFixed(-137 * PixelRatio),
      pushx: getFixed(-140 * PixelRatio),
      pushy: getFixed(-135 * PixelRatio),
      deadx: getFixed(-152 * PixelRatio),
      deady: getFixed(-151 * PixelRatio)
    },
    2350: {
      name: "jianke-huangjinlonglinjia",
      label: "黄金龙鳞甲",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-118 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2370: {
      name: "jianke-businiaozhijia",
      label: "不死鸟之甲",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-127 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-121 * PixelRatio),
      pushy: getFixed(-119 * PixelRatio),
      deadx: getFixed(-121 * PixelRatio),
      deady: getFixed(-120 * PixelRatio)
    },
    2850: {
      name: "jianke-huangjinyoulongwan",
      label: "黄金游龙腕",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1402: {
      name: "jianke-tianshiguanghuan",
      label: "天使光环",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-120 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-120 * PixelRatio),
      deadx: getFixed(-121 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    2401: {
      name: "jianke-tianshiyi",
      label: "天使衣-男",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-121 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-121 * PixelRatio)
    },
    1901: {
      name: "jianke-tianshichi",
      label: "天使翅",
      defaultx: getFixed(-113 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-115 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-113 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-113 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-113 * PixelRatio)
    },
    1380: {
      name: "jianke-yeyingxingkui",
      label: "夜映星盔",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-106 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    1880: {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-left",
      label: "夜光背翅",
      defaultx: getFixed(-72 * PixelRatio),
      defaulty: getFixed(-85 * PixelRatio),
      movex: getFixed(-70 * PixelRatio),
      movey: getFixed(-72 * PixelRatio),
      pushx: getFixed(-71 * PixelRatio),
      pushy: getFixed(-71 * PixelRatio),
      hurtx: getFixed(-77 * PixelRatio),
      hurty: getFixed(-71 * PixelRatio),
      deadx: getFixed(-81 * PixelRatio),
      deady: getFixed(-93 * PixelRatio)
    },
    "1880-right": {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-right",
      label: "夜光背翅",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-125 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-133 * PixelRatio),
      hurtx: getFixed(-48 * PixelRatio),
      hurty: getFixed(-66 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-128 * PixelRatio)
    },
    2380: {
      name: "jianke-yezhanhuanjia",
      label: "夜战幻甲",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-118 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1401: {
      name: "jianke-xiaojitoushi",
      label: "小鸡头饰",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-119 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-120 * PixelRatio),
      deadx: getFixed(-119 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1403: {
      name: "jianke-bulaohutou",
      label: "布老虎头套",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-103 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-103 * PixelRatio)
    },
    1903: {
      name: "jianke-bulaohuweiba",
      label: "布老虎尾巴",
      defaultx: getFixed(-137 * PixelRatio),
      defaulty: getFixed(-135 * PixelRatio),
      movex: getFixed(-136 * PixelRatio),
      movey: getFixed(-135 * PixelRatio),
      pushx: getFixed(-136 * PixelRatio),
      pushy: getFixed(-135 * PixelRatio),
      hurtx: getFixed(-136 * PixelRatio),
      hurty: getFixed(-135 * PixelRatio),
      deadx: getFixed(-286 * PixelRatio),
      deady: getFixed(-335 * PixelRatio)
    },
    2403: {
      name: "jianke-bulaohuyi",
      label: "布老虎衣-男",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      hurtx: getFixed(-125 * PixelRatio),
      hurty: getFixed(-126 * PixelRatio),
      deadx: getFixed(-121 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2903: {
      name: "jianke-nanbulaohushoutao",
      label: "布老虎手套-男",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1405: {
      name: "jianke-pangxiemao",
      label: "螃蟹帽",
      defaultx: getFixed(-108 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-108 * PixelRatio),
      movey: getFixed(-105 * PixelRatio),
      pushx: getFixed(-108 * PixelRatio),
      pushy: getFixed(-106 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-106 * PixelRatio),
      deadx: getFixed(-108 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    2405: {
      name: "jianke-shatanzhuang",
      label: "沙滩装-男",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-122 * PixelRatio),
      hurtx: getFixed(-120 * PixelRatio),
      hurty: getFixed(-118 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    1e4: {
      name: "tushoutao",
      label: "兔手套"
    },
    1001: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1002: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    4e4: {
      name: "tianshichi",
      label: "天使翅",
      defaultx: WingDefaultX2,
      defaulty: WingDefaultY2
    },
    2e4: {
      name: "nv-tianshiyi",
      label: "天使衣",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movex: getFixed(-125 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 冰凌圣女 ********************/
    1050: {
      name: "shengnv-bingjinglengyue",
      label: "冰晶冷月",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-105 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1070: {
      name: "shengnv-fenghuangyushi",
      label: "凤凰羽饰",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-112 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    1550: {
      name: "shengnv-bingjingluoxia",
      label: "冰晶落霞",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio)
    },
    1570: {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-left",
      label: "凤翼天翔",
      defaultx: getFixed(-90 * PixelRatio),
      defaulty: getFixed(-91 * PixelRatio),
      movex: getFixed(-86 * PixelRatio),
      movey: getFixed(-88 * PixelRatio),
      pushx: getFixed(-84 * PixelRatio),
      pushy: getFixed(-84 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-88 * PixelRatio)
    },
    "1570-right": {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-right",
      label: "凤翼天翔",
      defaultx: getFixed(-129 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-131 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-87 * PixelRatio)
    },
    2050: {
      name: "shengnv-bingjingchuyang",
      label: "冰晶初阳",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2070: {
      name: "shengnv-fenghuanghuayi",
      label: "凤凰华衣",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-120 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /*************** 黑火之子 **************/
    1750: {
      name: "heihuo-ziqiupifeng",
      label: "紫裘披风",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-98 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-99 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    1770: {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-left",
      label: "龙之翼",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-76 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-79 * PixelRatio),
      pushx: getFixed(-79 * PixelRatio),
      pushy: getFixed(-78 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1770-right": {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-right",
      label: "龙之翼",
      defaultx: getFixed(-136 * PixelRatio),
      defaulty: getFixed(-137 * PixelRatio),
      movex: getFixed(-136 * PixelRatio),
      movey: getFixed(-138 * PixelRatio),
      pushx: getFixed(-124 * PixelRatio),
      pushy: getFixed(-122 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    2250: {
      name: "heihuo-lierenzhuang",
      label: "猎人装",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-117 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-116 * PixelRatio)
    },
    2270: {
      name: "heihuo-honglonglinjia",
      label: "红龙鳞甲",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-127 * PixelRatio)
    },
    3e4: {
      name: "nvxia-huangguan",
      label: "皇冠",
      defaultx: HeadDefaultX2,
      defaulty: HeadDefaultY2,
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-107 * PixelRatio),
      pushy: getFixed(-100 * PixelRatio)
    },
    1250: {
      name: "heihuo-zijinjiaokui",
      label: "紫金角盔",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-97 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-99 * PixelRatio),
      pushx: getFixed(-100 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-98 * PixelRatio),
      hurty: getFixed(-97 * PixelRatio),
      deadx: getFixed(-98 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1270: {
      name: "heihuo-honglongkui",
      label: "红龙盔",
      defaultx: getFixed(-88 * PixelRatio),
      defaulty: getFixed(-88 * PixelRatio),
      movex: getFixed(-81 * PixelRatio),
      movey: getFixed(-90 * PixelRatio),
      pushx: getFixed(-85 * PixelRatio),
      pushy: getFixed(-85 * PixelRatio),
      hurtx: getFixed(-93 * PixelRatio),
      hurty: getFixed(-93 * PixelRatio),
      deadx: getFixed(-84 * PixelRatio),
      deady: getFixed(-134 * PixelRatio)
    },
    2750: {
      name: "heihuo-heihuoshouhuan",
      label: "黑火手环",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /********************** 机灵女侠 *********************/
    1150: {
      name: "nvxia-nihongyingluo",
      label: "霓虹缨络",
      defaultx: getFixed(-99 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-100 * PixelRatio),
      pushx: getFixed(-101 * PixelRatio),
      pushy: getFixed(-102 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-100 * PixelRatio),
      deadx: getFixed(-102 * PixelRatio),
      deady: getFixed(-103 * PixelRatio)
    },
    1170: {
      name: "nvxia-jinlian",
      label: "金莲",
      defaultx: getFixed(-93 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-91 * PixelRatio),
      movey: getFixed(-91 * PixelRatio),
      pushx: getFixed(-92 * PixelRatio),
      pushy: getFixed(-93 * PixelRatio),
      hurtx: getFixed(-94 * PixelRatio),
      hurty: getFixed(-94 * PixelRatio),
      deadx: getFixed(-94 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1650: {
      name: "nvxia-yuanyuewandao",
      label: "圆月弯刀",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-119 * PixelRatio),
      pushx: getFixed(-109 * PixelRatio),
      pushy: getFixed(-112 * PixelRatio)
    },
    // 女侠70套
    1670: {
      name: "nvxia-heyeruyi",
      label: "荷叶如意",
      defaultx: getFixed(-81 * PixelRatio),
      defaulty: getFixed(-90 * PixelRatio),
      movex: getFixed(-100 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-95 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio)
    },
    2150: {
      name: "nvxia-nihongcaiyi",
      label: "霓虹彩衣",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2170: {
      name: "nvxia-fengpi",
      label: "凤披",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-126 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2550: {
      name: "shengnv-huayangjinzhuo",
      label: "花漾金镯",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2650: {
      name: "nvxia-nihongzhihuan",
      label: "霓虹指环",
      defaultx: BodyDefaultX2,
      defaulty: BodyDefaultY2,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1280: {
      name: "heihuo-chiyunuding",
      label: "赤羽怒顶",
      defaultx: getFixed(-104 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movex: getFixed(-103 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-101 * PixelRatio),
      deady: getFixed(-101 * PixelRatio)
    },
    1780: {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-left",
      label: "火焰翅",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-77 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-77 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-77 * PixelRatio),
      hurtx: getFixed(-80 * PixelRatio),
      hurty: getFixed(-77 * PixelRatio),
      deadx: getFixed(-80 * PixelRatio),
      deady: getFixed(-77 * PixelRatio)
    },
    "1780-right": {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-right",
      label: "火焰翅",
      defaultx: getFixed(-132 * PixelRatio),
      defaulty: getFixed(-133 * PixelRatio),
      movex: getFixed(-132 * PixelRatio),
      movey: getFixed(-133 * PixelRatio),
      pushx: getFixed(-132 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-132 * PixelRatio),
      hurty: getFixed(-133 * PixelRatio),
      deadx: getFixed(-147 * PixelRatio),
      deady: getFixed(-143 * PixelRatio)
    },
    2280: {
      name: "heihuo-yudiankuangjia",
      label: "御殿狂甲",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-110 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-112 * PixelRatio),
      pushx: getFixed(-111 * PixelRatio),
      pushy: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1180: {
      name: "nvxia-rongxiuqiuguan",
      label: "荣绣裘冠",
      defaultx: getFixed(-89 * PixelRatio),
      defaulty: getFixed(-89 * PixelRatio),
      movex: getFixed(-90 * PixelRatio),
      movey: getFixed(-92 * PixelRatio),
      pushx: getFixed(-93 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio),
      hurtx: getFixed(-107 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-86 * PixelRatio),
      deady: getFixed(-89 * PixelRatio)
    },
    //荣绣羽翼
    1680: {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-left",
      label: "荣绣羽翼",
      defaultx: getFixed(-67 * PixelRatio),
      defaulty: getFixed(-63 * PixelRatio),
      movex: getFixed(-68 * PixelRatio),
      movey: getFixed(-64 * PixelRatio),
      pushx: getFixed(-67 * PixelRatio),
      pushy: getFixed(-63 * PixelRatio),
      hurtx: getFixed(-67 * PixelRatio),
      hurty: getFixed(-63 * PixelRatio),
      deadx: getFixed(-67 * PixelRatio),
      deady: getFixed(-62 * PixelRatio)
    },
    "1680-right": {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-right",
      label: "荣绣羽翼",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-134 * PixelRatio),
      movey: getFixed(-134 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-134 * PixelRatio),
      deadx: getFixed(-134 * PixelRatio),
      deady: getFixed(-145 * PixelRatio)
    },
    2180: {
      name: "nvxia-rongxiujinfu",
      label: "荣绣锦服",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-123 * PixelRatio),
      hurtx: getFixed(-121 * PixelRatio),
      hurty: getFixed(-122 * PixelRatio),
      deadx: getFixed(-119 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    1080: {
      name: "shengnv-liuguangbingshi",
      label: "流光冰饰",
      defaultx: getFixed(-101 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-97 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-104 * PixelRatio),
      hurty: getFixed(-105 * PixelRatio),
      deadx: getFixed(-107 * PixelRatio),
      deady: getFixed(-107 * PixelRatio)
    },
    1580: {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-left",
      label: "溢彩蝶翅",
      defaultx: getFixed(-59 * PixelRatio),
      defaulty: getFixed(-82 * PixelRatio),
      movex: getFixed(-71 * PixelRatio),
      movey: getFixed(-96 * PixelRatio),
      pushx: getFixed(-76 * PixelRatio),
      pushy: getFixed(-72 * PixelRatio),
      hurtx: getFixed(-76 * PixelRatio),
      hurty: getFixed(-72 * PixelRatio),
      deadx: getFixed(-72 * PixelRatio),
      deady: getFixed(-132 * PixelRatio)
    },
    "1580-right": {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-right",
      label: "溢彩蝶翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-134 * PixelRatio),
      hurty: getFixed(-132 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-125 * PixelRatio)
    },
    2080: {
      name: "shengnv-bingmangshengfu",
      label: "冰芒圣服",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-114 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-117 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-113 * PixelRatio)
    }
  };

  // src/util/res/equipRate/nvxia.ts
  var BodyDefaultX3 = getFixed(-123 * PixelRatio);
  var BodyDefaultY3 = getFixed(-122 * PixelRatio);
  var WingDefaultX3 = getFixed(-110 * PixelRatio);
  var WingDefaultY3 = getFixed(-114 * PixelRatio);
  var HeadDefaultX3 = getFixed(-112 * PixelRatio);
  var HeadDefaultY3 = getFixed(-108 * PixelRatio);
  var NvxiaEquipRes = {
    /********************** 机灵女侠 *********************/
    1150: {
      name: "nvxia-nihongyingluo",
      label: "霓虹缨络",
      defaultx: getFixed(-99 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-100 * PixelRatio),
      pushx: getFixed(-101 * PixelRatio),
      pushy: getFixed(-102 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-100 * PixelRatio),
      deadx: getFixed(-102 * PixelRatio),
      deady: getFixed(-103 * PixelRatio)
    },
    1170: {
      name: "nvxia-jinlian",
      label: "金莲",
      defaultx: getFixed(-93 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-91 * PixelRatio),
      movey: getFixed(-91 * PixelRatio),
      pushx: getFixed(-92 * PixelRatio),
      pushy: getFixed(-93 * PixelRatio),
      hurtx: getFixed(-94 * PixelRatio),
      hurty: getFixed(-94 * PixelRatio),
      deadx: getFixed(-94 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1650: {
      name: "nvxia-yuanyuewandao",
      label: "圆月弯刀",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-119 * PixelRatio),
      pushx: getFixed(-109 * PixelRatio),
      pushy: getFixed(-112 * PixelRatio)
    },
    // 女侠70套
    1670: {
      name: "nvxia-heyeruyi",
      label: "荷叶如意",
      defaultx: getFixed(-81 * PixelRatio),
      defaulty: getFixed(-90 * PixelRatio),
      movex: getFixed(-100 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-95 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio)
    },
    2150: {
      name: "nvxia-nihongcaiyi",
      label: "霓虹彩衣",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2170: {
      name: "nvxia-fengpi",
      label: "凤披",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-126 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2550: {
      name: "shengnv-huayangjinzhuo",
      label: "花漾金镯",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2650: {
      name: "nvxia-nihongzhihuan",
      label: "霓虹指环",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1402: {
      name: "nvxia-tianshiguanghuan",
      label: "天使光环",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-111 * PixelRatio),
      movey: getFixed(-112 * PixelRatio),
      pushx: getFixed(-112 * PixelRatio),
      pushy: getFixed(-112 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    2402: {
      name: "nvxia-tianshiyi",
      label: "天使衣-女",
      defaultx: getFixed(-127 * PixelRatio),
      defaulty: getFixed(-128 * PixelRatio),
      movex: getFixed(-126 * PixelRatio),
      movey: getFixed(-129 * PixelRatio),
      pushx: getFixed(-128 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      hurtx: getFixed(-126 * PixelRatio),
      hurty: getFixed(-129 * PixelRatio),
      deadx: getFixed(-126 * PixelRatio),
      deady: getFixed(-129 * PixelRatio)
    },
    1901: {
      name: "nvxia-tianshichi",
      label: "天使翅",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-115 * PixelRatio),
      movey: getFixed(-117 * PixelRatio),
      pushx: getFixed(-114 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-114 * PixelRatio),
      hurty: getFixed(-117 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    //荣绣裘冠
    1180: {
      name: "nvxia-rongxiuqiuguan",
      label: "荣绣裘冠",
      defaultx: getFixed(-89 * PixelRatio),
      defaulty: getFixed(-89 * PixelRatio),
      movex: getFixed(-90 * PixelRatio),
      movey: getFixed(-92 * PixelRatio),
      pushx: getFixed(-93 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio),
      hurtx: getFixed(-107 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-86 * PixelRatio),
      deady: getFixed(-89 * PixelRatio)
    },
    //荣绣羽翼
    1680: {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-left",
      label: "荣绣羽翼",
      defaultx: getFixed(-67 * PixelRatio),
      defaulty: getFixed(-63 * PixelRatio),
      movex: getFixed(-68 * PixelRatio),
      movey: getFixed(-64 * PixelRatio),
      pushx: getFixed(-67 * PixelRatio),
      pushy: getFixed(-63 * PixelRatio),
      hurtx: getFixed(-67 * PixelRatio),
      hurty: getFixed(-63 * PixelRatio),
      deadx: getFixed(-67 * PixelRatio),
      deady: getFixed(-62 * PixelRatio)
    },
    "1680-right": {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-right",
      label: "荣绣羽翼",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-134 * PixelRatio),
      movey: getFixed(-134 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-134 * PixelRatio),
      deadx: getFixed(-134 * PixelRatio),
      deady: getFixed(-145 * PixelRatio)
    },
    2180: {
      name: "nvxia-rongxiujinfu",
      label: "荣绣锦服",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-123 * PixelRatio),
      hurtx: getFixed(-121 * PixelRatio),
      hurty: getFixed(-122 * PixelRatio),
      deadx: getFixed(-119 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    1403: {
      name: "nvxia-bulaohutou",
      label: "布老虎头套",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-107 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-107 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-107 * PixelRatio),
      deadx: getFixed(-107 * PixelRatio),
      deady: getFixed(-107 * PixelRatio)
    },
    1903: {
      name: "nvxia-bulaohuweiba",
      label: "布老虎尾巴",
      defaultx: getFixed(-136 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-137 * PixelRatio),
      movey: getFixed(-135 * PixelRatio),
      pushx: getFixed(-135 * PixelRatio),
      pushy: getFixed(-133 * PixelRatio),
      hurtx: getFixed(-135 * PixelRatio),
      hurty: getFixed(-133 * PixelRatio),
      deadx: getFixed(-135 * PixelRatio),
      deady: getFixed(-133 * PixelRatio)
    },
    2404: {
      name: "nvxia-bulaohuyi",
      label: "布老虎衣-女",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-124 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-125 * PixelRatio),
      pushx: getFixed(-124 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      hurtx: getFixed(-124 * PixelRatio),
      hurty: getFixed(-125 * PixelRatio),
      deadx: getFixed(-121 * PixelRatio),
      deady: getFixed(-123 * PixelRatio)
    },
    2904: {
      name: "nvxia-nanbulaohushoutao",
      label: "布老虎手套-女",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1405: {
      name: "nvxia-pangxiemao",
      label: "螃蟹帽",
      defaultx: getFixed(-108 * PixelRatio),
      defaulty: getFixed(-108 * PixelRatio),
      movex: getFixed(-108 * PixelRatio),
      movey: getFixed(-108 * PixelRatio),
      pushx: getFixed(-108 * PixelRatio),
      pushy: getFixed(-108 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-108 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    2406: {
      name: "nvxia-shatanzhuang",
      label: "沙滩装-女",
      defaultx: getFixed(-126 * PixelRatio),
      defaulty: getFixed(-127 * PixelRatio),
      movex: getFixed(-126 * PixelRatio),
      movey: getFixed(-128 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-124 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-127 * PixelRatio)
    },
    1401: {
      name: "nvxia-xiaojitoushi",
      label: "小鸡头饰",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-111 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-111 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-111 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    1e4: {
      name: "tushoutao",
      label: "兔手套"
    },
    1001: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1002: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    4e4: {
      name: "tianshichi",
      label: "天使翅",
      defaultx: WingDefaultX3,
      defaulty: WingDefaultY3
    },
    2e4: {
      name: "nv-tianshiyi",
      label: "天使衣",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movex: getFixed(-125 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 冰凌圣女 ********************/
    1050: {
      name: "shengnv-bingjinglengyue",
      label: "冰晶冷月",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-105 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1070: {
      name: "shengnv-fenghuangyushi",
      label: "凤凰羽饰",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-112 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    1550: {
      name: "shengnv-bingjingluoxia",
      label: "冰晶落霞",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio)
    },
    1570: {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-left",
      label: "凤翼天翔",
      defaultx: getFixed(-90 * PixelRatio),
      defaulty: getFixed(-91 * PixelRatio),
      movex: getFixed(-86 * PixelRatio),
      movey: getFixed(-88 * PixelRatio),
      pushx: getFixed(-84 * PixelRatio),
      pushy: getFixed(-84 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-88 * PixelRatio)
    },
    "1570-right": {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-right",
      label: "凤翼天翔",
      defaultx: getFixed(-129 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-131 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-87 * PixelRatio)
    },
    2050: {
      name: "shengnv-bingjingchuyang",
      label: "冰晶初阳",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2070: {
      name: "shengnv-fenghuanghuayi",
      label: "凤凰华衣",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-120 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /*************** 黑火之子 **************/
    1750: {
      name: "heihuo-ziqiupifeng",
      label: "紫裘披风",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-98 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-99 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    1770: {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-left",
      label: "龙之翼",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-76 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-79 * PixelRatio),
      pushx: getFixed(-79 * PixelRatio),
      pushy: getFixed(-78 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1770-right": {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-right",
      label: "龙之翼",
      defaultx: getFixed(-136 * PixelRatio),
      defaulty: getFixed(-137 * PixelRatio),
      movex: getFixed(-136 * PixelRatio),
      movey: getFixed(-138 * PixelRatio),
      pushx: getFixed(-124 * PixelRatio),
      pushy: getFixed(-122 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    2250: {
      name: "heihuo-lierenzhuang",
      label: "猎人装",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-117 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-116 * PixelRatio)
    },
    2270: {
      name: "heihuo-honglonglinjia",
      label: "红龙鳞甲",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-127 * PixelRatio)
    },
    2350: {
      name: "jianke-huangjinlonglinjia",
      label: "黄金龙鳞甲",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-118 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2370: {
      name: "jianke-businiaozhijia",
      label: "不死鸟之甲",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-123 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    3e4: {
      name: "nvxia-huangguan",
      label: "皇冠",
      defaultx: HeadDefaultX3,
      defaulty: HeadDefaultY3,
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-107 * PixelRatio),
      pushy: getFixed(-100 * PixelRatio)
    },
    1250: {
      name: "heihuo-zijinjiaokui",
      label: "紫金角盔",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-97 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-99 * PixelRatio),
      pushx: getFixed(-100 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-98 * PixelRatio),
      hurty: getFixed(-97 * PixelRatio),
      deadx: getFixed(-98 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1270: {
      name: "heihuo-honglongkui",
      label: "红龙盔",
      defaultx: getFixed(-88 * PixelRatio),
      defaulty: getFixed(-88 * PixelRatio),
      movex: getFixed(-81 * PixelRatio),
      movey: getFixed(-90 * PixelRatio),
      pushx: getFixed(-85 * PixelRatio),
      pushy: getFixed(-85 * PixelRatio),
      hurtx: getFixed(-93 * PixelRatio),
      hurty: getFixed(-93 * PixelRatio),
      deadx: getFixed(-84 * PixelRatio),
      deady: getFixed(-134 * PixelRatio)
    },
    2750: {
      name: "heihuo-heihuoshouhuan",
      label: "黑火手环",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 少年剑客 *******************/
    1350: {
      name: "jianke-huangjinpanlongkui",
      label: "黄金蟠龙盔",
      defaultx: getFixed(-113 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1370: {
      name: "jianke-businiaozhikui",
      label: "不死鸟之盔",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-108 * PixelRatio),
      movex: getFixed(-109 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1850: {
      name: "jianke-huangjinyanyuedao",
      label: "黄金偃月刀",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1870: {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-left",
      label: "不死鸟之翅",
      defaultx: getFixed(-95 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-101 * PixelRatio),
      movey: getFixed(-101 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-75 * PixelRatio),
      hurtx: getFixed(-85 * PixelRatio),
      hurty: getFixed(-84 * PixelRatio),
      deadx: getFixed(-85 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1870-right": {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-right",
      label: "不死鸟之翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-138 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-141 * PixelRatio),
      pushy: getFixed(-137 * PixelRatio),
      deadx: getFixed(-153 * PixelRatio),
      deady: getFixed(-153 * PixelRatio)
    },
    2850: {
      name: "jianke-huangjinyoulongwan",
      label: "黄金游龙腕",
      defaultx: BodyDefaultX3,
      defaulty: BodyDefaultY3,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1080: {
      name: "shengnv-liuguangbingshi",
      label: "流光冰饰",
      defaultx: getFixed(-101 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-97 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-104 * PixelRatio),
      hurty: getFixed(-105 * PixelRatio),
      deadx: getFixed(-107 * PixelRatio),
      deady: getFixed(-107 * PixelRatio)
    },
    1580: {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-left",
      label: "溢彩蝶翅",
      defaultx: getFixed(-59 * PixelRatio),
      defaulty: getFixed(-82 * PixelRatio),
      movex: getFixed(-71 * PixelRatio),
      movey: getFixed(-96 * PixelRatio),
      pushx: getFixed(-76 * PixelRatio),
      pushy: getFixed(-72 * PixelRatio),
      hurtx: getFixed(-76 * PixelRatio),
      hurty: getFixed(-72 * PixelRatio),
      deadx: getFixed(-72 * PixelRatio),
      deady: getFixed(-132 * PixelRatio)
    },
    "1580-right": {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-right",
      label: "溢彩蝶翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-134 * PixelRatio),
      hurty: getFixed(-132 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-125 * PixelRatio)
    },
    2080: {
      name: "shengnv-bingmangshengfu",
      label: "冰芒圣服",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-114 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-117 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-113 * PixelRatio)
    },
    1280: {
      name: "heihuo-chiyunuding",
      label: "赤羽怒顶",
      defaultx: getFixed(-104 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movex: getFixed(-103 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-101 * PixelRatio),
      deady: getFixed(-101 * PixelRatio)
    },
    1780: {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-left",
      label: "火焰翅",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-77 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-77 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-77 * PixelRatio),
      hurtx: getFixed(-80 * PixelRatio),
      hurty: getFixed(-77 * PixelRatio),
      deadx: getFixed(-80 * PixelRatio),
      deady: getFixed(-77 * PixelRatio)
    },
    "1780-right": {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-right",
      label: "火焰翅",
      defaultx: getFixed(-132 * PixelRatio),
      defaulty: getFixed(-133 * PixelRatio),
      movex: getFixed(-132 * PixelRatio),
      movey: getFixed(-133 * PixelRatio),
      pushx: getFixed(-132 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-132 * PixelRatio),
      hurty: getFixed(-133 * PixelRatio),
      deadx: getFixed(-147 * PixelRatio),
      deady: getFixed(-143 * PixelRatio)
    },
    2280: {
      name: "heihuo-yudiankuangjia",
      label: "御殿狂甲",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-110 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-112 * PixelRatio),
      pushx: getFixed(-111 * PixelRatio),
      pushy: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1380: {
      name: "jianke-yeyingxingkui",
      label: "夜映星盔",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-106 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    1880: {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-left",
      label: "夜光背翅",
      defaultx: getFixed(-72 * PixelRatio),
      defaulty: getFixed(-85 * PixelRatio),
      movex: getFixed(-70 * PixelRatio),
      movey: getFixed(-72 * PixelRatio),
      pushx: getFixed(-71 * PixelRatio),
      pushy: getFixed(-71 * PixelRatio),
      hurtx: getFixed(-77 * PixelRatio),
      hurty: getFixed(-71 * PixelRatio),
      deadx: getFixed(-81 * PixelRatio),
      deady: getFixed(-93 * PixelRatio)
    },
    "1880-right": {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-right",
      label: "夜光背翅",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-125 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-133 * PixelRatio),
      hurtx: getFixed(-48 * PixelRatio),
      hurty: getFixed(-66 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-128 * PixelRatio)
    },
    2380: {
      name: "jianke-yezhanhuanjia",
      label: "夜战幻甲",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-118 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    }
  };

  // src/util/res/equipRate/shengnv.ts
  var BodyDefaultX4 = getFixed(-123 * PixelRatio);
  var BodyDefaultY4 = getFixed(-122 * PixelRatio);
  var WingDefaultX4 = getFixed(-110 * PixelRatio);
  var WingDefaultY4 = getFixed(-114 * PixelRatio);
  var HeadDefaultX4 = getFixed(-112 * PixelRatio);
  var HeadDefaultY4 = getFixed(-108 * PixelRatio);
  var ShengnvEquipRes = {
    /******************** 冰凌圣女 ********************/
    1050: {
      name: "shengnv-bingjinglengyue",
      label: "冰晶冷月",
      defaultx: getFixed(-109 * PixelRatio),
      defaulty: getFixed(-105 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1070: {
      name: "shengnv-fenghuangyushi",
      label: "凤凰羽饰",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-112 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-111 * PixelRatio)
    },
    1550: {
      name: "shengnv-bingjingluoxia",
      label: "冰晶落霞",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio)
    },
    1570: {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-left",
      label: "凤翼天翔",
      defaultx: getFixed(-90 * PixelRatio),
      defaulty: getFixed(-91 * PixelRatio),
      movex: getFixed(-86 * PixelRatio),
      movey: getFixed(-88 * PixelRatio),
      pushx: getFixed(-84 * PixelRatio),
      pushy: getFixed(-84 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-88 * PixelRatio)
    },
    "1570-right": {
      parentName: "shengnv-fengyitianxiang",
      name: "shengnv-fengyitianxiang-right",
      label: "凤翼天翔",
      defaultx: getFixed(-129 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-131 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-87 * PixelRatio)
    },
    2050: {
      name: "shengnv-bingjingchuyang",
      label: "冰晶初阳",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-123 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2070: {
      name: "shengnv-fenghuanghuayi",
      label: "凤凰华衣",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-120 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-120 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1402: {
      name: "shengnv-tianshiguanghuan",
      label: "天使光环",
      defaultx: getFixed(-108 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-107 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-114 * PixelRatio),
      pushy: getFixed(-109 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-105 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    2402: {
      name: "shengnv-tianshiyi",
      label: "天使衣-女",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-124 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-130 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-122 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    1901: {
      name: "shengnv-tianshichi",
      label: "天使翅",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-110 * PixelRatio),
      pushy: getFixed(-114 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-116 * PixelRatio)
    },
    1080: {
      name: "shengnv-liuguangbingshi",
      label: "流光冰饰",
      defaultx: getFixed(-101 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-97 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-104 * PixelRatio),
      hurty: getFixed(-105 * PixelRatio),
      deadx: getFixed(-107 * PixelRatio),
      deady: getFixed(-107 * PixelRatio)
    },
    1580: {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-left",
      label: "溢彩蝶翅",
      defaultx: getFixed(-59 * PixelRatio),
      defaulty: getFixed(-82 * PixelRatio),
      movex: getFixed(-71 * PixelRatio),
      movey: getFixed(-96 * PixelRatio),
      pushx: getFixed(-76 * PixelRatio),
      pushy: getFixed(-72 * PixelRatio),
      hurtx: getFixed(-76 * PixelRatio),
      hurty: getFixed(-72 * PixelRatio),
      deadx: getFixed(-72 * PixelRatio),
      deady: getFixed(-132 * PixelRatio)
    },
    "1580-right": {
      parentName: "shengnv-yicaidiechi",
      name: "shengnv-yicaidiechi-right",
      label: "溢彩蝶翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-130 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-130 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-134 * PixelRatio),
      hurty: getFixed(-132 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-125 * PixelRatio)
    },
    2080: {
      name: "shengnv-bingmangshengfu",
      label: "冰芒圣服",
      defaultx: getFixed(-114 * PixelRatio),
      defaulty: getFixed(-113 * PixelRatio),
      movex: getFixed(-114 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      hurtx: getFixed(-117 * PixelRatio),
      hurty: getFixed(-116 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-113 * PixelRatio)
    },
    1403: {
      name: "shengnv-bulaohutou",
      label: "布老虎头套",
      defaultx: getFixed(-105 * PixelRatio),
      defaulty: getFixed(-104 * PixelRatio),
      movex: getFixed(-103 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-108 * PixelRatio),
      pushy: getFixed(-109 * PixelRatio),
      hurtx: getFixed(-108 * PixelRatio),
      hurty: getFixed(-109 * PixelRatio),
      deadx: getFixed(-104 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    1903: {
      name: "shengnv-bulaohuweiba",
      label: "布老虎尾巴",
      defaultx: getFixed(-138 * PixelRatio),
      defaulty: getFixed(-138 * PixelRatio),
      movex: getFixed(-135 * PixelRatio),
      movey: getFixed(-136 * PixelRatio),
      pushx: getFixed(-138 * PixelRatio),
      pushy: getFixed(-138 * PixelRatio),
      hurtx: getFixed(-138 * PixelRatio),
      hurty: getFixed(-138 * PixelRatio),
      deadx: getFixed(-138 * PixelRatio),
      deady: getFixed(-138 * PixelRatio)
    },
    2404: {
      name: "shengnv-bulaohuyi",
      label: "布老虎衣-女",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-123 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-125 * PixelRatio),
      pushx: getFixed(-125 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      hurtx: getFixed(-123 * PixelRatio),
      hurty: getFixed(-124 * PixelRatio),
      deadx: getFixed(-121 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2904: {
      name: "shengnv-nanbulaohushoutao",
      label: "布老虎手套-女",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1405: {
      name: "shengnv-pangxiemao",
      label: "螃蟹帽",
      defaultx: getFixed(-107 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-109 * PixelRatio),
      movey: getFixed(-110 * PixelRatio),
      pushx: getFixed(-108 * PixelRatio),
      pushy: getFixed(-108 * PixelRatio),
      hurtx: getFixed(-107 * PixelRatio),
      hurty: getFixed(-107 * PixelRatio),
      deadx: getFixed(-105 * PixelRatio),
      deady: getFixed(-104 * PixelRatio)
    },
    2406: {
      name: "shengnv-shatanzhuang",
      label: "沙滩装-女",
      defaultx: getFixed(-123 * PixelRatio),
      defaulty: getFixed(-123 * PixelRatio),
      movex: getFixed(-124 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-129 * PixelRatio),
      hurtx: getFixed(-128 * PixelRatio),
      hurty: getFixed(-128 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    1401: {
      name: "shengnv-xiaojitoushi",
      label: "小鸡头饰",
      defaultx: getFixed(-108 * PixelRatio),
      defaulty: getFixed(-107 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-107 * PixelRatio),
      pushx: getFixed(-112 * PixelRatio),
      pushy: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-112 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-112 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1e4: {
      name: "tushoutao",
      label: "兔手套"
    },
    1001: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1002: {
      name: "shanshanxiaodenglong",
      label: "闪闪小灯笼",
      defaultx: getFixed(-118 * PixelRatio),
      defaulty: getFixed(-115 * PixelRatio),
      movex: getFixed(-118 * PixelRatio),
      movey: getFixed(-115 * PixelRatio),
      pushx: getFixed(-118 * PixelRatio),
      pushy: getFixed(-115 * PixelRatio),
      hurtx: getFixed(-118 * PixelRatio),
      hurty: getFixed(-115 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    4e4: {
      name: "tianshichi",
      label: "天使翅",
      defaultx: WingDefaultX4,
      defaulty: WingDefaultY4
    },
    2e4: {
      name: "nv-tianshiyi",
      label: "天使衣",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movex: getFixed(-125 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /*************** 黑火之子 **************/
    1750: {
      name: "heihuo-ziqiupifeng",
      label: "紫裘披风",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-98 * PixelRatio),
      movey: getFixed(-98 * PixelRatio),
      pushx: getFixed(-99 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-105 * PixelRatio)
    },
    1770: {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-left",
      label: "龙之翼",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-76 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-79 * PixelRatio),
      pushx: getFixed(-79 * PixelRatio),
      pushy: getFixed(-78 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-98 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1770-right": {
      parentName: "heihuo-longzhiyi",
      name: "heihuo-longzhiyi-right",
      label: "龙之翼",
      defaultx: getFixed(-136 * PixelRatio),
      defaulty: getFixed(-137 * PixelRatio),
      movex: getFixed(-136 * PixelRatio),
      movey: getFixed(-138 * PixelRatio),
      pushx: getFixed(-124 * PixelRatio),
      pushy: getFixed(-122 * PixelRatio),
      deadx: getFixed(-82 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    2250: {
      name: "heihuo-lierenzhuang",
      label: "猎人装",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-117 * PixelRatio),
      movey: getFixed(-116 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-117 * PixelRatio),
      deady: getFixed(-116 * PixelRatio)
    },
    2270: {
      name: "heihuo-honglonglinjia",
      label: "红龙鳞甲",
      defaultx: getFixed(-119 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-127 * PixelRatio),
      deady: getFixed(-127 * PixelRatio)
    },
    2350: {
      name: "jianke-huangjinlonglinjia",
      label: "黄金龙鳞甲",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-118 * PixelRatio),
      movex: getFixed(-123 * PixelRatio),
      movey: getFixed(-122 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-118 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    2370: {
      name: "jianke-businiaozhijia",
      label: "不死鸟之甲",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-123 * PixelRatio),
      movex: getFixed(-128 * PixelRatio),
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-121 * PixelRatio),
      deadx: getFixed(-123 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    },
    3e4: {
      name: "nvxia-huangguan",
      label: "皇冠",
      defaultx: HeadDefaultX4,
      defaulty: HeadDefaultY4,
      movex: getFixed(-105 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-107 * PixelRatio),
      pushy: getFixed(-100 * PixelRatio)
    },
    1250: {
      name: "heihuo-zijinjiaokui",
      label: "紫金角盔",
      defaultx: getFixed(-98 * PixelRatio),
      defaulty: getFixed(-97 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-99 * PixelRatio),
      pushx: getFixed(-100 * PixelRatio),
      pushy: getFixed(-98 * PixelRatio),
      hurtx: getFixed(-98 * PixelRatio),
      hurty: getFixed(-97 * PixelRatio),
      deadx: getFixed(-98 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1270: {
      name: "heihuo-honglongkui",
      label: "红龙盔",
      defaultx: getFixed(-88 * PixelRatio),
      defaulty: getFixed(-88 * PixelRatio),
      movex: getFixed(-81 * PixelRatio),
      movey: getFixed(-90 * PixelRatio),
      pushx: getFixed(-85 * PixelRatio),
      pushy: getFixed(-85 * PixelRatio),
      hurtx: getFixed(-93 * PixelRatio),
      hurty: getFixed(-93 * PixelRatio),
      deadx: getFixed(-84 * PixelRatio),
      deady: getFixed(-134 * PixelRatio)
    },
    2750: {
      name: "heihuo-heihuoshouhuan",
      label: "黑火手环",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /********************** 机灵女侠 *********************/
    1150: {
      name: "nvxia-nihongyingluo",
      label: "霓虹缨络",
      defaultx: getFixed(-99 * PixelRatio),
      defaulty: getFixed(-100 * PixelRatio),
      movex: getFixed(-99 * PixelRatio),
      movey: getFixed(-100 * PixelRatio),
      pushx: getFixed(-101 * PixelRatio),
      pushy: getFixed(-102 * PixelRatio),
      hurtx: getFixed(-99 * PixelRatio),
      hurty: getFixed(-100 * PixelRatio),
      deadx: getFixed(-102 * PixelRatio),
      deady: getFixed(-103 * PixelRatio)
    },
    1170: {
      name: "nvxia-jinlian",
      label: "金莲",
      defaultx: getFixed(-93 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-91 * PixelRatio),
      movey: getFixed(-91 * PixelRatio),
      pushx: getFixed(-92 * PixelRatio),
      pushy: getFixed(-93 * PixelRatio),
      hurtx: getFixed(-94 * PixelRatio),
      hurty: getFixed(-94 * PixelRatio),
      deadx: getFixed(-94 * PixelRatio),
      deady: getFixed(-94 * PixelRatio)
    },
    1650: {
      name: "nvxia-yuanyuewandao",
      label: "圆月弯刀",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-119 * PixelRatio),
      pushx: getFixed(-109 * PixelRatio),
      pushy: getFixed(-112 * PixelRatio)
    },
    // 女侠70套
    1670: {
      name: "nvxia-heyeruyi",
      label: "荷叶如意",
      defaultx: getFixed(-81 * PixelRatio),
      defaulty: getFixed(-90 * PixelRatio),
      movex: getFixed(-100 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-95 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio)
    },
    2150: {
      name: "nvxia-nihongcaiyi",
      label: "霓虹彩衣",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-122 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-123 * PixelRatio),
      pushy: getFixed(-125 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2170: {
      name: "nvxia-fengpi",
      label: "凤披",
      defaultx: getFixed(-124 * PixelRatio),
      defaulty: getFixed(-126 * PixelRatio),
      movex: getFixed(-122 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-119 * PixelRatio),
      pushy: getFixed(-120 * PixelRatio),
      deadx: getFixed(-122 * PixelRatio),
      deady: getFixed(-126 * PixelRatio)
    },
    2550: {
      name: "shengnv-huayangjinzhuo",
      label: "花漾金镯",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    2650: {
      name: "nvxia-nihongzhihuan",
      label: "霓虹指环",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    /******************** 少年剑客 *******************/
    1350: {
      name: "jianke-huangjinpanlongkui",
      label: "黄金蟠龙盔",
      defaultx: getFixed(-113 * PixelRatio),
      defaulty: getFixed(-111 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-111 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-117 * PixelRatio)
    },
    1370: {
      name: "jianke-businiaozhikui",
      label: "不死鸟之盔",
      defaultx: getFixed(-110 * PixelRatio),
      defaulty: getFixed(-108 * PixelRatio),
      movex: getFixed(-109 * PixelRatio),
      movey: getFixed(-106 * PixelRatio),
      pushx: getFixed(-113 * PixelRatio),
      pushy: getFixed(-111 * PixelRatio),
      hurtx: getFixed(-113 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-118 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1850: {
      name: "jianke-huangjinyanyuedao",
      label: "黄金偃月刀",
      defaultx: getFixed(-103 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movey: getFixed(-105 * PixelRatio),
      deadx: getFixed(-115 * PixelRatio),
      deady: getFixed(-115 * PixelRatio)
    },
    1870: {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-left",
      label: "不死鸟之翅",
      defaultx: getFixed(-95 * PixelRatio),
      defaulty: getFixed(-94 * PixelRatio),
      movex: getFixed(-101 * PixelRatio),
      movey: getFixed(-101 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-75 * PixelRatio),
      hurtx: getFixed(-85 * PixelRatio),
      hurty: getFixed(-84 * PixelRatio),
      deadx: getFixed(-85 * PixelRatio),
      deady: getFixed(-85 * PixelRatio)
    },
    "1870-right": {
      parentName: "jianke-businiaozhichi",
      name: "jianke-businiaozhichi-right",
      label: "不死鸟之翅",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-138 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-141 * PixelRatio),
      pushy: getFixed(-137 * PixelRatio),
      deadx: getFixed(-153 * PixelRatio),
      deady: getFixed(-153 * PixelRatio)
    },
    2850: {
      name: "jianke-huangjinyoulongwan",
      label: "黄金游龙腕",
      defaultx: BodyDefaultX4,
      defaulty: BodyDefaultY4,
      movey: getFixed(-126 * PixelRatio),
      pushx: getFixed(-126 * PixelRatio),
      pushy: getFixed(-127 * PixelRatio),
      deadx: getFixed(-130 * PixelRatio),
      deady: getFixed(-124 * PixelRatio)
    },
    1280: {
      name: "heihuo-chiyunuding",
      label: "赤羽怒顶",
      defaultx: getFixed(-104 * PixelRatio),
      defaulty: getFixed(-103 * PixelRatio),
      movex: getFixed(-103 * PixelRatio),
      movey: getFixed(-102 * PixelRatio),
      pushx: getFixed(-104 * PixelRatio),
      pushy: getFixed(-103 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-111 * PixelRatio),
      deadx: getFixed(-101 * PixelRatio),
      deady: getFixed(-101 * PixelRatio)
    },
    1780: {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-left",
      label: "火焰翅",
      defaultx: getFixed(-80 * PixelRatio),
      defaulty: getFixed(-77 * PixelRatio),
      movex: getFixed(-80 * PixelRatio),
      movey: getFixed(-77 * PixelRatio),
      pushx: getFixed(-80 * PixelRatio),
      pushy: getFixed(-77 * PixelRatio),
      hurtx: getFixed(-80 * PixelRatio),
      hurty: getFixed(-77 * PixelRatio),
      deadx: getFixed(-80 * PixelRatio),
      deady: getFixed(-77 * PixelRatio)
    },
    "1780-right": {
      parentName: "heihuo-huoyanchi",
      name: "heihuo-huoyanchi-right",
      label: "火焰翅",
      defaultx: getFixed(-132 * PixelRatio),
      defaulty: getFixed(-133 * PixelRatio),
      movex: getFixed(-132 * PixelRatio),
      movey: getFixed(-133 * PixelRatio),
      pushx: getFixed(-132 * PixelRatio),
      pushy: getFixed(-132 * PixelRatio),
      hurtx: getFixed(-132 * PixelRatio),
      hurty: getFixed(-133 * PixelRatio),
      deadx: getFixed(-147 * PixelRatio),
      deady: getFixed(-143 * PixelRatio)
    },
    2280: {
      name: "heihuo-yudiankuangjia",
      label: "御殿狂甲",
      defaultx: getFixed(-111 * PixelRatio),
      defaulty: getFixed(-110 * PixelRatio),
      movex: getFixed(-113 * PixelRatio),
      movey: getFixed(-112 * PixelRatio),
      pushx: getFixed(-111 * PixelRatio),
      pushy: getFixed(-110 * PixelRatio),
      hurtx: getFixed(-111 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-113 * PixelRatio),
      deady: getFixed(-112 * PixelRatio)
    },
    1380: {
      name: "jianke-yeyingxingkui",
      label: "夜映星盔",
      defaultx: getFixed(-106 * PixelRatio),
      defaulty: getFixed(-106 * PixelRatio),
      movex: getFixed(-106 * PixelRatio),
      movey: getFixed(-104 * PixelRatio),
      pushx: getFixed(-106 * PixelRatio),
      pushy: getFixed(-105 * PixelRatio),
      hurtx: getFixed(-106 * PixelRatio),
      hurty: getFixed(-106 * PixelRatio),
      deadx: getFixed(-106 * PixelRatio),
      deady: getFixed(-106 * PixelRatio)
    },
    1880: {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-left",
      label: "夜光背翅",
      defaultx: getFixed(-72 * PixelRatio),
      defaulty: getFixed(-85 * PixelRatio),
      movex: getFixed(-70 * PixelRatio),
      movey: getFixed(-72 * PixelRatio),
      pushx: getFixed(-71 * PixelRatio),
      pushy: getFixed(-71 * PixelRatio),
      hurtx: getFixed(-77 * PixelRatio),
      hurty: getFixed(-71 * PixelRatio),
      deadx: getFixed(-81 * PixelRatio),
      deady: getFixed(-93 * PixelRatio)
    },
    "1880-right": {
      parentName: "jianke-yeguangbeichi",
      name: "jianke-yeguangbeichi-right",
      label: "夜光背翅",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-125 * PixelRatio),
      movex: getFixed(-133 * PixelRatio),
      movey: getFixed(-139 * PixelRatio),
      pushx: getFixed(-129 * PixelRatio),
      pushy: getFixed(-133 * PixelRatio),
      hurtx: getFixed(-48 * PixelRatio),
      hurty: getFixed(-66 * PixelRatio),
      deadx: getFixed(-125 * PixelRatio),
      deady: getFixed(-128 * PixelRatio)
    },
    2380: {
      name: "jianke-yezhanhuanjia",
      label: "夜战幻甲",
      defaultx: getFixed(-117 * PixelRatio),
      defaulty: getFixed(-116 * PixelRatio),
      movex: getFixed(-120 * PixelRatio),
      movey: getFixed(-118 * PixelRatio),
      pushx: getFixed(-117 * PixelRatio),
      pushy: getFixed(-116 * PixelRatio),
      deadx: getFixed(-114 * PixelRatio),
      deady: getFixed(-114 * PixelRatio)
    },
    1180: {
      name: "nvxia-rongxiuqiuguan",
      label: "荣绣裘冠",
      defaultx: getFixed(-89 * PixelRatio),
      defaulty: getFixed(-89 * PixelRatio),
      movex: getFixed(-90 * PixelRatio),
      movey: getFixed(-92 * PixelRatio),
      pushx: getFixed(-93 * PixelRatio),
      pushy: getFixed(-95 * PixelRatio),
      hurtx: getFixed(-107 * PixelRatio),
      hurty: getFixed(-110 * PixelRatio),
      deadx: getFixed(-86 * PixelRatio),
      deady: getFixed(-89 * PixelRatio)
    },
    //荣绣羽翼
    1680: {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-left",
      label: "荣绣羽翼",
      defaultx: getFixed(-67 * PixelRatio),
      defaulty: getFixed(-63 * PixelRatio),
      movex: getFixed(-68 * PixelRatio),
      movey: getFixed(-64 * PixelRatio),
      pushx: getFixed(-67 * PixelRatio),
      pushy: getFixed(-63 * PixelRatio),
      hurtx: getFixed(-67 * PixelRatio),
      hurty: getFixed(-63 * PixelRatio),
      deadx: getFixed(-67 * PixelRatio),
      deady: getFixed(-62 * PixelRatio)
    },
    "1680-right": {
      parentName: "nvxia-rongxiuyuyi",
      name: "nvxia-rongxiuyuyi-right",
      label: "荣绣羽翼",
      defaultx: getFixed(-134 * PixelRatio),
      defaulty: getFixed(-134 * PixelRatio),
      movex: getFixed(-134 * PixelRatio),
      movey: getFixed(-134 * PixelRatio),
      pushx: getFixed(-134 * PixelRatio),
      pushy: getFixed(-134 * PixelRatio),
      deadx: getFixed(-134 * PixelRatio),
      deady: getFixed(-145 * PixelRatio)
    },
    2180: {
      name: "nvxia-rongxiujinfu",
      label: "荣绣锦服",
      defaultx: getFixed(-120 * PixelRatio),
      defaulty: getFixed(-121 * PixelRatio),
      movex: getFixed(-121 * PixelRatio),
      movey: getFixed(-124 * PixelRatio),
      pushx: getFixed(-122 * PixelRatio),
      pushy: getFixed(-123 * PixelRatio),
      hurtx: getFixed(-121 * PixelRatio),
      hurty: getFixed(-122 * PixelRatio),
      deadx: getFixed(-119 * PixelRatio),
      deady: getFixed(-122 * PixelRatio)
    }
  };

  // src/util/res/equipRate/index.ts
  var getRoleEquipInfo = (job, equipId) => {
    switch (job) {
      case 2 /* HEIHUO */:
        return HeihuoEquipRes[equipId];
      case 3 /* JIANKE */:
        return JiankeEquipRes[equipId];
      case 0 /* SHENGNV */:
        return ShengnvEquipRes[equipId];
      case 1 /* NVXIA */:
        return NvxiaEquipRes[equipId];
    }
  };

  // src/entity/role/Role.ts
  var { regClass: regClass13 } = Laya;
  var Role = class extends Animal {
    constructor() {
      super();
      // 点券
      this.speed = 0;
      this.equipMap = /* @__PURE__ */ new Map();
      this.bloodS = new Blood();
      // 血条
      this.subBlood = new SubBlood();
      this.nameS = new Laya.Text();
      // 名字
      this.bottomS = new Laya.Sprite();
      // 脚底光环
      this.entityS = new Laya.Sprite();
      // 实际玩家大小，参与碰撞检测等
      this.actions = [];
      // 玩家指令列表
      this.boxService = BoxService.getInstance();
      this.pushedOffest = 25 * PixelRatio;
      this.gaming = false;
      // public deadAni = new Laya.Animation()
      this.rebirthAni = new Laya.Animation();
      this.missAni = new Laya.Animation();
      this.missImg = new Laya.Image(`${ServiceIp}images/game/gameAtlas/player-miss-static.png`);
      this.chatDialog = new Laya.Sprite();
      this.zhaohunlingUsing = false;
      this.tw = new Laya.Tween();
      this.equipState = "default" /* default */;
      // public pushing = false
      // public stateHurting = false
      // public stateDeading = false
      this.moveEndTimer = null;
      this.icedFrameCount = 280;
      this.flyFrameCount = 280;
      this.deadFrameCount = 160;
      this.firedFrameCount = 35;
      this.hurtFrameCount = 8;
      this.pushFrameCount = 10;
      this.missFrameCount = 50;
      this.bloodShowFrameCount = 30;
      this.pushing = false;
      // 玩家配置操作
      this.gameConfig = {};
      // public optType = 1
      // public keyDown = KeyCode.DOWN2
      // public keyUp = KeyCode.UP2
      // public keyLeft = KeyCode.LEFT2
      // public keyRight = KeyCode.RIGHT2
      // public keyPush = KeyCode.PUSH2
      // public keyWeakpush = KeyCode.WEAKPUSH2
      // public keyChange = KeyCode.CHANGE2
      // public keyRebirth = KeyCode.REBIRTH
      this.keyDouble = 50 /* DOUBLE */;
      this.rebirthRequest = false;
      this.doubleRequest = false;
      this.isVip = 0;
      this.drawCallOptimize = true;
    }
    init() {
      let playerData = PlayerLevelData[this.level];
      this.props = {
        hp: playerData.hp || 100,
        mp: 0,
        power: playerData.power || 25,
        killValue: 0,
        luckyValue: 0,
        speed: 5
      };
      this.speed = getFixed(this.props.speed * BASE_SPEED);
      this.initEntity();
      this.initBottom();
      this.initWing();
      this.initBody();
      this.initHead();
      this.initNameS();
      this.renderChatDialog();
    }
    initFsmCB() {
      this.headEquip && this.headEquip.initFsmCB();
      this.bodyEquip && this.bodyEquip.initFsmCB();
      this.wingEquip && this.wingEquip.initFsmCB();
      this.wingEquip2 && this.wingEquip2.initFsmCB();
    }
    initFsm() {
      this.fsm = new RoleStateMachine();
      this.fsm.init(this, this.id);
      this.fsm.setRemoveCB(() => {
        this.removeChild(this.wingEquip);
        this.wingEquip2 && this.removeChild(this.wingEquip2);
        this.removeChild(this.bodyEquip);
        this.removeChild(this.headEquip);
      });
      this.state = "default" /* default */;
    }
    setOptConfig(optType, optCode) {
      this.gameConfig.optType = optType;
      if (optType === 0) {
        this.gameConfig.keyDown = 83 /* DOWN */;
        this.gameConfig.keyUp = 87 /* UP */;
        this.gameConfig.keyLeft = 65 /* LEFT */;
        this.gameConfig.keyRight = 68 /* RIGHT */;
        this.gameConfig.keyPush = 74 /* PUSH */;
        this.gameConfig.keyWeakpush = 75 /* WEAKPUSH */;
        this.gameConfig.keyRebirth = 49 /* REBIRTH */;
        this.gameConfig.keyDouble = 50 /* DOUBLE */;
        this.gameConfig.keyChange = 76 /* CHANGE */;
      } else if (optType === 1) {
        this.gameConfig.keyDown = 40 /* DOWN2 */;
        this.gameConfig.keyUp = 38 /* UP2 */;
        this.gameConfig.keyLeft = 37 /* LEFT2 */;
        this.gameConfig.keyRight = 39 /* RIGHT2 */;
        this.gameConfig.keyPush = 32 /* PUSH2 */;
        this.gameConfig.keyWeakpush = 70 /* WEAKPUSH2 */;
        this.gameConfig.keyChange = 68 /* CHANGE2 */;
        this.gameConfig.keyRebirth = 49 /* REBIRTH */;
        this.gameConfig.keyDouble = 50 /* DOUBLE */;
      } else if (optType === 2 && optCode) {
        if (optCode.keyDown)
          this.gameConfig.keyDown = optCode.keyDown;
        if (optCode.keyUp)
          this.gameConfig.keyUp = optCode.keyUp;
        if (optCode.keyLeft)
          this.gameConfig.keyLeft = optCode.keyLeft;
        if (optCode.keyRight)
          this.gameConfig.keyRight = optCode.keyRight;
        if (optCode.keyPush)
          this.gameConfig.keyPush = optCode.keyPush;
        if (optCode.keyWeakpush)
          this.gameConfig.keyWeakpush = optCode.keyWeakpush;
        if (optCode.keyChange)
          this.gameConfig.keyChange = optCode.keyChange;
        if (optCode.keyRebirth)
          this.gameConfig.keyRebirth = optCode.keyRebirth;
        if (optCode.keyDouble)
          this.gameConfig.keyDouble = optCode.keyDouble;
      }
    }
    setBag(list2) {
      for (let i = 0; i < list2.length; i++) {
        let goods = list2[i];
        while (goods.count > GoodsGroupCount) {
          list2.unshift(__spreadProps(__spreadValues({}, goods), { count: GoodsGroupCount }));
          goods.count -= GoodsGroupCount;
        }
      }
      list2.sort((a, b) => a.type - b.type);
      this.bag = list2;
    }
    setEquipMap(list2) {
      list2.forEach((item) => {
        this.equipMap.set(item.goodsId, item);
      });
    }
    updateRoleEquip(part) {
      switch (part) {
        case "head":
          this.removeChild(this.headEquip);
          this.initHead();
          break;
        case "body":
          this.removeChild(this.bodyEquip);
          this.initBody();
          break;
        case "wing":
          this.removeChild(this.wingEquip);
          this.wingEquip2 && this.removeChild(this.wingEquip2);
          this.initWing();
        case "hand":
          this.removeChild(this.handEquip);
          this.initHand();
      }
    }
    getRoleImage() {
      var _a;
      let roleImg = new Laya.Sprite();
      let wingId = this.wing ? this.wing.goodsType || this.wing.type : 0;
      let wingEquip = new Equip(wingId, getRoleEquipInfo(this.job, wingId));
      roleImg.addChild(wingEquip);
      if ((_a = this.wing) == null ? void 0 : _a.double) {
        let wingEquip2 = new Equip(wingId, getRoleEquipInfo(this.job, wingId + "-right"));
        roleImg.addChild(wingEquip2);
      }
      let headId = this.head ? this.head.goodsType || this.head.type : 0;
      let headEquip = new Equip(headId, getRoleEquipInfo(this.job, headId));
      roleImg.addChild(headEquip);
      let bodyId = this.body ? this.body.goodsType || this.body.type : 0;
      let bodyEquip = new Equip(bodyId, getRoleEquipInfo(this.job, bodyId));
      roleImg.addChild(bodyEquip);
      return roleImg;
    }
    getBag() {
      return this.bag;
    }
    addProps(equip) {
      if (equip.hp || equip.jinglianHp || equip.qianghuaHp) {
        this.props.hp += getEquipHp(equip);
      }
      if (equip.mp || equip.jinglianMp || equip.qianghuaMp) {
        this.props.mp += getEquipMp(equip);
      }
      if (equip.power || equip.jinglianPower || equip.qianghuaPower) {
        this.props.power += getEquipPower(equip);
      }
      if (equip.speed) {
        this.props.speed += equip.speed;
        this.speed = getFixed(this.props.speed * BASE_SPEED);
      }
      if (equip.killValue || equip.qianghuaKillValue) {
        this.props.killValue += getEquipKillValue(equip);
      }
      if (equip.luckyValue || equip.qianghuaLuckyValue) {
        this.props.luckyValue += getEquipLuckyValue(equip);
      }
    }
    subProps(equip) {
      if (equip.hp || equip.jinglianHp || equip.qianghuaHp) {
        this.props.hp -= getEquipHp(equip);
      }
      if (equip.mp || equip.jinglianMp || equip.qianghuaMp) {
        this.props.mp -= getEquipMp(equip);
      }
      if (equip.power || equip.jinglianPower || equip.qianghuaPower) {
        this.props.power -= getEquipPower(equip);
      }
      if (equip.speed) {
        this.props.speed -= equip.speed;
        this.speed = getFixed(this.props.speed * BASE_SPEED);
      }
      if (equip.killValue || equip.qianghuaKillValue) {
        this.props.killValue -= getEquipKillValue(equip);
      }
      if (equip.luckyValue || equip.qianghuaLuckyValue) {
        this.props.luckyValue -= getEquipLuckyValue(equip);
      }
    }
    getGoodsInfo(goodsId, goodsType) {
      return goodsId === goodsType ? __spreadProps(__spreadValues({}, GoodsInfo[goodsType]), { goodsId: goodsType, goodsType }) : __spreadValues(__spreadValues({}, GoodsInfo[goodsType]), this.equipMap.get(goodsId));
    }
    getEquip(equipId) {
      let equip = this.equipMap.get(equipId);
      if (equip) {
        return __spreadValues(__spreadValues({}, GoodsInfo[equip.goodsType]), equip);
      } else {
        return __spreadProps(__spreadValues({}, GoodsInfo[equipId]), { goodsId: equipId, goodsType: equipId });
      }
    }
    setEquip(equipId, equip) {
      this.equipMap.set(equipId, equip);
    }
    getGoodsCount(type) {
      let list2 = this.bag.filter((item) => item.type === type);
      let count = 0;
      list2.forEach((item) => {
        count += item.count;
      });
      return count;
    }
    useGoods(id, count) {
      let goodsIndex = this.bag.findLastIndex((item) => item.id === id);
      if (goodsIndex === -1)
        return false;
      let goods = this.bag[goodsIndex];
      if (goods.count < count) {
        this.bag.splice(goodsIndex, 1);
        let goodsIndex2 = this.bag.findLastIndex((item) => item.id === id);
        if (goodsIndex2 === -1)
          return false;
        count -= goods.count;
        this.bag[goodsIndex2].count -= count;
      } else {
        goods.count -= count;
        if (goods.count === 0) {
          this.bag.splice(goodsIndex, 1);
        }
      }
    }
    addGoods(id, type, count = 1) {
      if (!id)
        id = type;
      switch (id) {
        case 1:
          break;
        case 2:
          this.gold += 1;
          break;
        case 3:
          this.gold += 5;
          break;
        default:
          if (!this.bag)
            return;
          let goods = this.bag.find((item) => item.id === id && item.count < GoodsGroupCount);
          if (goods) {
            goods.count += count;
          } else {
            this.bag.push({ id, type, count });
            this.bag.sort((a, b) => a.type - b.type);
          }
      }
    }
    // stateAniEnd (state: IEntityState) {
    //     if (state === RoleState.fired) {
    //         this.setStateDefault()
    //         this.removeFired()
    //     }
    // }
    setStateDefault() {
      this.state = "default" /* default */;
      this.setEquipState("default" /* default */);
    }
    onDestroy() {
      super.onDestroy();
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickDoubleExp);
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
    }
    updateExpAndLevel(exp, level) {
      this.exp = exp;
      this.level = level;
    }
    playLinghun() {
      if (this.contains(this.bloodS)) {
        this.removeChild(this.bloodS);
      }
      if (this.contains(this.baohuzhaoAni)) {
        this.removeChild(this.baohuzhaoAni);
      }
      startTickTask("flyFrameCount", this, this.flyFrameCount, () => {
        this && this.fly();
      });
    }
    initPos(row, col) {
      this.posX = this.x;
      this.posY = this.y;
      this.row = row;
      this.zOrder = this.row;
      this.col = col;
    }
    initEntity() {
      this.entityS.size(34 * PixelRatio, 22 * PixelRatio);
      this.entityS.pos((GridWidth - this.entityS.width) / 2, (GridWidth - this.entityS.height) / 2);
      this.entityS.loadImage(`${ServiceIp}images/player/other/shadow.png`);
      this.addChild(this.entityS);
    }
    initBottom() {
      this.bottomS.loadImage(`${ServiceIp}images/player/other/player-halo${this.teamId}.png`);
      this.bottomS.size(ResRate["player_bottom"].width, ResRate["player_bottom"].height);
      this.bottomS.pos(-(ResRate["player_bottom"].width - GridWidth) / 2, -(ResRate["player_bottom"].height - GridHeight) / 2);
      this.addChild(this.bottomS);
    }
    initBody() {
      if (this.body) {
        let bodyId = this.body ? this.body.goodsType || this.body.type : 0;
        this.bodyEquip = new Equip(bodyId, getRoleEquipInfo(this.job, bodyId));
        this.bodyEquip.zOrder = 2;
        this.addChild(this.bodyEquip);
      }
    }
    initWing() {
      var _a;
      if (this.wing) {
        let wingId = this.wing ? this.wing.goodsType || this.wing.type : 0;
        this.wingEquip = new Equip(wingId, getRoleEquipInfo(this.job, wingId));
        this.wingEquip.zOrder = 1;
        this.addChild(this.wingEquip);
        if ((_a = this.wing) == null ? void 0 : _a.double) {
          this.wingEquip2 = new Equip(wingId, getRoleEquipInfo(this.job, wingId + "-right"));
          this.wingEquip2.zOrder = 1;
          this.addChild(this.wingEquip2);
        }
      }
    }
    initHand() {
    }
    initHead() {
      if (this.head) {
        let headId = this.head ? this.head.goodsType || this.head.type : 0;
        this.headEquip = new Equip(headId, getRoleEquipInfo(this.job, headId));
        this.addChild(this.headEquip);
        this.headEquip.zOrder = 3;
      }
    }
    initBlood(val) {
      if (this.gaming) {
        this.removeChild(this.bloodS);
        this.bloodS.setTotal(this.props.hp);
        this.bloodS.zOrder = 10;
        this.hp = val || this.props.hp;
        this.setCurrentBlood();
        this.bloodS.x = -ResRate["blood"].x;
        this.bloodS.y = -ResRate["blood"].y;
        this.addChild(this.bloodS);
      }
    }
    handleClickDoubleExp(e) {
      if (e.keyCode === this.gameConfig.keyDouble || e.keyCode === this.keyDouble) {
        this.doubleExp();
      }
    }
    doubleExp() {
      if (this.doubleRequest)
        return;
      this.removeChild(this.doubleTip);
      this.doubleRequest = true;
      request("area.playerHandler.useDoubleExp", null, (res) => {
        this.doubleRequest = false;
      });
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickDoubleExp);
    }
    handleClickRebirth(e) {
      if (this.zhaohunlingUsing)
        return;
      if (e.keyCode === 49) {
        this.useRebirth();
      }
    }
    useRebirth() {
      if (this.rebirthRequest)
        return;
      this.zhaohunlingUsing = true;
      this.removeChild(this.rebirthTip);
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
      this.rebirthRequest = true;
      request("area.playerHandler.useRebirth", null, (res) => {
        this.rebirthRequest = false;
        if (res.code === 200) {
          this.zhaohunlingUsing = false;
        }
      });
    }
    renderRole(data) {
      if (GamePanel.instance.jiesuan && this.id === GamePanel.instance.role.id) {
        if (!this.doubleTip) {
          this.doubleTip = new Laya.Image(`${ServiceIp}images/game/gameAtlas/double-exp-free.png`);
          this.doubleTip.size(this.doubleTip.width * PixelRatio, this.doubleTip.height * PixelRatio);
          this.doubleTip.pos(-50 * PixelRatio, -100 * PixelRatio);
          this.addChild(this.doubleTip);
          Laya.stage.on(Laya.Event.KEY_DOWN, this, this.handleClickDoubleExp);
        }
      }
      if (data.state === "linghun" /* linghun */ && this.id === GamePanel.instance.role.id && !this.zhaohunlingUsing) {
        if (!this.rebirthTip) {
          this.rebirthTip = new Laya.Image(`${ServiceIp}images/game/gameAtlas/rebirth-zhaohunling.png`);
          this.rebirthTip.size(this.rebirthTip.width * PixelRatio, this.rebirthTip.height * PixelRatio);
          this.rebirthTip.pos(-50 * PixelRatio, -100 * PixelRatio);
          this.addChild(this.rebirthTip);
          Laya.stage.on(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
        } else {
          this.addChild(this.rebirthTip);
          Laya.stage.on(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
        }
      }
      if (data.state === "dead" /* dead */ && this.hp <= 0 || data.state === "linghun" /* linghun */)
        return;
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
      if (data.row !== this.row) {
        this.zOrder = data.row;
      }
      this.row = data.row;
      this.col = data.col;
      if (data.missing) {
        this.renderMiss(data);
      }
      if (!data.hurting && this.contains(this.baohuzhaoAni)) {
        this.removeChild(this.baohuzhaoAni);
      }
      if (this.hp !== data.hp) {
        this.renderHp(data);
        this.hp = data.hp;
      }
      if (data.direction && data.direction !== this.direction) {
        this.changeDirection(data.direction);
      }
      this.renderPosition(data, data.pos);
      if (this.row !== data.row) {
        this.zOrder = data.row;
      }
      if (data.state === "iced" /* iced */ || data.state === "fired" /* fired */) {
        this.setAction(data.state);
      }
    }
    renderHp(data) {
      this.setBlood(data.hp);
      if (data.hp <= 0) {
        this.renderSubBlood(data, Math.ceil(this.hp - data.hp));
        return;
      }
      if (data.hp < this.hp) {
        this.renderSubBlood(data, Math.ceil(this.hp - data.hp));
      } else {
      }
    }
    // public renderHp (data: IActor) {
    //     // console.log('renderHp', value, this.hp)
    //     this.setBlood(data.hp)
    //     if (data.hp <= 0) {
    //         this.renderSubBlood(data, Math.ceil((this.hp - data.hp) / 25 * 33))
    //         // this.renderSubBlood(Math.ceil(this.hp - data.hp))
    //         this.dead()
    //         return
    //     }
    //     if (data.hp < this.hp) {
    //         this.renderSubBlood(data, Math.ceil((this.hp - data.hp) / 25 * 33))
    //         // this.renderSubBlood(Math.ceil(this.hp - data.hp))
    //         this.playHurt(data)
    //     } else {
    //         // console.log('renderh value > this.hp')
    //         // this.setStateDefault()
    //     }
    // }
    renderMiss(data) {
      if (data.missing && this.contains(this.missAni))
        return;
      data.missing = false;
      this.missAni.source = `${ServiceIp}images/game/other/player-miss.atlas`;
      this.missAni.pos(-33 * PixelRatio, -110 * PixelRatio);
      this.missAni.scale(PixelRatio, PixelRatio);
      this.missAni.interval = 150;
      this.missAni.play(0, false);
      this.addChild(this.missAni);
      startTickTask("missFrameCount", this, this.missFrameCount, () => {
        let roleData = this.getRoleData();
        if (roleData) {
          roleData.missing = false;
          roleData.hurting = false;
        }
        this.removeChild(this.missAni);
      });
    }
    renderSubBlood(data, val) {
      this.subBlood.create(val, data.isStriked ? "player" : "");
      this.subBlood.pos(0, 0);
      this.subBlood.scale(0.2, 0.2);
      this.addChild(this.subBlood);
      Laya.Tween.to(this.subBlood, { x: 17 * PixelRatio, y: -110 * PixelRatio, scaleX: 1, scaleY: 1 }, 120, Laya.Ease.linearOut);
      startTickTask("bloodShowFrameCount", this, this.bloodShowFrameCount, () => {
        this.subBlood.destroy();
        this.removeChild(this.subBlood);
      });
    }
    setBlood(value) {
      this.bloodS.setCurrent(Math.max(0, value));
    }
    notMove(data) {
      return (
        /*this.equipState === EquipAction.push ||*/
        this.pushing || data.state === "iced" /* iced */ || this.equipState === "hurt" /* hurt */ || this.equipState === "dead" /* dead */ || this.state !== "default" /* default */
      );
    }
    renderPosition(data, position) {
      if (this.notMove(data))
        return;
      if (this.targetPos.x !== position.x || this.targetPos.y !== position.y) {
        this.tw.clear();
        if (this.equipState !== "move" /* move */) {
          this.setEquipState("move" /* move */);
        }
        this.pos(this.targetPos.x, this.targetPos.y);
        this.targetPos.x = position.x;
        this.targetPos.y = position.y;
        this.tw.to(this, { x: position.x, y: position.y }, OneFrameTime, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
        }));
      }
    }
    setTeamId(teamId) {
      this.teamId = teamId;
      this.bloodS.setTeam(teamId);
      this.bottomS.loadImage(`${ServiceIp}images/player/other/player-halo${this.teamId}.png`);
    }
    renderChatDialog() {
      this.chatDialog.loadImage(`${ServiceIp}images/player/other/playerChatDialog.png`);
      this.chatDialog.size(115 * PixelRatio, 68 * PixelRatio);
      this.chatDialog.pos(-30 * PixelRatio, -115 * PixelRatio);
      this.chatDialog.zOrder = MaxZOrder;
    }
    showChatDialog(text) {
      if (chatChannel.getChannel() !== 2 /* room */)
        return;
      this.chatDialog.removeChildren();
      let msg = new Laya.Text();
      msg.pos(7 * PixelRatio, 7 * PixelRatio);
      msg.size(107 * PixelRatio, 64 * PixelRatio);
      msg.text = text;
      msg.color = "#000000";
      msg.wordWrap = true;
      msg.fontSize = 12 * PixelRatio;
      msg.overflow = "hidden";
      this.chatDialog.addChild(msg);
      this.addChild(this.chatDialog);
      setTimeout(() => {
        this.removeChild(this.chatDialog);
      }, 5e3);
    }
    setGaming(flag) {
      if (flag !== this.gaming) {
        this.gaming = flag;
        if (this.gaming) {
          this.initNameS();
          this.initBlood();
        } else {
          this.initNameS();
          this.removeChild(this.bloodS);
        }
      }
    }
    setCurrentBlood() {
      this.bloodS.setCurrent(Math.max(0, this.hp));
    }
    initNameS() {
      this.removeChild(this.nameS);
      this.nameS.width = 130 * PixelRatio;
      this.nameS.align = "center";
      this.nameS.overflow = "hidden";
      this.nameS.text = this.name;
      this.nameS.color = "white";
      this.nameS.font = "宋体";
      this.nameS.fontSize = 16 * PixelRatio;
      this.nameS.strokeColor = TeamColor[this.teamId];
      this.nameS.stroke = 3 * PixelRatio;
      this.nameS.x = -(this.nameS.width - GridWidth) / 2;
      this.nameS.y = -ResRate["blood"].y + (this.gaming ? -20 * PixelRatio : -10 * PixelRatio);
      this.nameS.zOrder = 11;
      this.addChild(this.nameS);
    }
    changeDirection(direction) {
      if (this.direction === direction)
        return;
      this.direction = direction;
      switch (this.direction) {
        case 1 /* LEFT */:
          if (this.wingEquip) {
            this.wingEquip.zOrder = 3;
          }
          if (this.wingEquip2) {
            this.wingEquip2.zOrder = 3;
          }
          if (this.headEquip) {
            this.headEquip.zOrder = 2;
          }
          if (this.bodyEquip) {
            this.bodyEquip.zOrder = 1;
          }
          break;
        case 2 /* RIGHT */:
          if (this.wingEquip) {
            this.wingEquip.zOrder = 3;
          }
          if (this.wingEquip2) {
            this.wingEquip2.zOrder = 3;
          }
          if (this.headEquip) {
            this.headEquip.zOrder = 2;
          }
          if (this.bodyEquip) {
            this.bodyEquip.zOrder = 1;
          }
          break;
        case 3 /* UP */:
          if (this.wingEquip) {
            this.wingEquip.zOrder = 3;
          }
          if (this.wingEquip2) {
            this.wingEquip2.zOrder = 3;
          }
          if (this.bodyEquip) {
            this.bodyEquip.zOrder = 1;
          }
          if (this.headEquip) {
            this.headEquip.zOrder = 2;
          }
          break;
        case 4 /* DOWN */:
          if (this.headEquip) {
            this.headEquip.zOrder = 3;
          }
          if (this.bodyEquip) {
            this.bodyEquip.zOrder = 2;
          }
          if (this.wingEquip) {
            this.wingEquip.zOrder = 1;
          }
          if (this.wingEquip2) {
            this.wingEquip2.zOrder = 1;
          }
          break;
      }
      this.setEquipDirection();
    }
    getRect(roleData) {
      if (!roleData) {
        roleData = this.getRoleData();
      }
      if (!roleData)
        return;
      return { width: this.entityS.width, height: this.entityS.height, x: getFixed(roleData.pos.x + this.entityS.x), y: getFixed(roleData.pos.y + this.entityS.y) };
    }
    // TODO 此方法将5 * AllowOffset改为了 5 * 1，为了性能将AllowOffset = 0
    push(data, direction) {
      if (this.isDead() || data.state === "iced" /* iced */ || data.state === "fired" /* fired */ || data.equipState === "hurt" /* hurt */)
        return;
      let grid = null;
      let box = null;
      switch (direction) {
        case 1 /* LEFT */:
          grid = axisToGrid(this.posX - this.pushedOffest, this.posY + this.entityS.width / 2);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX - this.pushedOffest, this.posY + PixelRatio);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX - this.pushedOffest, this.posY + this.entityS.width - PixelRatio);
          }
          break;
        case 2 /* RIGHT */:
          grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + this.entityS.width / 2);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + PixelRatio);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + this.entityS.width - PixelRatio);
          }
          break;
        case 3 /* UP */:
          grid = axisToGrid(this.posX + this.entityS.width / 2, this.posY - this.pushedOffest);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + PixelRatio, this.posY - this.pushedOffest);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width - PixelRatio, this.posY - this.pushedOffest);
          }
          break;
        case 4 /* DOWN */:
          grid = axisToGrid(this.posX + this.entityS.width / 2, this.posY + this.entityS.width + this.pushedOffest);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + PixelRatio, this.posY + this.entityS.width + this.pushedOffest);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width - PixelRatio, this.posY + this.entityS.width + this.pushedOffest);
          }
          break;
      }
      if (!grid)
        return;
      this.setEquipState("push" /* push */);
      box = GamePanel.instance.grid[grid.row][grid.col];
      return box;
    }
    weakpush(data, direction) {
      if (this.isDead() || data.state === "iced" /* iced */ || data.state === "fired" /* fired */)
        return;
      let grid = null;
      let box = null;
      switch (direction) {
        case 1 /* LEFT */:
        case 1 /* LEFT */:
          grid = axisToGrid(this.posX - this.pushedOffest, this.posY + this.entityS.width / 2);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX - this.pushedOffest, this.posY + PixelRatio);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX - this.pushedOffest, this.posY + this.entityS.width - PixelRatio);
          }
          break;
        case 2 /* RIGHT */:
          grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + this.entityS.width / 2);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + PixelRatio);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width + this.pushedOffest, this.posY + this.entityS.width - PixelRatio);
          }
          break;
        case 3 /* UP */:
          grid = axisToGrid(this.posX + this.entityS.width / 2, this.posY - this.pushedOffest);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + PixelRatio, this.posY - this.pushedOffest);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width - PixelRatio, this.posY - this.pushedOffest);
          }
          break;
        case 4 /* DOWN */:
          grid = axisToGrid(this.posX + this.entityS.width / 2, this.posY + this.entityS.width + this.pushedOffest);
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + PixelRatio, this.posY + this.entityS.width + this.pushedOffest);
          }
          if (!GamePanel.instance.grid[grid.row][grid.col]) {
            grid = axisToGrid(this.posX + this.entityS.width - PixelRatio, this.posY + this.entityS.width + this.pushedOffest);
          }
          break;
      }
      if (!grid)
        return;
      box = GamePanel.instance.grid[grid.row][grid.col];
      return box;
    }
    playDead() {
      if (this.headEquip) {
        this.headEquip.zOrder = 3;
      }
      if (this.bodyEquip) {
        this.bodyEquip.zOrder = 2;
      }
      if (this.wingEquip) {
        this.wingEquip.zOrder = 1;
      }
      if (this.wingEquip2) {
        this.wingEquip2.zOrder = 1;
      }
      this.setEquipState("dead" /* dead */);
      let name = RoleJobName[this.job];
      playSound(`${ServiceIp}sound/${name}-dead.wav`);
    }
    playHurt(data) {
      if (GamePanel.instance.role.id === this.id) {
        request("area.playerHandler.hurt", { h: this.props.hp, k: this.props.killValue });
      }
      this.setEquipState("hurt" /* hurt */);
      this.initBaohuzhao();
      let name = RoleJobName[this.job];
      playSound(`${ServiceIp}sound/${name}-hurt.wav`);
    }
    playMove() {
      this.bodyEquip && this.bodyEquip.setAction("move" /* move */);
      this.headEquip && this.headEquip.setAction("move" /* move */);
      this.wingEquip && this.wingEquip.setAction("move" /* move */);
      if (this.wingEquip2) {
        this.wingEquip2.setAction("move" /* move */);
      }
    }
    playDefault(diretion) {
      this.bodyEquip && this.bodyEquip.setAction("default" /* default */);
      this.headEquip && this.headEquip.setAction("default" /* default */);
      this.wingEquip && this.wingEquip.setAction("default" /* default */);
      if (this.wingEquip2) {
        this.wingEquip2.setAction("default" /* default */);
      }
    }
    setEquipDirection() {
      this.bodyEquip && this.bodyEquip.setDirection(this.direction);
      this.headEquip && this.headEquip.setDirection(this.direction);
      this.wingEquip && this.wingEquip.setDirection(this.direction);
      if (this.wingEquip2) {
        this.wingEquip2.setDirection(this.direction);
      }
    }
    dead() {
      startTickTask("deadFrameCount", this, this.deadFrameCount, () => {
        let data = this.getRoleData();
        if (!data)
          return;
        data.state = "linghun" /* linghun */;
        this.setAction(data.state);
        this.playLinghun();
      });
      this.playDead();
    }
    fly() {
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
      let roleData = this.getRoleData();
      if (!roleData || roleData.state !== "linghun" /* linghun */)
        return;
      roleData.state = "dead" /* dead */;
      Laya.Tween.to(this, { x: DeviceWidth, y: DeviceHeight }, 1e3, null);
      setTimeout(() => {
        var _a;
        (_a = this.parent) == null ? void 0 : _a.removeChild(this);
      }, 1e3);
      playSound(`${ServiceIp}sound/dead-fly.wav`);
      GamePanel.instance.removeFromMoveGrid(roleData.row, roleData.col, this);
      if (this.isSelf()) {
        request("area.roomHandler.playerDead", null);
      }
    }
    setEquipState(state) {
      this.equipState = state;
      this.wingEquip && this.wingEquip.setAction(state);
      if (this.wingEquip2) {
        this.wingEquip2.setAction(state);
      }
      this.headEquip && this.headEquip.setAction(state);
      this.bodyEquip && this.bodyEquip.setAction(state);
    }
    isSelf() {
      return this.id === GamePanel.instance.role.id;
    }
    playIced() {
      playSound(`${ServiceIp}sound/iced.wav`);
    }
    setAction(state) {
      if (this.state === state)
        return;
      this.state = state;
    }
    initBaohuzhao() {
      this.baohuzhaoAni.source = `${ServiceIp}images/player/baohuzhao.atlas`;
      this.baohuzhaoAni.x = ResRate["baohuzhao"].x;
      this.baohuzhaoAni.y = ResRate["baohuzhao"].y;
      this.baohuzhaoAni.scale(PixelRatio, PixelRatio);
      this.baohuzhaoAni.interval = 100;
      this.baohuzhaoAni.play(0, true);
      this.addChild(this.baohuzhaoAni);
    }
    removeIced(data) {
      this.addChild(this.wingEquip);
      if (this.wingEquip2) {
        this.addChild(this.wingEquip2);
      }
      this.addChild(this.bodyEquip);
      this.addChild(this.headEquip);
      this.removeChildByName("iced");
      this.setStateDefault();
    }
    removeFired() {
      this.addChild(this.wingEquip);
      if (this.wingEquip2) {
        this.addChild(this.wingEquip2);
      }
      this.addChild(this.bodyEquip);
      this.addChild(this.headEquip);
      this.removeChildByName("fired");
    }
    initRebirthAni() {
      this.rebirthAni.source = `${ServiceIp}images/player/rebirth.atlas`;
      this.rebirthAni.x = ResRate["rebirth"].x;
      this.rebirthAni.y = ResRate["rebirth"].y;
      this.rebirthAni.scale(PixelRatio, PixelRatio);
      this.rebirthAni.interval = 150;
      this.rebirthAni.play(0, false);
      this.addChild(this.rebirthAni);
      this.rebirthAni.once(Laya.Event.COMPLETE, this, () => {
        this.removeChild(this.rebirthAni);
      });
    }
    rebirth(data) {
      Laya.stage.off(Laya.Event.KEY_DOWN, this, this.handleClickRebirth);
      if (this.contains(this.rebirthTip)) {
        this.removeChild(this.rebirthTip);
      }
      let name = RoleJobName[this.job];
      playSound(`${ServiceIp}sound/${name}-rebirth.wav`);
      this.removeChildByName("linghun");
      this.initBlood(data.hp);
      this.addChild(this.wingEquip);
      if (this.wingEquip2) {
        this.addChild(this.wingEquip2);
      }
      this.addChild(this.bodyEquip);
      this.addChild(this.headEquip);
      this.direction = 4 /* DOWN */;
      this.setStateDefault();
      this.initRebirthAni();
    }
    canRebirth() {
      return true;
    }
    onEnable() {
    }
    onUpdate() {
    }
    onTriggerEnter() {
    }
    getRoleData() {
      return StateService.getInstance().state.players.find((item) => item.id === this.id);
    }
  };
  Role = __decorateClass([
    regClass13("m2JlFQBTRb-7P1Ups9ilWg")
  ], Role);

  // src/service/roleService.ts
  var RoleService = class _RoleService {
    constructor() {
      this.roleList = [];
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _RoleService();
      }
      return this.instance;
    }
    initRoleList(list2) {
      this.roleList = list2;
    }
    // public addRole (role: Role) {
    //     this.roleList.push(this.transferRole(role))
    // }
    initRole(role) {
      this.role = this.transferRole(role);
      GameConfig.startMusic = this.role.gameConfig.startMusic;
      if (!GameConfig.startMusic) {
        stopMusic();
      }
    }
    initAndAddRole(role) {
      this.initRole(role);
    }
    getRoleById(id) {
      return this.roleList.find((item) => item.id === id);
    }
    transferRole(role) {
      let result = new Role();
      result["id"] = role.id;
      result["name"] = role.name;
      result["job"] = role.job;
      result["sex"] = role.sex;
      result["exp"] = role.exp;
      result["level"] = role.level;
      result["gold"] = role.gold;
      result["youxibi"] = role.youxibi;
      result["dianquan"] = role.dianquan;
      result["roomId"] = role.roomId;
      result["hand"] = role.hand;
      result["body"] = role.body;
      result["head"] = role.head;
      result["wing"] = role.wing;
      result["mapId"] = role.mapId;
      result["status"] = role.status;
      result["isReady"] = role.isReady;
      result["teamId"] = role.teamId;
      result.gameConfig = role.gameConfig || { optType: 1, startHandle: 1, startMusic: 1 };
      result["accountStatus"] = role.accountStatus;
      result["deadline"] = role.deadline;
      result["isVip"] = role.isVip;
      if (role.equipList) {
        result.setEquipMap(role.equipList);
      }
      if (role.headId) {
        let equip = result.equipMap.get(role.headId);
        result.head = equip ? __spreadValues(__spreadValues({}, GoodsInfo[equip.goodsType]), equip) : GoodsInfo[role.headId];
      }
      if (role.bodyId) {
        let equip = result.equipMap.get(role.bodyId);
        result.body = equip ? __spreadValues(__spreadValues({}, GoodsInfo[equip.goodsType]), equip) : GoodsInfo[role.bodyId];
      }
      if (role.wingId) {
        let equip = result.equipMap.get(role.wingId);
        result.wing = equip ? __spreadValues(__spreadValues({}, GoodsInfo[equip.goodsType]), equip) : GoodsInfo[role.wingId];
      }
      if (role.handId) {
        let equip = result.equipMap.get(role.handId);
        result.hand = equip ? __spreadValues(__spreadValues({}, GoodsInfo[equip.goodsType]), equip) : GoodsInfo[role.handId];
      }
      result.init();
      if (result.head) {
        result.addProps(result.head);
      }
      if (result.body) {
        result.addProps(result.body);
      }
      if (result.wing) {
        result.addProps(result.wing);
      }
      if (result.hand) {
        result.addProps(result.hand);
      }
      return result;
    }
  };

  // src/runtime/CreateRoleScene.ts
  var { regClass: regClass14 } = Laya;
  var CreateRoleScene = class extends CreateRoleSceneBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
      this.roleService = RoleService.getInstance();
      this.jobs = [
        {
          id: 3 /* JIANKE */,
          url: `${ServiceIp}images/login/role-jianke.jpg`,
          name: "少年剑客",
          desc: "幼年的记忆一片空白，养父是一名潦倒剑客，每当少年问起自己的身世或养父的过去，养父都会大发雷霆。17岁那年，养父重病，在说出“幻境”二字后便与世长辞了，少年从此过着仗剑流浪的生活。最近，听说小果村发生了奇怪的鼠患，少年决定过去一探究竟..."
        },
        {
          id: 1 /* NVXIA */,
          url: `${ServiceIp}images/login/role-nvxia.jpg`,
          name: "机灵女侠",
          desc: "女儿村村长孙婆婆孙女，机灵聪明，深得大家喜爱，女孩自幼便得婆婆武学真传，爱打抱不平，经常偷溜到村外，惹来不少麻烦，听说小果村发生了奇怪的鼠患，一向“侠义为怀”的她，就瞒着婆婆跑了过去..."
        },
        {
          id: 2 /* HEIHUO */,
          url: `${ServiceIp}images/login/role-heihuo.jpg`,
          name: "黑火之子",
          desc: "黑火族族长之子，黑火族乃神秘少数民族，族人世代信奉火神，深居苗疆，甚少与外界接触，十数年前，族中遭逢大难，镇族之宝火灵石被盗，族长也被贼人杀害。少年目睹当时惨况，发誓要找回宝物，为族人报仇，听说小果村出现神秘石头，少年也跑了过去..."
        },
        {
          id: 0 /* SHENGNV */,
          url: `${ServiceIp}images/login/role-shengnv.jpg`,
          name: "冰凌圣女",
          desc: "冰凌城第二十八任圣女，负责看守城中至宝：冰灵石。圣女天赋极高，却为人迷糊。数年前，冰灵石被盗，圣女也因失职被赶出冰凌城。为了重返冰凌城，圣女过上了寻找冰灵石下落的流浪生活。今日，小果村传来了关于神秘石头的消息，冰凌圣女就连忙跑去打听了..."
        }
      ];
      this.roleList = [];
      this.nameS = new Laya.Label("");
      this.descS = new Laya.Text();
      this.roleName = new Laya.Input();
    }
    onOpened(params) {
      this.phone = params.phone;
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.bg.size(DeviceHeight * bgRate2, DeviceHeight);
      this.bg.pos((DeviceWidth - this.bg.width) / 2, 0);
      this.bg.loadImage(`${ServiceIp}images/login/create-role.png`);
      this.rate = this.bg.width / bgInfo2.width;
      let roleList = new Laya.Box();
      roleList.pos((this.bg.width - 187 * PixelRatio * this.rate * 4) / 2, (0 + 86) * PixelRatio * this.rate);
      this.bg.addChild(roleList);
      this.jobs.forEach((job, index) => {
        let role = new Laya.Image(job.url);
        role.size(187 * PixelRatio * this.rate, 274 * PixelRatio * this.rate);
        role.pos(index * role.width, 0);
        role.alpha = 0.5;
        roleList.addChild(role);
        this.roleList.push(role);
        role.on(Laya.Event.CLICK, this, () => {
          if (this.currentJob !== index) {
            this.currentJob = index;
            this.roleChange();
          }
        });
      });
      let roleDescPanel = new Laya.Sprite();
      roleDescPanel.size(800 * PixelRatio * this.rate, 255 * PixelRatio * this.rate);
      roleDescPanel.pos(0, roleList.y + roleList.height);
      roleDescPanel.loadImage(`${ServiceIp}images/login/role-desc-panel.png`);
      this.bg.addChild(roleDescPanel);
      let roleShow = new Laya.Sprite();
      roleShow.size(776 * PixelRatio * this.rate, 109 * PixelRatio * this.rate);
      roleShow.pos(12 * PixelRatio * this.rate, 6 * PixelRatio * this.rate);
      roleShow.loadImage(`${ServiceIp}images/login/role-list.png`);
      roleDescPanel.addChild(roleShow);
      this.nameS.fontSize = 22 * PixelRatio * this.rate;
      this.nameS.color = "#a05203";
      this.nameS.pos(140 * PixelRatio * this.rate, 134 * PixelRatio * this.rate);
      roleDescPanel.addChild(this.nameS);
      this.descS.fontSize = 14 * PixelRatio * this.rate;
      this.descS.html = true;
      this.descS.color = "#a05203";
      this.descS.wordWrap = true;
      this.descS.size(380 * PixelRatio * this.rate, 64 * PixelRatio * this.rate);
      this.descS.pos(140 * PixelRatio * this.rate, 157 * PixelRatio * this.rate);
      roleDescPanel.addChild(this.descS);
      this.roleName.fontSize = 16 * PixelRatio * this.rate;
      this.roleName.size(145 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      this.roleName.pos(630 * PixelRatio * this.rate, 140 * PixelRatio * this.rate);
      roleDescPanel.addChild(this.roleName);
      let submit = new MyButton(`${ServiceIp}images/login/create-role-submit.png`, `${ServiceIp}images/login/create-role-submit-down.png`);
      submit.size(131 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      submit.pos(550 * PixelRatio * this.rate, 180 * PixelRatio * this.rate);
      submit.on(Laya.Event.CLICK, this, this.createRole);
      roleDescPanel.addChild(submit);
      let returnBtn = new Laya.Sprite();
      returnBtn.size(90 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      returnBtn.pos(690 * PixelRatio * this.rate, 180 * PixelRatio * this.rate);
      returnBtn.loadImage(`${ServiceIp}images/login/create-role-return.png`);
      returnBtn.on(Laya.Event.CLICK, this, () => {
        Laya.Scene.open("scene/login.ls", true);
      });
      roleDescPanel.addChild(returnBtn);
    }
    roleChange() {
      this.roleList.forEach((item, index) => {
        item.alpha = index === this.currentJob ? 1 : 0.5;
      });
      this.setName();
      this.setDesc();
    }
    setName() {
      this.nameS.text = this.jobs[this.currentJob].name;
    }
    setDesc() {
      this.descS.text = `<p style="white-space: normal; overflow: hidden;">${this.jobs[this.currentJob].desc}</p>`;
    }
    createRole() {
      let name = this.roleName.text;
      if (!name) {
        showTips("昵称不能为空");
        return;
      }
      if (!this.currentJob && this.currentJob !== 0) {
        showTips("请选择角色");
        return;
      }
      let playerInfo = {
        name,
        job: this.jobs[this.currentJob].id,
        sex: this.currentJob === 0 || this.currentJob === 2 ? 0 /* BOY */ : 1 /* GIRL */,
        phone: this.phone
      };
      var route = "area.gameHandler.createRole";
      request(route, playerInfo, (res) => {
        if (res.code === 200) {
          let role = res.data;
          request("connector.entryHandler.entry", { playerId: role.id, areaId: role.areaId }, (data) => {
            if (data.code === 200) {
              this.roleService.initAndAddRole(role);
              Laya.Scene.open("scene/gameHall.ls", true, { role });
            }
          });
        } else {
          showTips("注册失败，名字重复，或刷新重试！");
        }
      });
    }
    onAwake() {
      this.initUI();
    }
  };
  CreateRoleScene = __decorateClass([
    regClass14("w5ItDXQ1QdSEyD9i5X2tVw")
  ], CreateRoleScene);

  // src/runtime/GameHallScene.generated.ts
  var GameHallSceneBase = class extends Laya.Scene {
  };

  // src/service/RoomService.ts
  var RoomService = class _RoomService {
    constructor() {
      this.rooms = [];
    }
    static getInstance() {
      if (!this.instance) {
        this.instance = new _RoomService();
      }
      return this.instance;
    }
    initRooms(rooms) {
      this.rooms = rooms;
    }
    addRoom(room) {
      this.rooms.push(room);
    }
  };

  // src/runtime/GameHallScene.ts
  var { regClass: regClass15, property: property2, Prefab: Prefab2 } = Laya;
  var GameHallScene = class extends GameHallSceneBase {
    constructor() {
      super(...arguments);
      this.roomRoleService = RoomRoleService.getInstance();
      this.roleService = RoleService.getInstance();
      this.roomService = RoomService.getInstance();
      this.role = RoleService.getInstance().role;
      this.rate = 1;
      this.roomType = "all";
      this.totalPage = 5;
      this.currentPage = 1;
      this.roomListBox = new Laya.Sprite();
      this.rooms = [];
      this.tabItems = [
        { id: "player" },
        { id: "friend" },
        { id: "family" },
        { id: "last" }
      ];
      this.currentTab = 0;
      this.PageRoomCount = 8;
      this.playerListPanel = [null, null, null, null];
      this.requestRoute = [
        "area.playerHandler.getPlayerList",
        "area.playerHandler.getFriendList",
        "area.playerHandler.getFamilyList"
      ];
      this.playerList = [[], [], [], []];
      this.roleListBg = new Laya.Sprite();
      this.roomListBg = new Laya.Sprite();
      this.connectorTimer = null;
    }
    onOpened() {
      this.getRoomList();
      this.getPlayerList(0);
      playMusic(`${ServiceIp}music/default.mp3`);
    }
    handleDisconnect(reason) {
      console.log(`Disconnected from server: ${reason}`);
      console.log(reason);
      showTips("连接已断开!", "fail");
    }
    initUI() {
      var _a;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.bg.size(DeviceHeight * bgRate2, DeviceHeight);
      this.bg.pos((DeviceWidth - this.bg.width) / 4, 0);
      this.bg.graphics.drawRect(0, 0, this.bg.width, this.bg.height, "#000000ee");
      Laya.loader.load("prefab/hallHead.lh", Laya.Handler.create(this, (res) => {
        this.head = res.create();
        this.head.zOrder = 10;
        this.bg.addChild(this.head);
        this.head.parentPanel = this.bg;
      }));
      this.initRoomPart();
      this.initRolePart();
      this.chatPanel = getChatPanel((DeviceWidth - this.bg.width) / 2 * bgRate2, DeviceHeight);
      this.chatPanel.pos(this.bg.width + this.bg.x, 0);
      this.addChild(this.chatPanel);
      (_a = chatChannel) == null ? void 0 : _a.changeChannel(1 /* hall */);
    }
    initRoomPart() {
      this.roomListBg.size(478 * PixelRatio * this.rate, 501 * PixelRatio * this.rate);
      this.roomListBg.pos(0, 67 * PixelRatio * this.rate);
      this.roomListBg.loadImage(`${ServiceIp}images/hall/room-list-bg.png`);
      this.roomListBg.zOrder = 11;
      this.bg.addChild(this.roomListBg);
      let xiaoma = new Laya.Image(`${ServiceIp}images/hall/xiaoma.png`);
      xiaoma.size(52 * PixelRatio * this.rate, 51 * PixelRatio * this.rate);
      xiaoma.pos(5 * PixelRatio * this.rate, -22 * PixelRatio * this.rate);
      this.roomListBg.addChild(xiaoma);
      let position = new Laya.Label("普通区 普通1");
      position.color = "white";
      position.font = "宋体";
      position.fontSize = 12 * PixelRatio * this.rate;
      position.pos(55 * PixelRatio * this.rate, 13 * PixelRatio * this.rate);
      this.roomListBg.addChild(position);
      let all = new Laya.Image(`${ServiceIp}images/hall/all-select.png`);
      all.size(64 * PixelRatio * this.rate, 36 * PixelRatio * this.rate);
      all.pos(162 * PixelRatio * this.rate, 1 * PixelRatio * this.rate);
      this.roomListBg.addChild(all);
      let waiting = new Laya.Image(`${ServiceIp}images/hall/waiting.png`);
      waiting.size(65 * PixelRatio * this.rate, 36 * PixelRatio * this.rate);
      waiting.pos(225 * PixelRatio * this.rate, 0 * PixelRatio * this.rate);
      this.roomListBg.addChild(waiting);
      all.on(Laya.Event.CLICK, this, () => {
        if (this.roomType === "all")
          return;
        this.roomType = "all";
        all.source = Laya.loader.getRes(`${ServiceIp}images/hall/all-select.png`);
        waiting.source = Laya.loader.getRes(`${ServiceIp}images/hall/waiting.png`);
        this.rooms = [...this.roomService.rooms];
        this.totalPage = this.rooms.length;
        this.goPage(1);
      });
      waiting.on(Laya.Event.CLICK, this, () => {
        if (this.roomType === "waiting")
          return;
        this.roomType = "waiting";
        all.source = Laya.loader.getRes(`${ServiceIp}images/hall/all.png`);
        waiting.source = Laya.loader.getRes(`${ServiceIp}images/hall/waiting-select.png`);
        this.rooms = this.roomService.rooms.filter((item) => item.status === 2 /* waiting */);
        this.totalPage = this.rooms.length;
        this.goPage(1);
      });
      let page = new Laya.Input();
      page.color = "white";
      page.fontSize = 12 * PixelRatio * this.rate;
      page.size(35 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
      page.pos(300 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      this.roomListBg.addChild(page);
      let go = new Laya.Image(`${ServiceIp}images/hall/go.png`);
      go.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      go.pos(334 * PixelRatio * this.rate, 6 * PixelRatio * this.rate);
      this.roomListBg.addChild(go);
      let pre = new Laya.Image(`${ServiceIp}images/hall/pre.png`);
      pre.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      pre.pos(366 * PixelRatio * this.rate, 6 * PixelRatio * this.rate);
      this.roomListBg.addChild(pre);
      let next = new Laya.Image(`${ServiceIp}images/hall/next.png`);
      next.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      next.pos(441 * PixelRatio * this.rate, 6 * PixelRatio * this.rate);
      this.roomListBg.addChild(next);
      let sperate = new Laya.Image(`${ServiceIp}images/hall/number/sperate2.png`);
      sperate.size(8 * PixelRatio * this.rate, 15 * PixelRatio * this.rate);
      sperate.pos(413 * PixelRatio * this.rate, 11 * PixelRatio * this.rate);
      this.roomListBg.addChild(sperate);
      this.currentLabel = new Laya.Label(pad(this.currentPage));
      this.currentLabel.pos(393 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      this.currentLabel.fontSize = 20 * PixelRatio * this.rate;
      this.currentLabel.color = "white";
      this.roomListBg.addChild(this.currentLabel);
      this.totalLabel = new Laya.Label(pad(this.totalPage));
      this.totalLabel.pos(422 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      this.totalLabel.fontSize = 20 * PixelRatio * this.rate;
      this.totalLabel.color = "white";
      this.roomListBg.addChild(this.totalLabel);
      pre.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage === 1)
          return;
        this.currentPage--;
        this.currentLabel.text = pad(this.currentPage);
        this.pageChange();
      });
      next.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage === this.totalPage)
          return;
        this.currentPage++;
        this.currentLabel.text = pad(this.currentPage);
        this.pageChange();
      });
      go.on(Laya.Event.CLICK, this, () => {
        if (!isPositiveInteger(page.text) || +page.text === 0)
          return;
        this.goPage(Math.min(+page.text, this.totalPage));
      });
      let selectText = new Laya.Label("全部");
      selectText.fontSize = 12 * PixelRatio * this.rate;
      selectText.color = "white";
      selectText.pos(8 * PixelRatio * this.rate, 41 * PixelRatio * this.rate);
      this.roomListBg.addChild(selectText);
      let selectBtn = new Laya.Image(`${ServiceIp}images/hall/select.png`);
      selectBtn.size(26 * this.rate * PixelRatio, 26 * PixelRatio * this.rate);
      selectBtn.pos(96 * PixelRatio * this.rate, 34 * PixelRatio * this.rate);
      this.roomListBg.addChild(selectBtn);
      this.noticeLabel = new Laya.Label();
      this.noticeLabel.bgColor = "#000000ee";
      this.noticeLabel.color = "white";
      this.noticeLabel.valign = "middle";
      this.noticeLabel.fontSize = 12 * PixelRatio * this.rate;
      this.noticeLabel.size(272 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      this.noticeLabel.pos(149 * PixelRatio * this.rate, 38 * PixelRatio * this.rate);
      this.roomListBg.addChild(this.noticeLabel);
      this.roomListBox.pos(0, 58 * PixelRatio * this.rate);
      this.roomListBg.addChild(this.roomListBox);
      let bottomChatPanel = new Laya.Sprite();
      bottomChatPanel.size(481 * PixelRatio * this.rate, 39 * PixelRatio * this.rate);
      bottomChatPanel.pos(1 * PixelRatio * this.rate, 564 * PixelRatio * this.rate);
      bottomChatPanel.zOrder = 100;
      bottomChatPanel.loadImage(`${ServiceIp}images/system/panelAtlas/bottom-chat-panel.png`);
      this.bg.addChild(bottomChatPanel);
      this.bottomChatInput = new Laya.Input();
      this.bottomChatInput.size(440 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      this.bottomChatInput.pos(10 * PixelRatio * this.rate, 5 * PixelRatio * this.rate);
      this.bottomChatInput.color = "white";
      this.bottomChatInput.fontSize = 12 * PixelRatio * this.rate;
      this.bottomChatInput.on(Laya.Event.KEY_DOWN, this, (e) => {
        if (e.keyCode === 13) {
          this.sendMsg();
        }
      });
      bottomChatPanel.addChild(this.bottomChatInput);
      let sendBtn = new Laya.Image(`${ServiceIp}images/hall/send.png`);
      sendBtn.size(23 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      sendBtn.pos(447 * PixelRatio * this.rate, 7 * PixelRatio * this.rate);
      bottomChatPanel.addChild(sendBtn);
      sendBtn.on(Laya.Event.CLICK, this, this.sendMsg);
    }
    goPage(page) {
      this.setCurrentPage(page);
      this.pageChange();
    }
    setCurrentPage(page) {
      this.currentPage = page;
      this.currentLabel.text = pad(page);
    }
    setTotalPage(page) {
      this.totalPage = page;
      this.totalLabel.text = pad(page);
    }
    initRoomList() {
      Laya.loader.load("prefab/room/roomItem.lh", Laya.Handler.create(this, (res) => {
        this.roomListBox.removeChildren();
        for (let i = 0; i < this.PageRoomCount; i++) {
          let room = res.create();
          if (i % 2 === 0) {
            room.pos(7 * PixelRatio * this.rate, i / 2 * 110 * PixelRatio * this.rate);
          } else {
            room.pos((17 + 222) * PixelRatio * this.rate, Math.floor(i / 2) * 110 * PixelRatio * this.rate);
          }
          let roomData = this.rooms[i + (this.currentPage - 1) * this.PageRoomCount];
          if (roomData) {
            room.init(roomData);
          }
          room.initUI();
          this.roomListBox.addChild(room);
          room.on(Laya.Event.CLICK, this, () => {
            if (roomData) {
              if (roomData.status !== 1 /* gaming */ && roomData.maxCount !== roomData.currentCount) {
                this.joinRoom(roomData);
              }
            } else {
              this.createRoom("pve" /* pve */);
            }
          });
        }
      }));
    }
    pageChange() {
      this.initRoomList();
    }
    tabChange(index) {
      let lastPanel = this.playerListPanel[this.currentTab];
      if (lastPanel) {
        this.roleListBg.removeChild(lastPanel);
      }
      let nowPanel = this.playerListPanel[index];
      if (nowPanel) {
        this.roleListBg.addChild(nowPanel);
      } else {
        this.getPlayerList(index);
      }
    }
    addPlayerToList(role, index) {
      if (!this.playerListPanel[index])
        return;
      let listBox = this.playerListPanel[index].getChildByName("listBox" + index);
      if (!listBox)
        return;
      let row = this.createPlayerItem(role);
      listBox.addChild(row);
    }
    renderPlayerListPanel(index) {
      this.playerListPanel[index] = new Laya.Panel();
      this.playerListPanel[index].vScrollBarSkin = "atlas/comp/vscroll.png";
      let listBox = new Laya.VBox();
      listBox.name = "listBox" + index;
      listBox.y = 7 * PixelRatio * this.rate;
      this.playerListPanel[index].size(310 * PixelRatio * this.rate, 380 * PixelRatio * this.rate);
      this.playerListPanel[index].pos(1 * PixelRatio * this.rate, 31 * PixelRatio * this.rate);
      this.playerListPanel[index].addChild(listBox);
      this.roleListBg.addChild(this.playerListPanel[index]);
      this.playerList[index].forEach((role) => {
        let row = this.createPlayerItem(role);
        listBox.addChild(row);
      });
    }
    createPlayerItem(role) {
      let row = new Laya.Sprite();
      row.size(300 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      let statusText = new Laya.Text();
      statusText.text = `${PlayerStatusMap[role.status]}`;
      statusText.size(20 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      statusText.pos(13 * PixelRatio * this.rate, 0);
      statusText.valign = "middle";
      statusText.fontSize = 12 * PixelRatio * this.rate;
      statusText.color = role.sex === 0 /* BOY */ ? "#2effe9" : "#f610ff";
      row.addChild(statusText);
      let familyText = new Laya.Text();
      familyText.text = "-";
      familyText.size(20 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      familyText.pos(58 * PixelRatio * this.rate, 0);
      familyText.valign = "middle";
      familyText.fontSize = 12 * PixelRatio * this.rate;
      familyText.color = role.sex === 0 /* BOY */ ? "#2effe9" : "#f610ff";
      row.addChild(familyText);
      let levelText = new Laya.Text();
      levelText.text = role.level + "";
      levelText.size(20 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      levelText.pos(98 * PixelRatio * this.rate, 0);
      levelText.valign = "middle";
      levelText.fontSize = 12 * PixelRatio * this.rate;
      levelText.color = role.sex === 0 /* BOY */ ? "#2effe9" : "#f610ff";
      row.addChild(levelText);
      let nameText = new Laya.Text();
      nameText.text = role.name;
      nameText.size(70 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      nameText.pos(165 * PixelRatio * this.rate, 0);
      nameText.valign = "middle";
      nameText.overflow = "hidden";
      nameText.fontSize = 12 * PixelRatio * this.rate;
      nameText.color = role.sex === 0 /* BOY */ ? "#2effe9" : "#f610ff";
      row.addChild(nameText);
      let sexText = new Laya.Text();
      sexText.text = role.sex === 0 /* BOY */ ? "男" : "女";
      sexText.size(20 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
      sexText.pos(255 * PixelRatio * this.rate, 0);
      sexText.valign = "middle";
      sexText.fontSize = 12 * PixelRatio * this.rate;
      sexText.color = role.sex === 0 /* BOY */ ? "#2effe9" : "#f610ff";
      row.addChild(sexText);
      return row;
    }
    initRolePart() {
      let tabPanel = new Laya.Sprite();
      tabPanel.size(316 * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      tabPanel.pos(483 * PixelRatio * this.rate, 68 * PixelRatio * this.rate);
      this.bg.addChild(tabPanel);
      this.tabItems.forEach((item, i) => {
        let tab = new Laya.Image(i === this.currentTab ? `${ServiceIp}images/hall/tab/chat-${item.id}-select.png` : `${ServiceIp}images/hall/tab/chat-${item.id}.png`);
        tab.size(81 * PixelRatio * this.rate, 32 * PixelRatio * this.rate);
        tab.pos(i * 78 * PixelRatio * this.rate, 0);
        tabPanel.addChild(tab);
        tab.on(Laya.Event.CLICK, this, () => {
          tabPanel.getChildAt(this.currentTab).source = Laya.loader.getRes(`${ServiceIp}images/hall/tab/chat-player.png`);
          tab.source = Laya.loader.getRes(`${ServiceIp}images/hall/tab/chat-${this.tabItems[i].id}-select.png`);
          this.tabChange(i);
          this.currentTab = i;
        });
      });
      this.roleListBg.size(316 * PixelRatio * this.rate, 417 * PixelRatio * this.rate);
      this.roleListBg.pos(485 * PixelRatio * this.rate, 95 * PixelRatio * this.rate);
      this.roleListBg.loadImage(`${ServiceIp}images/hall/role-list-bg.png`);
      this.bg.addChild(this.roleListBg);
      let optPanel = new Laya.Sprite();
      optPanel.loadImage(`${ServiceIp}images/hall/opt-panel.png`);
      this.bg.addChild(optPanel);
      optPanel.size(322 * PixelRatio * this.rate, 83 * PixelRatio * this.rate);
      optPanel.pos(483 * PixelRatio * this.rate, 518 * PixelRatio * this.rate);
      let createBtn = new MyButton(`${ServiceIp}images/hall/create/create-room-btn.png`, `${ServiceIp}images/hall/create/create-room-btn-down.png`);
      createBtn.size(131 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      createBtn.pos(5 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      optPanel.addChild(createBtn);
      createBtn.on(Laya.Event.CLICK, this, () => {
        let panel = this.bg.getChildByName("createRoomPanel");
        if (panel) {
          this.hideCreatePanel();
        } else {
          this.showCreatePanel();
        }
      });
      let joinBtn = new Laya.Image(`${ServiceIp}images/hall/create/join-room-btn.png`);
      joinBtn.size(78 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      joinBtn.pos(142 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      optPanel.addChild(joinBtn);
      joinBtn.on(Laya.Event.CLICK, this, () => {
        let rooms = this.roomService.rooms.filter((item) => item.status === 2 /* waiting */);
        if (rooms.length === 0) {
          showTips("没有可加入的房间");
          return;
        }
        this.joinRoom(rooms[Math.floor(Math.random() * rooms.length)]);
      });
      let returnBtn = new Laya.Image(`${ServiceIp}images/hall/create/create-room-return.png`);
      returnBtn.size(90 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      returnBtn.pos(226 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      optPanel.addChild(returnBtn);
      returnBtn.on(Laya.Event.CLICK, this, () => {
        request("area.gameHandler.logout", null, (res) => {
          if (res.code === 200) {
            window.pomelo.disconnect();
            Laya.Scene.open("scene/login.ls", true, { from: "exit" });
          }
        });
      });
      this.renderCreateRoomPanel();
    }
    renderCreateRoomPanel() {
      this.createRoomPanel = new Laya.Sprite();
      this.createRoomPanel.name = "createRoomPanel";
      this.createRoomPanel.size(293 * PixelRatio * this.rate, 102 * PixelRatio * this.rate);
      this.createRoomPanel.pos(482 * PixelRatio * this.rate, 412 * PixelRatio * this.rate);
      this.createRoomPanel.loadImage(`${ServiceIp}images/hall/create/create-room-panel.png`);
      let luandou = new MyButton(`${ServiceIp}images/hall/create/room-type-pvp.png`, `${ServiceIp}images/hall/create/room-type-pvp-down.png`);
      luandou.size(91 * PixelRatio * this.rate, 47 * PixelRatio * this.rate);
      luandou.pos(6 * PixelRatio * this.rate, 16 * PixelRatio * this.rate);
      this.createRoomPanel.addChild(luandou);
      luandou.on(Laya.Event.CLICK, this, () => {
        this.createRoom("pvp" /* luandou */);
      });
      let wuchabie = new MyButton(`${ServiceIp}images/hall/create/room-type-pvp2.png`, `${ServiceIp}images/hall/create/room-type-pvp2-down.png`);
      wuchabie.size(91 * PixelRatio * this.rate, 45 * PixelRatio * this.rate);
      wuchabie.pos(100 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      this.createRoomPanel.addChild(wuchabie);
      wuchabie.on(Laya.Event.CLICK, this, () => {
        this.createRoom("pvp2" /* wuchabie */);
      });
      let tanxian = new MyButton(`${ServiceIp}images/hall/create/room-type-pve.png`, `${ServiceIp}images/hall/create/room-type-pve-down.png`);
      tanxian.size(91 * PixelRatio * this.rate, 47 * PixelRatio * this.rate);
      tanxian.pos(6 * PixelRatio * this.rate, 63 * PixelRatio * this.rate);
      this.createRoomPanel.addChild(tanxian);
      tanxian.on(Laya.Event.CLICK, this, () => {
        this.createRoom("pve");
      });
    }
    showCreatePanel() {
      this.bg.addChild(this.createRoomPanel);
    }
    hideCreatePanel() {
      this.bg.removeChild(this.createRoomPanel);
    }
    sendMsg() {
      let role = this.role;
      if (role.accountStatus === 1 /* Forbidden */ && Date.now() <= role.deadline) {
        showTips("您已被禁言，解禁日期：" + new Date(role.deadline).toLocaleString());
        return;
      }
      request("area.chatHandler.sendMsg", { channel: 1 /* hall */, msg: this.bottomChatInput.text }, (res) => {
        if (res.code === 200) {
          this.bottomChatInput.text = "";
        }
      });
    }
    onAwake() {
      this.initUI();
      this.pomeloEvent();
    }
    onClosed() {
      let pomelo = window.pomelo;
      pomelo.off("onHallRoomChange");
      pomelo.off("onRoomAdd");
      pomelo.off("onRoomRemove");
      pomelo.off("onPlayerEnterGame");
      pomelo.off("onReceiveMsg");
    }
    pomeloEvent() {
      let pomelo = window.pomelo;
      pomelo.on("onHallRoomChange", (res) => {
        let room = res.data;
        let index = this.roomService.rooms.findIndex((item) => item.id === room.id);
        this.roomService.rooms[index] = room;
        if (this.roomType === "all") {
          this.rooms = [...this.roomService.rooms];
        } else {
          this.rooms = this.roomService.rooms.filter((item) => item.status === 2 /* waiting */);
        }
        index = this.rooms.findIndex((item) => item.id === room.id);
        if (Math.floor(index / this.PageRoomCount) + 1 === this.currentPage) {
          this.initRoomList();
        }
      });
      pomelo.on("onRoomAdd", (res) => {
        let room = res.data;
        this.roomService.rooms.push(room);
        this.roomService.rooms.sort((a, b) => a.id - b.id);
        if (this.roomType === "all") {
          this.rooms = [...this.roomService.rooms];
        } else {
          this.rooms = this.roomService.rooms.filter((item) => item.status === 2 /* waiting */);
        }
        let total = Math.max(Math.ceil(this.rooms.length / this.PageRoomCount), 1);
        if (total !== this.totalPage) {
          this.setTotalPage(total);
          this.setCurrentPage(Math.min(total, this.currentPage));
        }
        this.initRoomList();
      });
      pomelo.on("onRoomRemove", (res) => {
        let roomId = res.data;
        let index = this.roomService.rooms.findIndex((item) => item.id === roomId);
        this.roomService.rooms.splice(index, 1);
        this.roomService.rooms.sort((a, b) => a.id - b.id);
        if (this.roomType === "all") {
          this.rooms = [...this.roomService.rooms];
        } else {
          this.rooms = this.roomService.rooms.filter((item) => item.status === 2 /* waiting */);
        }
        let total = Math.max(Math.ceil(this.rooms.length / this.PageRoomCount), 1);
        if (total !== this.totalPage) {
          this.setTotalPage(total);
          this.setCurrentPage(Math.min(total, this.currentPage));
        }
        this.initRoomList();
      });
      pomelo.on("onPlayerEnterGame", (res) => {
        this.playerList[0].push(res.data.player);
        this.addPlayerToList(res.data.player, 0);
      });
      pomelo.on("onReceiveMsg", (res) => {
        addChat(res.data);
      });
    }
    getRoomList() {
      request("area.roomHandler.getRoomList", null, (res) => {
        if (res.code === 200) {
          this.roomService.initRooms(res.data);
          this.setTotalPage(Math.max(Math.ceil(this.roomService.rooms.length / this.PageRoomCount), 1));
          this.rooms = [...this.roomService.rooms];
          this.initRoomList();
        } else {
          showTips("获取房间列表失败，请重试");
        }
      });
    }
    getPlayerList(index) {
      if (index === 3) {
        this.playerList[index] = [];
      } else {
        request(this.requestRoute[index], null, (res) => {
          if (res.code === 200 && res.data.length) {
            this.playerList[index] = res.data;
            this.renderPlayerListPanel(index);
          } else {
            showTips(res.msg);
          }
        });
      }
    }
    createRoom(type) {
      let room = {
        name: this.role.name,
        type
      };
      request("area.roomHandler.createRoom", room, (res) => {
        if (res.code === 200) {
          if (res.data) {
            let { room: room2, players, mapInfo } = res.data;
            this.roomService.addRoom(room2);
            mapInfo.star = room2.star;
            Laya.Scene.open("scene/roomScene.ls", true, { room: room2, players: this.transferPlayers(players), mapInfo });
          }
        } else {
          showTips(res.msg);
        }
      });
    }
    joinRoom(room) {
      request("area.roomHandler.enterRoom", { roomId: room.id }, (res) => {
        if (res.code === 200 && res.data) {
          let { room: room2, players, mapInfo } = res.data;
          Laya.Scene.open("scene/roomScene.ls", true, { room: room2, players: this.transferPlayers(players), mapInfo });
        } else {
          showTips(res.data);
        }
      });
    }
    transferPlayers(players) {
      let result = {};
      this.roomRoleService.roleList = [];
      for (let key in players) {
        if (!players[key] || players[key] === -1) {
          result[key] = players[key];
        } else {
          result[key] = players[key].id === this.role.id ? this.role : this.roleService.transferRole(players[key]);
          this.roomRoleService.roleList.push(result[key]);
        }
      }
      return result;
    }
  };
  GameHallScene = __decorateClass([
    regClass15("wYQ-5zSTRB6gAvRS_xBNIg")
  ], GameHallScene);

  // src/runtime/GameLoad.generated.ts
  var GameLoadBase = class extends Laya.Scene {
  };

  // src/util/equip/shengnv.ts
  var huayangjinzhuo = [
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-up.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-down.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-right.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-default-left.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-up.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-down.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-right.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-move-left.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-up.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-down.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-right.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-push-left.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-huayangjinzhuo/shengnv-huayangjinzhuo-dead.png`
  ];
  var bingjingluoxia = [
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingluoxia/shengnv-bingjingluoxia-dead.png`
  ];
  var bingjinglengyue = [
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjinglengyue/shengnv-bingjinglengyue-dead.png`
  ];
  var bingjingchuyang = [
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bingjingchuyang/shengnv-bingjingchuyang-dead.png`
  ];
  var fenghuanghuayi = [
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuanghuayi/shengnv-fenghuanghuayi-dead.png`
  ];
  var fenghuangyushi = [
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-fenghuangyushi/shengnv-fenghuangyushi-dead.png`
  ];
  var fengyitianxiang = [
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-default-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-move-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-push-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-right-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-default-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-move-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-push-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-left-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-fengyitianxiang/shengnv-fengyitianxiang-dead.png`
  ];
  var shengnvtianshiyi = [
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiyi/shengnv-tianshiyi-dead.png`
  ];
  var shengnvtianshiguanghuan = [
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-default-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-move-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-push-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshiguanghuan/shengnv-tianshiguanghuan-dead.png`
  ];
  var shengnvtianshichi = [
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-tianshichi/shengnv-tianshichi-dead.png`
  ];
  var liuguangbingshi = [
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-liuguangbingshi/shengnv-liuguangbingshi-dead.png`
  ];
  var bingmangshengfu = [
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bingmangshengfu/shengnv-bingmangshengfu-dead.png`
  ];
  var yicaidiechi = [
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-default-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-move-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-push-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-right-dead.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-default-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-move-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-push-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-yicaidiechi/shengnv-yicaidiechi-left-dead.png`
  ];
  var shengnvbulaohushoutao = [
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohushoutao/shengnv-bulaohushoutao-dead.png`
  ];
  var shengnvbulaohutou = [
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohutou/shengnv-bulaohutou-dead.png`
  ];
  var shengnvbulaohuyi = [
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuyi/shengnv-bulaohuyi-dead.png`
  ];
  var shengnvbulaohuweiba = [
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-default-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-move-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-push-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-bulaohuweiba/shengnv-bulaohuweiba-dead.png`
  ];
  var shengnvpangxiemao = [
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-up.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-down.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-right.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-default-left.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-up.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-down.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-right.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-move-left.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-up.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-down.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-right.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-push-left.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-pangxiemao/shengnv-pangxiemao-dead.png`
  ];
  var shengnvshatanzhuang = [
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-up.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-down.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-right.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-default-left.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-up.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-down.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-right.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-move-left.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-up.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-down.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-right.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-push-left.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-shatanzhuang/shengnv-shatanzhuang-dead.png`
  ];
  var shengnvxiaojitoushi = [
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-up.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-up.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-down.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-down.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-right.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-right.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-left.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-default-left.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-up.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-up.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-down.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-down.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-right.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-right.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-left.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-move-left.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-up.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-up.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-down.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-down.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-right.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-right.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-left.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-push-left.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-up.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-up.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-down.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-down.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-right.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-right.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-left.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-hurt-left.png`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-dead.atlas`,
    `${ServiceIp}images/equip/shengnv-xiaojitoushi/shengnv-xiaojitoushi-dead.png`
  ];

  // src/util/equip/heihuo.ts
  var heihuoshouhuan = [
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-up.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-down.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-right.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-default-left.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-up.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-down.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-right.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-move-left.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-up.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-down.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-right.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-push-left.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-heihuoshouhuan/heihuo-heihuoshouhuan-dead.png`
  ];
  var zijinjiaokui = [
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-up.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-down.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-right.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-default-left.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-up.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-down.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-right.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-move-left.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-up.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-down.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-right.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-push-left.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-zijinjiaokui/heihuo-zijinjiaokui-dead.png`
  ];
  var lierenzhuang = [
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-up.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-down.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-right.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-default-left.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-up.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-down.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-right.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-move-left.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-up.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-down.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-right.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-push-left.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-lierenzhuang/heihuo-lierenzhuang-dead.png`
  ];
  var ziqiupifeng = [
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-up.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-down.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-right.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-default-left.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-up.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-down.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-right.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-move-left.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-up.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-down.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-right.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-push-left.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-ziqiupifeng/heihuo-ziqiupifeng-dead.png`
  ];
  var honglongkui = [
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-up.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-down.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-right.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-default-left.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-up.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-down.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-right.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-move-left.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-up.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-down.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-right.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-push-left.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-honglongkui/heihuo-honglongkui-dead.png`
  ];
  var honglonglinjia = [
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-up.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-down.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-right.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-default-left.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-up.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-down.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-right.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-move-left.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-up.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-down.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-right.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-push-left.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-honglonglinjia/heihuo-honglonglinjia-dead.png`
  ];
  var longzhiyi = [
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-default-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-move-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-push-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-right-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-default-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-move-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-push-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-left-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-longzhiyi/heihuo-longzhiyi-dead.png`
  ];
  var heihuotianshiyi = [
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-default-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-move-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-push-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiyi/heihuo-tianshiyi-dead.png`
  ];
  var heihuotianshiguanghuan = [
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-default-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-move-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-push-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshiguanghuan/heihuo-tianshiguanghuan-dead.png`
  ];
  var heihuotianshichi = [
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-default-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-move-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-push-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-tianshichi/heihuo-tianshichi-dead.png`
  ];
  var chiyunuding = [
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-up.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-down.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-right.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-default-left.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-up.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-down.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-right.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-move-left.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-up.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-down.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-right.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-push-left.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-chiyunuding/heihuo-chiyunuding-dead.png`
  ];
  var yudiankuangjia = [
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-up.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-down.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-right.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-default-left.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-up.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-down.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-right.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-move-left.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-up.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-down.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-right.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-push-left.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-yudiankuangjia/heihuo-yudiankuangjia-dead.png`
  ];
  var huoyanchi = [
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-default-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-move-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-push-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-right-dead.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-default-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-move-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-push-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-huoyanchi/heihuo-huoyanchi-left-dead.png`
  ];
  var heihuobulaohushoutao = [
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-default-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-move-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-push-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohushoutao/heihuo-bulaohushoutao-dead.png`
  ];
  var heihuobulaohutou = [
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-default-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-move-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-push-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohutou/heihuo-bulaohutou-dead.png`
  ];
  var heihuobulaohuyi = [
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-default-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-move-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-push-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuyi/heihuo-bulaohuyi-dead.png`
  ];
  var heihuobulaohuweiba = [
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-default-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-move-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-push-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-bulaohuweiba/heihuo-bulaohuweiba-dead.png`
  ];
  var heihuopangxiemao = [
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-up.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-down.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-right.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-default-left.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-up.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-down.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-right.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-move-left.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-up.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-down.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-right.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-push-left.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-pangxiemao/heihuo-pangxiemao-dead.png`
  ];
  var heihuoshatanzhuang = [
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-up.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-down.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-right.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-default-left.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-up.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-down.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-right.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-move-left.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-up.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-down.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-right.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-push-left.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-shatanzhuang/heihuo-shatanzhuang-dead.png`
  ];
  var heihuoxiaojitoushi = [
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-up.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-up.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-down.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-down.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-right.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-right.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-left.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-default-left.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-up.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-up.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-down.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-down.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-right.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-right.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-left.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-move-left.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-up.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-up.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-down.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-down.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-right.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-right.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-left.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-push-left.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-up.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-up.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-down.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-down.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-right.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-right.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-left.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-hurt-left.png`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-dead.atlas`,
    `${ServiceIp}images/equip/heihuo-xiaojitoushi/heihuo-xiaojitoushi-dead.png`
  ];

  // src/util/equip/jianke.ts
  var huangjinlonglinjia = [
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-default-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-move-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-push-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-dead.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinlonglinjia/jianke-huangjinlonglinjia-dead.png`
  ];
  var huangjinpanlongkui = [
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-default-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-move-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-push-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-dead.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinpanlongkui/jianke-huangjinpanlongkui-dead.png`
  ];
  var huangjinyanyuedao = [
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-default-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-move-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-push-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-dead.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyanyuedao/jianke-huangjinyanyuedao-dead.png`
  ];
  var huangjinyoulongwan = [
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-default-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-move-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-push-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-dead.atlas`,
    `${ServiceIp}images/equip/jianke-huangjinyoulongwan/jianke-huangjinyoulongwan-dead.png`
  ];
  var businiaozhichi = [
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-default-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-move-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-push-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-dead.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-right-dead.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-default-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-move-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-push-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-dead.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhichi/jianke-businiaozhichi-left-dead.png`
  ];
  var businiaozhikui = [
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-default-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-move-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-push-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-dead.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhikui/jianke-businiaozhikui-dead.png`
  ];
  var businiaozhijia = [
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-default-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-move-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-push-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-dead.atlas`,
    `${ServiceIp}images/equip/jianke-businiaozhijia/jianke-businiaozhijia-dead.png`
  ];
  var jianketianshiyi = [
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-default-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-move-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-push-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-dead.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiyi/jianke-tianshiyi-dead.png`
  ];
  var jianketianshiguanghuan = [
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-default-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-move-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-push-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-dead.atlas`,
    `${ServiceIp}images/equip/jianke-tianshiguanghuan/jianke-tianshiguanghuan-dead.png`
  ];
  var jianketianshichi = [
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-up.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-down.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-right.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-default-left.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-up.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-down.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-right.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-move-left.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-up.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-down.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-right.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-push-left.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-dead.atlas`,
    `${ServiceIp}images/equip/jianke-tianshichi/jianke-tianshichi-dead.png`
  ];
  var yeyingxingkui = [
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-up.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-down.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-right.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-default-left.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-up.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-down.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-right.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-move-left.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-up.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-down.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-right.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-push-left.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-dead.atlas`,
    `${ServiceIp}images/equip/jianke-yeyingxingkui/jianke-yeyingxingkui-dead.png`
  ];
  var yezhanhuanjia = [
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-up.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-down.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-right.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-default-left.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-up.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-down.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-right.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-move-left.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-up.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-down.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-right.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-push-left.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-dead.atlas`,
    `${ServiceIp}images/equip/jianke-yezhanhuanjia/jianke-yezhanhuanjia-dead.png`
  ];
  var yeguangbeichi = [
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-default-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-move-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-push-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-dead.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-right-dead.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-default-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-move-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-push-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-dead.atlas`,
    `${ServiceIp}images/equip/jianke-yeguangbeichi/jianke-yeguangbeichi-left-dead.png`
  ];
  var jiankebulaohushoutao = [
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-default-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-move-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-push-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-dead.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohushoutao/jianke-bulaohushoutao-dead.png`
  ];
  var jiankebulaohutou = [
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-default-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-move-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-push-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-dead.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohutou/jianke-bulaohutou-dead.png`
  ];
  var jiankebulaohuyi = [
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-default-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-move-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-push-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-dead.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuyi/jianke-bulaohuyi-dead.png`
  ];
  var jiankebulaohuweiba = [
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-default-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-move-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-push-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-dead.atlas`,
    `${ServiceIp}images/equip/jianke-bulaohuweiba/jianke-bulaohuweiba-dead.png`
  ];
  var jiankepangxiemao = [
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-up.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-down.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-right.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-default-left.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-up.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-down.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-right.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-move-left.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-up.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-down.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-right.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-push-left.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-dead.atlas`,
    `${ServiceIp}images/equip/jianke-pangxiemao/jianke-pangxiemao-dead.png`
  ];
  var jiankeshatanzhuang = [
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-up.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-down.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-right.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-default-left.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-up.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-down.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-right.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-move-left.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-up.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-down.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-right.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-push-left.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-dead.atlas`,
    `${ServiceIp}images/equip/jianke-shatanzhuang/jianke-shatanzhuang-dead.png`
  ];
  var jiankexiaojitoushi = [
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-up.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-up.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-down.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-down.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-right.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-right.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-left.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-default-left.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-up.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-up.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-down.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-down.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-right.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-right.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-left.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-move-left.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-up.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-up.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-down.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-down.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-right.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-right.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-left.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-push-left.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-up.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-up.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-down.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-down.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-right.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-right.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-left.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-hurt-left.png`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-dead.atlas`,
    `${ServiceIp}images/equip/jianke-xiaojitoushi/jianke-xiaojitoushi-dead.png`
  ];

  // src/util/equip/nvxia.ts
  var yuanyuewandao = [
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-up.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-down.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-right.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-default-left.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-up.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-down.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-right.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-move-left.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-up.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-down.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-right.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-push-left.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-yuanyuewandao/nvxia-yuanyuewandao-dead.png`
  ];
  var nihongyingluo = [
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-default-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-move-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-push-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongyingluo/nvxia-nihongyingluo-dead.png`
  ];
  var nihongcaiyi = [
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-nihongcaiyi/nvxia-nihongcaiyi-dead.png`
  ];
  var jinlian = [
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-up.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-down.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-right.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-default-left.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-up.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-down.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-right.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-move-left.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-up.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-down.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-right.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-push-left.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-jinlian/nvxia-jinlian-dead.png`
  ];
  var fengpi = [
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-fengpi/nvxia-fengpi-dead.png`
  ];
  var heyeruyi = [
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-heyeruyi/nvxia-heyeruyi-dead.png`
  ];
  var nvxiatianshiyi = [
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiyi/nvxia-tianshiyi-dead.png`
  ];
  var nvxiatianshiguanghuan = [
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-default-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-move-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-push-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshiguanghuan/nvxia-tianshiguanghuan-dead.png`
  ];
  var nvxiatianshichi = [
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-tianshichi/nvxia-tianshichi-dead.png`
  ];
  var rongxiuqiuguan = [
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-default-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-move-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-push-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuqiuguan/nvxia-rongxiuqiuguan-dead.png`
  ];
  var rongxiujinfu = [
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-default-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-move-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-push-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiujinfu/nvxia-rongxiujinfu-dead.png`
  ];
  var rongxiuyuyi = [
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-default-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-move-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-push-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-right-dead.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-default-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-move-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-push-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-rongxiuyuyi/nvxia-rongxiuyuyi-left-dead.png`
  ];
  var nvxiabulaohushoutao = [
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-default-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-move-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-push-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohushoutao/nvxia-bulaohushoutao-dead.png`
  ];
  var nvxiabulaohutou = [
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-default-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-move-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-push-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohutou/nvxia-bulaohutou-dead.png`
  ];
  var nvxiabulaohuyi = [
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuyi/nvxia-bulaohuyi-dead.png`
  ];
  var nvxiabulaohuweiba = [
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-default-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-move-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-push-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-bulaohuweiba/nvxia-bulaohuweiba-dead.png`
  ];
  var nvxiapangxiemao = [
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-up.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-down.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-right.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-default-left.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-up.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-down.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-right.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-move-left.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-up.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-down.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-right.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-push-left.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-pangxiemao/nvxia-pangxiemao-dead.png`
  ];
  var nvxiashatanzhuang = [
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-up.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-down.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-right.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-default-left.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-up.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-down.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-right.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-move-left.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-up.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-down.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-right.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-push-left.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-shatanzhuang/nvxia-shatanzhuang-dead.png`
  ];
  var nvxiaxiaojitoushi = [
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-up.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-up.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-down.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-down.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-right.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-right.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-left.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-default-left.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-up.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-up.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-down.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-down.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-right.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-right.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-left.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-move-left.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-up.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-up.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-down.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-down.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-right.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-right.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-left.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-push-left.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-up.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-up.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-down.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-down.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-right.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-right.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-left.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-hurt-left.png`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-dead.atlas`,
    `${ServiceIp}images/equip/nvxia-xiaojitoushi/nvxia-xiaojitoushi-dead.png`
  ];

  // src/init.ts
  var body = document.getElementsByTagName("body")[0];
  body.setAttribute("style", body.getAttribute("style") + 'cursor: url("images/system/cursor.png"), auto');
  var ConnectorIp = "";
  var ConnectorPort = 0;
  var init = function() {
    var pomelo = window.pomelo;
    pomelo.username = Math.random() + "";
    queryEntry(pomelo.username, (host, port) => {
      ConnectorIp = host;
      ConnectorPort = port;
      pomelo.init({
        host,
        port,
        log: true
      }, () => {
        console.log("connect success", host);
      });
    });
  };
  function queryEntry(uid, callback) {
    var pomelo = window.pomelo;
    var route = "gate.gateHandler.queryEntry";
    pomelo.init({
      host: GateServerIp,
      port: GateServerPort,
      log: true
    }, function() {
      pomelo.request(route, {
        uid
      }, function(data) {
        pomelo.disconnect();
        if (data.code === 500) {
          console.log("login error");
          return;
        }
        callback(data.host, data.port);
      });
    });
  }
  var init_default = init;

  // src/runtime/GameLoad.ts
  var { regClass: regClass16 } = Laya;
  var LoadRes = class extends GameLoadBase {
    constructor() {
      super(...arguments);
      this.bg = new Laya.Sprite();
      this.rate = 1;
      this.loadedCount = 0;
      this.resourceList = [
        // 系統相關
        `${ServiceIp}images/system/panelAtlas.atlas`,
        `${ServiceIp}images/system/panelAtlas.png`,
        // 登录相关
        `${ServiceIp}images/login/login-ui.jpg`,
        `${ServiceIp}images/login/login-btn.png`,
        `${ServiceIp}images/login/login-btn-down.png`,
        `${ServiceIp}images/login/registe-btn.png`,
        `${ServiceIp}images/login/registe-btn-down.png`,
        `${ServiceIp}images/login/register.png`,
        `${ServiceIp}images/login/create-role.png`,
        `${ServiceIp}images/login/select-role.png`,
        // `${ServiceIp}images/login/select-role-panel.png`,
        `${ServiceIp}images/login/role-shengnv.jpg`,
        `${ServiceIp}images/login/role-heihuo.jpg`,
        `${ServiceIp}images/login/role-jianke.jpg`,
        `${ServiceIp}images/login/role-nvxia.jpg`,
        `${ServiceIp}images/login/role-desc-panel.png`,
        `${ServiceIp}images/login/role-list.png`,
        `${ServiceIp}images/login/create-role-submit.png`,
        `${ServiceIp}images/login/create-role-submit-down.png`,
        `${ServiceIp}images/login/create-role-return.png`,
        // 游戏大厅
        `${ServiceIp}images/login/select-role-head.png`,
        `${ServiceIp}images/hall/menu/shop-btn.png`,
        `${ServiceIp}images/hall/menu/jishou-btn.png`,
        `${ServiceIp}images/hall/menu/pet-btn.png`,
        `${ServiceIp}images/hall/menu/menu-family.png`,
        `${ServiceIp}images/hall/menu/menu-bag.png`,
        `${ServiceIp}images/hall/menu/menu-task.png`,
        `${ServiceIp}images/hall/menu/menu-trade.png`,
        `${ServiceIp}images/hall/menu/menu-rank.png`,
        `${ServiceIp}images/hall/menu/menu-mail.png`,
        `${ServiceIp}images/hall/menu/menu-menu.png`,
        `${ServiceIp}images/hall/room-list-bg.png`,
        `${ServiceIp}images/hall/role-list-bg.png`,
        `${ServiceIp}images/hall/xiaoma.png`,
        `${ServiceIp}images/hall/all.png`,
        `${ServiceIp}images/hall/all-select.png`,
        `${ServiceIp}images/hall/waiting.png`,
        `${ServiceIp}images/hall/waiting-select.png`,
        `${ServiceIp}images/hall/go.png`,
        `${ServiceIp}images/hall/select.png`,
        `${ServiceIp}images/hall/pre.png`,
        `${ServiceIp}images/hall/next.png`,
        `${ServiceIp}images/hall/number/sperate.png`,
        `${ServiceIp}images/hall/number/sperate2.png`,
        `${ServiceIp}images/hall/room/room-bg.png`,
        `${ServiceIp}images/hall/room/room-bg.atlas`,
        `${ServiceIp}images/hall/room/room-item-gaming.png`,
        `${ServiceIp}images/hall/room/room-item-gaming.atlas`,
        `${ServiceIp}images/hall/number/room-number.png`,
        `${ServiceIp}images/hall/number/room-number.atlas`,
        `${ServiceIp}images/hall/room-type/flag.png`,
        `${ServiceIp}images/hall/room-type/flag.atlas`,
        `${ServiceIp}images/hall/tab.png`,
        `${ServiceIp}images/hall/tab.atlas`,
        `${ServiceIp}images/hall/create.png`,
        `${ServiceIp}images/hall/create.atlas`,
        `${ServiceIp}images/hall/opt-panel.png`,
        // `${ServiceIp}images/hall/create/create-room-panel.png`,
        // `${ServiceIp}images/hall/create/create-room-panel.png`,
        // `${ServiceIp}images/hall/create/room-type-pvp.png`,
        // `${ServiceIp}images/hall/create/room-type-pvp2.png`,
        // `${ServiceIp}images/hall/create/room-type-pve.png`,
        `${ServiceIp}images/hall/send.png`,
        // `${ServiceIp}images/hall/number/roomId0.png`,
        // `${ServiceIp}images/hall/number/roomId1.png`,
        // `${ServiceIp}images/hall/number/roomId2.png`,
        // `${ServiceIp}images/hall/number/roomId3.png`,
        // `${ServiceIp}images/hall/number/roomId4.png`,
        // `${ServiceIp}images/hall/number/roomId5.png`,
        // `${ServiceIp}images/hall/number/roomId6.png`,
        // `${ServiceIp}images/hall/number/roomId7.png`,
        // `${ServiceIp}images/hall/number/roomId8.png`,
        // `${ServiceIp}images/hall/number/roomId9.png`,
        // 房间
        `${roomBgUrl}.atlas`,
        `${roomBgUrl}.png`,
        `${roomBtnUrl}.atlas`,
        `${roomBtnUrl}.png`,
        `${ServiceIp}images/room/label.atlas`,
        `${ServiceIp}images/room/label.png`,
        `${ServiceIp}images/room/room-part.jpg`,
        // 玩家相关
        `${ServiceIp}images/player/other.png`,
        `${ServiceIp}images/player/other.atlas`,
        `${ServiceIp}images/player/baohuzhao.atlas`,
        `${ServiceIp}images/player/rebirth.atlas`,
        `${ServiceIp}images/player/rebirth.png`,
        // UI界面
        `${myUiUrl}.atlas`,
        `${myUiUrl}.png`,
        `${ServiceIp}images/ui/texiao-hecheng.atlas`,
        `${ServiceIp}images/ui/texiao-hecheng.png`,
        `${ServiceIp}images/ui/texiao-qianghua.atlas`,
        `${ServiceIp}images/ui/texiao-qianghua.png`,
        `${ServiceIp}images/ui/texiao-xiangqian.atlas`,
        `${ServiceIp}images/ui/texiao-xiangqian.png`,
        `${ServiceIp}images/login/login-loading.png`,
        `${ServiceIp}images/login/login-loading.atlas`,
        // 装备
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-default-up.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-default-down.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-default-right.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-default-left.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-move-up.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-move-down.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-move-right.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-move-left.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-push-up.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-push-down.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-push-right.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-push-left.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-hurt-up.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-hurt-down.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-hurt-right.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-hurt-left.atlas`,
        // `${ServiceIp}images/equip/nv-tianshiyi/nv-tianshiyi-dead.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-default-up.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-default-down.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-default-right.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-default-left.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-move-up.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-move-down.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-move-right.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-move-left.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-push-up.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-push-down.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-push-right.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-push-left.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-hurt-up.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-hurt-down.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-hurt-right.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-hurt-left.atlas`,
        // `${ServiceIp}images/equip/nvxia-huangguan/nvxia-huangguan-dead.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-default-up.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-default-down.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-default-right.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-default-left.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-move-up.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-move-down.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-move-right.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-move-left.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-push-up.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-push-down.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-push-right.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-push-left.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-hurt-up.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-hurt-down.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-hurt-right.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-hurt-left.atlas`,
        // `${ServiceIp}images/equip/tianshichi/tianshichi-dead.atlas`,
        ...huayangjinzhuo,
        ...bingjingluoxia,
        ...bingjinglengyue,
        ...bingjingchuyang,
        ...heihuoshouhuan,
        ...zijinjiaokui,
        ...ziqiupifeng,
        ...lierenzhuang,
        ...huangjinlonglinjia,
        ...huangjinpanlongkui,
        ...huangjinyanyuedao,
        ...huangjinyoulongwan,
        ...yuanyuewandao,
        ...nihongcaiyi,
        ...nihongyingluo,
        ...businiaozhichi,
        ...businiaozhikui,
        ...businiaozhijia,
        ...honglongkui,
        ...honglonglinjia,
        ...longzhiyi,
        ...jinlian,
        ...fengpi,
        ...heyeruyi,
        ...fenghuanghuayi,
        ...fenghuangyushi,
        ...fengyitianxiang,
        // 天使套
        ...shengnvtianshichi,
        ...shengnvtianshiguanghuan,
        ...shengnvtianshiyi,
        ...nvxiatianshichi,
        ...nvxiatianshiguanghuan,
        ...nvxiatianshiyi,
        ...jianketianshichi,
        ...jianketianshiguanghuan,
        ...jianketianshiyi,
        ...heihuotianshichi,
        ...heihuotianshiguanghuan,
        ...heihuotianshiyi,
        // 80套
        ...chiyunuding,
        ...yudiankuangjia,
        ...huoyanchi,
        ...yeyingxingkui,
        ...yezhanhuanjia,
        ...yeguangbeichi,
        ...rongxiujinfu,
        ...rongxiuqiuguan,
        ...rongxiuyuyi,
        ...bingmangshengfu,
        ...liuguangbingshi,
        ...yicaidiechi,
        // 布老虎
        // ...heihuobulaohushoutao,
        ...heihuobulaohutou,
        ...heihuobulaohuweiba,
        ...heihuobulaohuyi,
        // ...jiankebulaohushoutao,
        ...jiankebulaohutou,
        ...jiankebulaohuweiba,
        ...jiankebulaohuyi,
        // ...shengnvbulaohushoutao,
        ...shengnvbulaohutou,
        ...shengnvbulaohuweiba,
        ...shengnvbulaohuyi,
        // ...nvxiabulaohushoutao,
        ...nvxiabulaohutou,
        ...nvxiabulaohuweiba,
        ...nvxiabulaohuyi,
        // 沙滩装
        ...heihuopangxiemao,
        ...heihuoshatanzhuang,
        ...jiankepangxiemao,
        ...jiankeshatanzhuang,
        ...nvxiapangxiemao,
        ...nvxiashatanzhuang,
        ...shengnvpangxiemao,
        ...shengnvshatanzhuang,
        // 小鸡头饰
        ...heihuoxiaojitoushi,
        ...jiankexiaojitoushi,
        ...nvxiaxiaojitoushi,
        ...shengnvxiaojitoushi
      ];
      this.gameList = [
        // 怪物
        `${ServiceIp}images/monster/monster-rebirth.atlas`,
        `${ServiceIp}images/monster/monster-rebirth.png`,
        ...linghun,
        ...tianshu,
        ...caichong,
        ...shuoshu,
        ...daocaoren,
        ...feichong,
        ...daoyao,
        ...guibing,
        ...daozei,
        ...denglong,
        ...denglongmo,
        // 石头
        `${ServiceIp}images/map/stone-fire-break.atlas`,
        `${ServiceIp}images/map/stone-fire-break.png`,
        `${ServiceIp}images/cover/fire-box/fire-bomb.atlas`,
        `${ServiceIp}images/map/stone-ice-break.atlas`,
        `${ServiceIp}images/map/stone-ice-break.png`,
        `${ServiceIp}images/cover/ice-box/ice-bomb.atlas`,
        `${ServiceIp}images/map/stone-baoxiang-break.atlas`,
        `${ServiceIp}images/map/stone-baoxiang-break.png`,
        `${ServiceIp}images/cover/track-left.atlas`,
        `${ServiceIp}images/cover/track-right.atlas`,
        `${ServiceIp}images/cover/track-up.atlas`,
        `${ServiceIp}images/cover/track-down.atlas`,
        `${coverUrl}.png`,
        `${coverUrl}.atlas`,
        `${ServiceIp}images/map/cover-dest.png`,
        `${ServiceIp}images/map/cover-dest.atlas`,
        `${stoneUrl}.png`,
        `${stoneUrl}.atlas`,
        `${ServiceIp}images/map/stone-xiaoguocun1-break.png`,
        `${ServiceIp}images/map/stone-xiaoguocun1-break.atlas`,
        `${ServiceIp}images/map/stone-xiaoguocun2-break.png`,
        `${ServiceIp}images/map/stone-xiaoguocun2-break.atlas`,
        `${ServiceIp}images/map/stone-xiaoguocun3-break.png`,
        `${ServiceIp}images/map/stone-xiaoguocun3-break.atlas`,
        `${ServiceIp}images/map/stone-changancheng1-break.png`,
        `${ServiceIp}images/map/stone-changancheng1-break.atlas`,
        `${ServiceIp}images/map/stone-changancheng2-break.png`,
        `${ServiceIp}images/map/stone-changancheng2-break.atlas`,
        `${ServiceIp}images/map/stone-luanshilin1-break.png`,
        `${ServiceIp}images/map/stone-luanshilin1-break.atlas`,
        `${ServiceIp}images/map/stone-luanshilin2-break.png`,
        `${ServiceIp}images/map/stone-luanshilin2-break.atlas`,
        `${ServiceIp}images/map/stone-luanshilin3-break.png`,
        `${ServiceIp}images/map/stone-luanshilin3-break.atlas`,
        `${ServiceIp}images/map/stone-luanshilin4-break.png`,
        `${ServiceIp}images/map/stone-luanshilin4-break.atlas`,
        `${ServiceIp}images/map/stone-bingling1-break.png`,
        `${ServiceIp}images/map/stone-bingling1-break.atlas`,
        `${ServiceIp}images/map/change-direction-up.png`,
        `${ServiceIp}images/map/change-direction-up.atlas`,
        `${ServiceIp}images/map/change-direction-down.png`,
        `${ServiceIp}images/map/change-direction-down.atlas`,
        `${ServiceIp}images/map/change-direction-left.png`,
        `${ServiceIp}images/map/change-direction-left.atlas`,
        `${ServiceIp}images/map/change-direction-right.png`,
        `${ServiceIp}images/map/change-direction-right.atlas`,
        // 道具
        `${collectUrl}.png`,
        `${collectUrl}.atlas`,
        `${goodsDefaultUrl}.png`,
        `${goodsDefaultUrl}.atlas`,
        `${goodsBagUrl}.png`,
        `${goodsBagUrl}.atlas`,
        // 声音
        `${ServiceIp}sound/ready.wav`,
        `${ServiceIp}music/default.mp3`,
        `${ServiceIp}music/tanxian.mp3`,
        `${ServiceIp}music/luandou.mp3`,
        `${ServiceIp}sound/push-box.wav`,
        `${ServiceIp}sound/box-break.wav`,
        `${ServiceIp}sound/monster-hurt.wav`,
        `${ServiceIp}sound/fire-bomb.wav`,
        `${ServiceIp}sound/ice-bomb.wav`,
        `${ServiceIp}sound/iced.wav`,
        `${ServiceIp}sound/dead-fly.wav`,
        `${ServiceIp}sound/shengnv-dead.wav`,
        `${ServiceIp}sound/heihuo-dead.wav`,
        `${ServiceIp}sound/nvxia-dead.wav`,
        `${ServiceIp}sound/jianke-dead.wav`,
        `${ServiceIp}sound/game-start.wav`,
        `${ServiceIp}sound/baoxiang-break.wav`,
        `${ServiceIp}sound/game-win.wav`,
        `${ServiceIp}sound/game-fail.wav`,
        `${ServiceIp}sound/pickup.wav`,
        // 操作
        `${ServiceIp}images/option/push.png`,
        `${ServiceIp}images/option/weakpush.png`,
        `${ServiceIp}images/option/change.png`,
        `${ServiceIp}images/option/rebirth.png`,
        `${ServiceIp}images/option/joystickAxis.png`,
        `${ServiceIp}images/option/joystickBG.png`,
        // 玩家
        `${ServiceIp}images/player/ice/shengnv-ice.atlas`,
        `${ServiceIp}images/player/ice/nvxia-ice.atlas`,
        `${ServiceIp}images/player/ice/heihuo-ice.atlas`,
        `${ServiceIp}images/player/ice/jianke-ice.atlas`,
        // 其他
        `${ServiceIp}images/game/gameAtlas.atlas`,
        `${ServiceIp}images/game/gameAtlas.png`,
        `${ServiceIp}images/game/other/player-miss.atlas`,
        `${ServiceIp}images/game/other/player-miss.png`,
        `${ServiceIp}images/player/dead.atlas`,
        `${ServiceIp}images/player/dead.png`,
        // `${ServiceIp}images/player/hp.png`
        // 加载地图
        `${ServiceIp}images/map/1-1.jpg`,
        `${ServiceIp}images/map/1-2.jpg`,
        `${ServiceIp}images/map/1-3.jpg`,
        `${ServiceIp}images/map/2-1.jpg`,
        `${ServiceIp}images/map/2-2.jpg`,
        `${ServiceIp}images/map/2-7.jpg`,
        `${ServiceIp}images/map/2-9.jpg`,
        `${ServiceIp}images/map/3-1.jpg`,
        `${ServiceIp}images/map/3-6.jpg`,
        `${ServiceIp}images/map/3-7.jpg`,
        `${ServiceIp}images/map/5-2.jpg`,
        `${ServiceIp}images/map/7-1.jpg`,
        `${ServiceIp}images/map/11-1.jpg`
      ];
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.bg.size(DeviceHeight * bgRate2, DeviceHeight);
      this.bg.pos((DeviceWidth - this.bg.width) / 2, 0);
      this.bg.loadImage(`${ServiceIp}images/login/loading-ui.jpg`);
      this.addChild(this.bg);
      this.rate = this.bg.width / bgInfo2.width;
      let loading = new Laya.Animation();
      loading.source = `${ServiceIp}images/login/res-loading.atlas`;
      loading.pos(240 * PixelRatio * this.rate, 400 * PixelRatio * this.rate);
      loading.scale(this.rate * PixelRatio, this.rate * PixelRatio);
      loading.interval = 100;
      loading.play(false);
      this.bg.addChild(loading);
      this.progressS = new Laya.Text();
      this.progressS.pos(570 * PixelRatio * this.rate, 470 * PixelRatio * this.rate);
      this.progressS.fontSize = 36 * PixelRatio * this.rate;
      this.progressS.color = "#f60f60";
      this.bg.addChild(this.progressS);
      let versionS = new Laya.Label("版本：" + version);
      versionS.pos(570 * PixelRatio * this.rate, 508 * PixelRatio * this.rate);
      versionS.fontSize = 12 * PixelRatio * this.rate;
      versionS.color = "#f60f60";
      this.bg.addChild(versionS);
    }
    onOpened(param) {
      init_default();
      playMusic(`${ServiceIp}music/default.mp3`);
      Laya.loader.load([`${ServiceIp}images/login/loading-ui.jpg`, `${ServiceIp}images/login/res-loading.png`, `${ServiceIp}images/login/res-loading.atlas`], null, Laya.Handler.create(this, () => {
        this.initUI();
        this.preloadResources();
      }));
    }
    preloadResources() {
      Laya.loader.load([...this.resourceList, ...this.gameList], Laya.Handler.create(this, () => {
        Laya.Scene.open("scene/login.ls", true);
      }), Laya.Handler.create(this, this.onProgress, null, false));
    }
    onProgress(progress) {
      this.progressS.text = Math.floor(progress * 100) + "%";
    }
  };
  LoadRes = __decorateClass([
    regClass16("c9jF_59JQlSBszTIb4B7Jw")
  ], LoadRes);

  // src/entity/ui/menu/MenuModify.ts
  var MenuModify = class extends Laya.Sprite {
    constructor(parents, closeCb) {
      super();
      this.rate = 1;
      this.chargeRequest = false;
      this.parents = parents;
      this.closeCb = closeCb;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.init();
    }
    init() {
      this.loadImage(`${roomBgUrl}/empty-panel.png`);
      this.size(500 * PixelRatio * this.rate, 400 * PixelRatio * this.rate);
      let content = new Laya.VBox();
      content.size(this.width, this.height);
      content.pos(0, 0);
      content.space = 10 * PixelRatio * this.rate;
      content.align = "center";
      this.addChild(content);
      let pad3 = new Laya.Sprite();
      pad3.height = 10 * PixelRatio * this.rate;
      content.addChild(pad3);
      let phonePanel = new Laya.HBox();
      phonePanel.width = 200 * PixelRatio * this.rate;
      phonePanel.align = "center";
      phonePanel.space = 20 * PixelRatio * this.rate;
      content.addChild(phonePanel);
      let phoneText = new Laya.Label("修改登录手机号");
      phoneText.y = 5 * PixelRatio * this.rate;
      phoneText.fontSize = 12 * PixelRatio * this.rate;
      phoneText.color = "black";
      phonePanel.addChild(phoneText);
      let phoneCon = new Laya.Sprite();
      phoneCon.size(152 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      phoneCon.graphics.drawRect(0, 0, phoneCon.width, phoneCon.height, "#ccc");
      phonePanel.addChild(phoneCon);
      let phone = new Laya.Input();
      phone.size(150 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
      phone.pos(1 * PixelRatio * this.rate, 1 * PixelRatio * this.rate);
      phoneCon.addChild(phone);
      let pwdPanel = new Laya.HBox();
      pwdPanel.width = 200 * PixelRatio * this.rate;
      pwdPanel.align = "center";
      pwdPanel.space = 20 * PixelRatio * this.rate;
      content.addChild(pwdPanel);
      let pwdText = new Laya.Label("修改密码");
      pwdText.y = 5 * PixelRatio * this.rate;
      pwdText.fontSize = 12 * PixelRatio * this.rate;
      pwdText.color = "black";
      pwdPanel.addChild(pwdText);
      let pwdCon = new Laya.Sprite();
      pwdCon.size(152 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      pwdCon.graphics.drawRect(0, 0, pwdCon.width, pwdCon.height, "#ccc");
      pwdPanel.addChild(pwdCon);
      let pwdInput = new Laya.Input();
      pwdInput.size(150 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
      pwdInput.pos(1 * PixelRatio * this.rate, 1 * PixelRatio * this.rate);
      pwdCon.addChild(pwdInput);
      let optPanel = new Laya.HBox();
      optPanel.width = 200 * PixelRatio * this.rate;
      optPanel.align = "center";
      optPanel.space = 50 * PixelRatio * this.rate;
      content.addChild(optPanel);
      let submitBtn = getSubmitBtn("确定", this.rate);
      submitBtn.y = 10 * PixelRatio * this.rate;
      optPanel.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        if (this.chargeRequest)
          return;
        this.chargeRequest = true;
        request("area.gameHandler.changePhoneAndPwd", { phone: phone.text, pwd: pwdInput.text, money: 0 }, (res) => {
          this.chargeRequest = false;
          if (res.code === 200) {
            showTips("修改成功");
          } else {
            showTips(res.msg || "修改失败");
          }
        });
      });
      let cancelBtn = getSubmitBtn("取消", this.rate);
      cancelBtn.y = 10 * PixelRatio * this.rate;
      cancelBtn.on(Laya.Event.CLICK, () => {
        this.closeCb.call(this.parents);
      });
      optPanel.addChild(cancelBtn);
    }
  };

  // src/entity/ui/menu/MenuSetting.ts
  var optNameList = ["keyChange", "keyWeakpush", "keyPush", "keyRebirth", "keyDouble"];
  var MenuSetting = class extends Laya.Sprite {
    constructor(parents, closeCb) {
      super();
      this.rate = 1;
      this.optRadioList = [];
      this.role = RoleService.getInstance().role;
      this.optKeyCodeList = [];
      this.parents = parents;
      this.closeCb = closeCb;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.init();
    }
    init() {
      var _a, _b;
      this.loadImage(`${roomBgUrl}/setting.png`);
      this.size(500 * PixelRatio * this.rate, 400 * PixelRatio * this.rate);
      let closeBtn = new Laya.Image(`${roomBtnUrl}/close.png`);
      closeBtn.size(closeBtn.width * PixelRatio * this.rate, closeBtn.height * PixelRatio * this.rate);
      closeBtn.pos(this.width - 40 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      this.addChild(closeBtn);
      closeBtn.on(Laya.Event.CLICK, () => {
        this.closeCb.call(this.parents);
        console.log(this.role.gameConfig);
        request("area.playerHandler.setConfig", { config: this.role.gameConfig });
      });
      for (let i = 0; i < 3; i++) {
        let radio = new Laya.Image(`${roomBtnUrl}/radio.png`);
        radio.size(radio.width * PixelRatio * this.rate, radio.height * PixelRatio * this.rate);
        radio.pos(8 * PixelRatio * this.rate, (90 + i * 59) * PixelRatio * this.rate);
        this.optRadioList.push(radio);
        this.addChild(radio);
        radio.on(Laya.Event.CLICK, this, () => {
          this.onSelectOpt(i);
        });
      }
      this.optRadioList[this.role.gameConfig.optType].skin = `${roomBtnUrl}/radio-select.png`;
      let keyUpLabel = new Laya.Input();
      keyUpLabel.text = String.fromCharCode(this.role.gameConfig.keyUp);
      keyUpLabel.name = "keyUp";
      keyUpLabel.align = "center";
      keyUpLabel.size(34 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      keyUpLabel.pos(44 * PixelRatio * this.rate, 232 * PixelRatio * this.rate);
      this.optKeyCodeList.push(keyUpLabel);
      this.addChild(keyUpLabel);
      let keyDownLabel = new Laya.Input();
      keyDownLabel.text = String.fromCharCode(this.role.gameConfig.keyDown);
      keyDownLabel.name = "keyDown";
      keyDownLabel.align = "center";
      keyDownLabel.size(34 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      keyDownLabel.pos(109 * PixelRatio * this.rate, 232 * PixelRatio * this.rate);
      this.optKeyCodeList.push(keyDownLabel);
      this.addChild(keyDownLabel);
      let keyLeftLabel = new Laya.Input();
      keyLeftLabel.text = String.fromCharCode(this.role.gameConfig.keyLeft);
      keyLeftLabel.name = "keyLeft";
      keyLeftLabel.align = "center";
      keyLeftLabel.size(34 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      keyLeftLabel.pos(44 * PixelRatio * this.rate, 257 * PixelRatio * this.rate);
      this.optKeyCodeList.push(keyLeftLabel);
      this.addChild(keyLeftLabel);
      let keyRightLabel = new Laya.Input();
      keyRightLabel.text = String.fromCharCode(this.role.gameConfig.keyRight);
      keyRightLabel.name = "keyRight";
      keyRightLabel.align = "center";
      keyRightLabel.size(34 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      keyRightLabel.pos(109 * PixelRatio * this.rate, 257 * PixelRatio * this.rate);
      this.optKeyCodeList.push(keyRightLabel);
      this.addChild(keyRightLabel);
      for (let i = 0; i < optNameList.length; i++) {
        let keyCodeLabel = new Laya.Input();
        keyCodeLabel.name = optNameList[i];
        keyCodeLabel.text = String.fromCharCode(this.role.gameConfig[keyCodeLabel.name]);
        keyCodeLabel.align = "center";
        keyCodeLabel.size(34 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
        keyCodeLabel.pos(181 * PixelRatio * this.rate, (230 + i * 25.5) * PixelRatio * this.rate);
        this.optKeyCodeList.push(keyCodeLabel);
        this.addChild(keyCodeLabel);
      }
      for (let i = 0; i < this.optKeyCodeList.length; i++) {
        let keyCodeLabel = this.optKeyCodeList[i];
        keyCodeLabel.on(Laya.Event.KEY_DOWN, this, (e) => {
          this.onKeyCodeClick(e, keyCodeLabel);
        });
      }
      let startHandleRadio = new Laya.Image(((_a = this.role.gameConfig) == null ? void 0 : _a.startHandle) ? `${roomBtnUrl}/radio-select.png` : `${roomBtnUrl}/radio.png`);
      startHandleRadio.size(startHandleRadio.width * PixelRatio * this.rate, startHandleRadio.height * PixelRatio * this.rate);
      startHandleRadio.pos(8 * PixelRatio * this.rate, 305 * PixelRatio * this.rate);
      this.addChild(startHandleRadio);
      startHandleRadio.on(Laya.Event.CLICK, this, () => {
        this.handleClickConfig(startHandleRadio, "startHandle");
      });
      let startMusicRadio = new Laya.Image(((_b = this.role.gameConfig) == null ? void 0 : _b.startMusic) ? `${roomBtnUrl}/radio-select.png` : `${roomBtnUrl}/radio.png`);
      startMusicRadio.size(startMusicRadio.width * PixelRatio * this.rate, startMusicRadio.height * PixelRatio * this.rate);
      startMusicRadio.pos(230 * PixelRatio * this.rate, 225 * PixelRatio * this.rate);
      this.addChild(startMusicRadio);
      startMusicRadio.on(Laya.Event.CLICK, this, () => {
        this.handleClickConfig(startMusicRadio, "startMusic");
        GameConfig.startMusic = this.role.gameConfig.startMusic;
        if (!GameConfig.startMusic) {
          stopMusic();
        } else {
          playMusic(`${ServiceIp}music/default.mp3`);
        }
      });
    }
    handleClickConfig(handler, key) {
      this.role.gameConfig[key] = this.role.gameConfig[key] ? 0 : 1;
      handler.skin = this.role.gameConfig[key] ? `${roomBtnUrl}/radio-select.png` : `${roomBtnUrl}/radio.png`;
    }
    onKeyCodeClick(e, keyCodeLabel) {
      let code = e.keyCode;
      let str = String.fromCodePoint(code);
      setTimeout(() => {
        keyCodeLabel.text = str;
      }, 0);
      this.role.setOptConfig(2, { [keyCodeLabel.name]: code });
    }
    onSelectOpt(index) {
      if (this.role.gameConfig.optType === index)
        return;
      for (let i = 0; i < this.optRadioList.length; i++) {
        this.optRadioList[i].skin = `${roomBtnUrl}/radio.png`;
      }
      this.optRadioList[index].skin = `${roomBtnUrl}/radio-select.png`;
      this.role.setOptConfig(index);
    }
  };

  // src/entity/ui/menu/MenuList.ts
  var menuList2 = [
    { name: "更改手机号" },
    { name: "" },
    { name: "" },
    { name: "" },
    { name: "" },
    { name: "" },
    { name: "" },
    { name: "设置" }
  ];
  var MenuList = class extends Laya.Sprite {
    constructor(parentNode) {
      super();
      this.rate = 1;
      this.chargeRequest = false;
      this.parentNode = parentNode;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.init();
    }
    init() {
      this.loadImage(`${myUiUrl}/right-menu.png`);
      this.size(this.width * PixelRatio * this.rate, this.height * PixelRatio * this.rate);
      for (let i = 0; i < menuList2.length; i++) {
        let menu = menuList2[i];
        let menuText = new Laya.Label();
        menuText.width = 120 * PixelRatio * this.rate;
        menuText.pos(25 * PixelRatio * this.rate, 10 * PixelRatio * this.rate + i * 22 * PixelRatio * this.rate);
        menuText.text = menu.name;
        menuText.fontSize = 12 * PixelRatio * this.rate;
        menuText.color = "black";
        this.addChild(menuText);
        menuText.on(Laya.Event.CLICK, this, (e) => {
          this.onClickMenuItem(e, menu);
        });
      }
    }
    onClickMenuItem(e, item) {
      e.stopPropagation();
      if (this.menuDialog)
        return;
      switch (item.name) {
        case "更改手机号":
          this.menuDialog = showDialog(this.parentNode.parentPanel, new MenuModify(this, this.onCloseMenu), null, -1, true);
          break;
        case "设置":
          this.menuDialog = showDialog(this.parentNode.parentPanel, new MenuSetting(this, this.onCloseMenu), null, -1, true);
          break;
      }
      this.parentNode.removeChild(this);
    }
    onCloseMenu() {
      hideDialog(this.parentNode.parentPanel, this.menuDialog);
      this.menuDialog = null;
    }
  };

  // src/entity/ui/MyLabel.ts
  var MyLabel = class extends Laya.Label {
    constructor(text, fontSize, color) {
      super();
      this.fontSize = fontSize;
      this.color = color;
      this.text = text;
      this.valign = "middle";
      this.align = "center";
    }
  };

  // src/entity/ui/Rank.ts
  var Rank = class extends Laya.Sprite {
    constructor() {
      super();
      this.rate = 1;
      this.rankBtnList = [];
      this.rankTabList = [
        { name: "zhanli" },
        { name: "wujinshilian" },
        { name: "jifen" }
      ];
      this.rankList = [
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {}
      ];
      this.currentRank = 0;
      this.currentPage = 0;
      this.totalPage = 5;
      this.applyRequest = false;
      this.role = RoleService.getInstance().role;
      this.initUI();
      this.getRankData();
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.loadImage(`${myUiUrl}/bg-rank.png`);
      this.size(this.width * PixelRatio * this.rate, this.height * PixelRatio * this.rate);
      let close = new Laya.Image(`${roomBtnUrl}/close.png`);
      close.size(close.width * PixelRatio * this.rate, close.height * PixelRatio * this.rate);
      close.pos(this.width - 40 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
      close.on(Laya.Event.CLICK, () => {
        this.parentNode && this.parentNode.onCloseRank();
      });
      this.addChild(close);
      let rankBtnGroup = new Laya.HBox();
      rankBtnGroup.pos(10 * PixelRatio * this.rate, 49 * PixelRatio * this.rate);
      this.addChild(rankBtnGroup);
      for (let i = 0; i < this.rankTabList.length; i++) {
        let rank = this.rankTabList[i];
        let rankBtn = new Laya.Image(`${myUiUrl}/btn-rank-${rank.name}.png`);
        rankBtn.size(rankBtn.width * PixelRatio * this.rate, rankBtn.height * PixelRatio * this.rate);
        rankBtnGroup.addChild(rankBtn);
        this.rankBtnList.push(rankBtn);
        rankBtn.on(Laya.Event.CLICK, this, () => {
          this.handleClickRankBtn(i);
        });
      }
      this.renderCurrentRank();
      let applyBtn = getSubmitBtn("申请排名（50银）", this.rate);
      applyBtn.pos(250 * PixelRatio * this.rate, 380 * PixelRatio * this.rate);
      this.addChild(applyBtn);
      applyBtn.on(Laya.Event.CLICK, this, this.applyRank);
      let pre = new Laya.Image(`${ServiceIp}images/hall/pre.png`);
      pre.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      pre.pos(378 * PixelRatio * this.rate, 380 * PixelRatio * this.rate);
      this.addChild(pre);
      pre.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage === 0)
          return;
        this.currentPage--;
        this.currentLabel.text = pad(this.currentPage + 1);
        this.renderRankBody();
      });
      let next = new Laya.Image(`${ServiceIp}images/hall/next.png`);
      next.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      next.pos(475 * PixelRatio * this.rate, 380 * PixelRatio * this.rate);
      this.addChild(next);
      next.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage >= this.totalPage - 1)
          return;
        this.currentPage++;
        this.currentLabel.text = pad(this.currentPage + 1);
        this.renderRankBody();
      });
      let sperate = new Laya.Image(`${ServiceIp}images/hall/number/sperate2.png`);
      sperate.size(8 * PixelRatio * this.rate, 15 * PixelRatio * this.rate);
      sperate.pos(435 * PixelRatio * this.rate, 386 * PixelRatio * this.rate);
      this.addChild(sperate);
      this.currentLabel = new Laya.Label();
      this.currentLabel.text = pad(this.currentPage + 1);
      this.currentLabel.pos(415 * PixelRatio * this.rate, 383 * PixelRatio * this.rate);
      this.currentLabel.fontSize = 20 * PixelRatio * this.rate;
      this.currentLabel.color = "white";
      this.addChild(this.currentLabel);
      let totalLabel = new Laya.Label();
      totalLabel.text = pad(this.totalPage);
      totalLabel.pos(444 * PixelRatio * this.rate, 383 * PixelRatio * this.rate);
      totalLabel.fontSize = 20 * PixelRatio * this.rate;
      totalLabel.color = "white";
      this.addChild(totalLabel);
    }
    getRankData() {
      request("area.gameHandler.getRankList", { rankIndex: this.currentRank }, (res) => {
        if (res.code === 200) {
          this.rankList = res.data;
          this.renderRankBody();
        }
      });
    }
    applyRank() {
      if (this.applyRequest)
        return;
      this.applyRequest = true;
      request("area.playerHandler.applyRank", { rankIndex: 0 }, (res) => {
        console.log(res);
        this.applyRequest = false;
        if (res.code === 200) {
          showTips("恭喜您已上榜");
          this.role.gold -= 50;
          setTimeout(() => {
            this.getRankData();
          }, 800);
        } else {
          if (res.code === -1) {
            showTips("申请失败, 请刷新尝试");
          } else if (res.code === -2) {
            showTips("银币不够");
          } else if (res.code === -3) {
            showTips("您未上榜");
            this.role.gold -= 50;
          } else if (res.code === -4) {
            showTips("战力没有上次高，名次未发生变化");
            this.role.gold -= 50;
          } else {
            showTips("申请失败");
          }
        }
      });
    }
    handleClickRankBtn(index) {
      this.setCurrentRank(index);
      this.currentPage = 0;
      this.currentLabel.text = pad(this.currentPage + 1);
      this.getRankData();
    }
    setCurrentRank(rankIndex) {
      this.rankBtnList[this.currentRank] && (this.rankBtnList[this.currentRank].skin = `${myUiUrl}/btn-rank-${this.rankTabList[this.currentRank].name}.png`);
      this.currentRank = rankIndex;
      this.renderCurrentRank();
    }
    renderCurrentRank() {
      this.rankBtnList[this.currentRank] && (this.rankBtnList[this.currentRank].skin = `${myUiUrl}/btn-rank-${this.rankTabList[this.currentRank].name}-down.png`);
      if (this.rankTitle) {
        this.rankTitle.skin = `${myUiUrl}/title-rank-${this.rankTabList[this.currentRank].name}.png`;
      } else {
        this.rankTitle = new Laya.Image(`${myUiUrl}/title-rank-${this.rankTabList[this.currentRank].name}.png`);
        this.rankTitle.size(this.rankTitle.width * PixelRatio * this.rate, this.rankTitle.height * PixelRatio * this.rate);
        this.rankTitle.pos(20 * PixelRatio * this.rate, 90 * PixelRatio * this.rate);
        this.addChild(this.rankTitle);
      }
      if (!this.rankBody) {
        this.rankBody = new Laya.VBox();
        this.rankBody.size(470 * PixelRatio * this.rate, 225 * PixelRatio * this.rate);
        this.rankBody.pos(20 * PixelRatio * this.rate, 115 * PixelRatio * this.rate);
        this.addChild(this.rankBody);
      }
      if (!this.descLabel) {
        this.descLabel = new Laya.Label();
        this.descLabel.pos(20 * PixelRatio * this.rate, 350 * PixelRatio * this.rate);
        this.descLabel.fontSize = 14 * PixelRatio * this.rate;
        this.descLabel.color = "red";
        this.addChild(this.descLabel);
      }
      if (this.currentRank === 0) {
        this.descLabel.text = "总评价=等级×1.2+生命+力量×5+灵力×10+速度×100+幸运×10+必杀×10";
      } else if (this.currentRank === 1) {
        this.descLabel.text = "个人积分榜按积分排序";
      }
    }
    renderRankBody() {
      this.rankBody.removeChildren();
      let list2 = this.rankList.slice(this.currentPage * 10, (this.currentPage + 1) * 10);
      switch (this.currentRank) {
        case 0:
          this.renderZhanliRankBody(list2);
          break;
        case 1:
          this.renderJifenRankBody(list2);
          break;
        case 2:
          this.renderJifenRankBody(list2);
          break;
      }
    }
    renderZhanliRankBody(list2) {
      var _a;
      for (let i = 0; i < list2.length; i++) {
        let rankItem = new Laya.HBox();
        rankItem.space = 5 * PixelRatio * this.rate;
        rankItem.size(470 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.pos(0, (i * 23 + 1) * PixelRatio * this.rate);
        let orderLabel = new MyLabel(this.currentPage * 10 + i + 1 + "", 14 * PixelRatio * this.rate, "black");
        orderLabel.size(30 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(orderLabel);
        let levelLabel = new MyLabel(list2[i].level + "", 14 * PixelRatio * this.rate, "black");
        levelLabel.size(40 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(levelLabel);
        let nameLabel = new MyLabel((_a = list2[i].playerName) == null ? void 0 : _a.substring(0, 8), 14 * PixelRatio * this.rate, "black");
        nameLabel.size(110 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(nameLabel);
        let hpLabel = new MyLabel(list2[i].hp + "", 14 * PixelRatio * this.rate, "black");
        hpLabel.size(35 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(hpLabel);
        let powerLabel = new MyLabel(list2[i].power + "", 14 * PixelRatio * this.rate, "black");
        powerLabel.size(30 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(powerLabel);
        let mpLabel = new MyLabel(list2[i].mp + "", 14 * PixelRatio * this.rate, "black");
        mpLabel.size(30 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(mpLabel);
        let speedLabel = new MyLabel(list2[i].speed + "", 14 * PixelRatio * this.rate, "black");
        speedLabel.size(30 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(speedLabel);
        let luckyLabel = new MyLabel(list2[i].luckyValue + "", 14 * PixelRatio * this.rate, "black");
        luckyLabel.size(33 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(luckyLabel);
        let killLabel = new MyLabel(list2[i].killValue + "", 14 * PixelRatio * this.rate, "black");
        killLabel.size(33 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(killLabel);
        let pingjiaLabel = new MyLabel(list2[i].pingfen + "", 14 * PixelRatio * this.rate, "red");
        pingjiaLabel.size(50 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(pingjiaLabel);
        this.rankBody.addChild(rankItem);
      }
    }
    renderJifenRankBody(list2) {
      for (let i = 0; i < list2.length; i++) {
        let rankItem = new Laya.HBox();
        rankItem.space = 5 * PixelRatio * this.rate;
        rankItem.size(470 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.pos(0, (i * 23 + 1) * PixelRatio * this.rate);
        let orderLabel = new MyLabel(this.currentPage * 10 + i + 1 + "", 14 * PixelRatio * this.rate, "black");
        orderLabel.size(30 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(orderLabel);
        let levelLabel = new MyLabel(list2[i].starLevel + "*", 14 * PixelRatio * this.rate, "black");
        levelLabel.size(40 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(levelLabel);
        let nameLabel = new MyLabel(list2[i].playerNames, 14 * PixelRatio * this.rate, "black");
        nameLabel.size(330 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(nameLabel);
        let guanqiaLabel = new MyLabel(list2[i].guanqia + "", 14 * PixelRatio * this.rate, "red");
        guanqiaLabel.size(50 * PixelRatio * this.rate, 23 * PixelRatio * this.rate);
        rankItem.addChild(guanqiaLabel);
        this.rankBody.addChild(rankItem);
      }
    }
  };

  // src/util/common/ShopGoods.ts
  var ShopGoods = {
    "remen": [
      __spreadProps(__spreadValues({
        shopGoodsId: 12e3
      }, GoodsInfo[3011]), {
        youxibi: 200,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12001
      }, GoodsInfo[3500]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12002
      }, GoodsInfo[5003]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12003
      }, GoodsInfo[5004]), {
        youxibi: 150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12004
      }, GoodsInfo[5005]), {
        youxibi: 750,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12005
      }, GoodsInfo[5001]), {
        youxibi: 120,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 12006
      }, GoodsInfo[5002]), {
        youxibi: 400,
        count: 1
      })
    ],
    "equip": [
      {}
    ],
    "equip_shengnv": [
      __spreadProps(__spreadValues({
        shopGoodsId: 22001
      }, GoodsInfo[1070]), {
        youxibi: 2650,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22002
      }, GoodsInfo[1570]), {
        youxibi: 2930,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22003
      }, GoodsInfo[2070]), {
        youxibi: 2510,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22004
      }, GoodsInfo[2901]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22005
      }, GoodsInfo[1402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22006
      }, GoodsInfo[1901]), {
        youxibi: 480,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22007
      }, GoodsInfo[2402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22008
      }, GoodsInfo[1403]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22009
      }, GoodsInfo[2404]), {
        youxibi: 700,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22010
      }, GoodsInfo[1903]), {
        youxibi: 400,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22011
      }, GoodsInfo[2904]), {
        youxibi: 125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22012
      }, GoodsInfo[1405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22013
      }, GoodsInfo[2406]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22014
      }, GoodsInfo[1080]), {
        youxibi: 4210,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22015
      }, GoodsInfo[1580]), {
        youxibi: 4150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22016
      }, GoodsInfo[2080]), {
        youxibi: 4550,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22017
      }, GoodsInfo[1050]), {
        youxibi: 2190,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22018
      }, GoodsInfo[1550]), {
        youxibi: 1530,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22019
      }, GoodsInfo[2050]), {
        youxibi: 1910,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22020
      }, GoodsInfo[2550]), {
        youxibi: 380,
        count: 1
      })
    ],
    "equip_nvxia": [
      __spreadProps(__spreadValues({
        shopGoodsId: 24001
      }, GoodsInfo[1170]), {
        youxibi: 2650,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24002
      }, GoodsInfo[1670]), {
        youxibi: 2930,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24003
      }, GoodsInfo[2170]), {
        youxibi: 2510,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24004
      }, GoodsInfo[2901]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24005
      }, GoodsInfo[1402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24006
      }, GoodsInfo[1901]), {
        youxibi: 480,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24007
      }, GoodsInfo[2402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22008
      }, GoodsInfo[1403]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22009
      }, GoodsInfo[2404]), {
        youxibi: 700,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22010
      }, GoodsInfo[1903]), {
        youxibi: 400,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22011
      }, GoodsInfo[2904]), {
        youxibi: 125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22012
      }, GoodsInfo[1405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22013
      }, GoodsInfo[2406]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22014
      }, GoodsInfo[1180]), {
        youxibi: 4210,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22015
      }, GoodsInfo[1680]), {
        youxibi: 4150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22016
      }, GoodsInfo[2180]), {
        youxibi: 4550,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24017
      }, GoodsInfo[1150]), {
        youxibi: 2190,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24018
      }, GoodsInfo[1650]), {
        youxibi: 1530,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24019
      }, GoodsInfo[2150]), {
        youxibi: 1910,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 24020
      }, GoodsInfo[2650]), {
        youxibi: 380,
        count: 1
      })
    ],
    "equip_heihuo": [
      __spreadProps(__spreadValues({
        shopGoodsId: 26001
      }, GoodsInfo[1270]), {
        youxibi: 2650,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26002
      }, GoodsInfo[1770]), {
        youxibi: 2930,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26003
      }, GoodsInfo[2270]), {
        youxibi: 2510,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26004
      }, GoodsInfo[2760]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26005
      }, GoodsInfo[1402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26006
      }, GoodsInfo[1901]), {
        youxibi: 480,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26007
      }, GoodsInfo[2401]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22008
      }, GoodsInfo[1403]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22009
      }, GoodsInfo[2403]), {
        youxibi: 700,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22010
      }, GoodsInfo[1903]), {
        youxibi: 400,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22011
      }, GoodsInfo[2903]), {
        youxibi: 125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22012
      }, GoodsInfo[1405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22013
      }, GoodsInfo[2405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22014
      }, GoodsInfo[1280]), {
        youxibi: 4210,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22015
      }, GoodsInfo[1780]), {
        youxibi: 4150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22016
      }, GoodsInfo[2280]), {
        youxibi: 4550,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26017
      }, GoodsInfo[1250]), {
        youxibi: 2190,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26018
      }, GoodsInfo[1750]), {
        youxibi: 1530,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26019
      }, GoodsInfo[2250]), {
        youxibi: 1910,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 26020
      }, GoodsInfo[2750]), {
        youxibi: 380,
        count: 1
      })
    ],
    "equip_jianke": [
      __spreadProps(__spreadValues({
        shopGoodsId: 28001
      }, GoodsInfo[1370]), {
        youxibi: 2650,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28002
      }, GoodsInfo[1870]), {
        youxibi: 2930,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28003
      }, GoodsInfo[2370]), {
        youxibi: 2510,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28004
      }, GoodsInfo[2870]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28005
      }, GoodsInfo[1402]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28006
      }, GoodsInfo[1901]), {
        youxibi: 480,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28007
      }, GoodsInfo[2401]), {
        youxibi: 380,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22008
      }, GoodsInfo[1403]), {
        youxibi: 950,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22009
      }, GoodsInfo[2403]), {
        youxibi: 700,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22010
      }, GoodsInfo[1903]), {
        youxibi: 400,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22011
      }, GoodsInfo[2903]), {
        youxibi: 125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22012
      }, GoodsInfo[1405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22013
      }, GoodsInfo[2405]), {
        youxibi: 280,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22014
      }, GoodsInfo[1380]), {
        youxibi: 4210,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22015
      }, GoodsInfo[1880]), {
        youxibi: 4150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 22016
      }, GoodsInfo[2380]), {
        youxibi: 4550,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28017
      }, GoodsInfo[1350]), {
        youxibi: 2190,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28018
      }, GoodsInfo[1850]), {
        youxibi: 1530,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28019
      }, GoodsInfo[2350]), {
        youxibi: 1910,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 28020
      }, GoodsInfo[2850]), {
        youxibi: 380,
        count: 1
      })
    ],
    "cailiao": [
      __spreadProps(__spreadValues({
        shopGoodsId: 30001
      }, GoodsInfo[5111]), {
        yinbi: 50,
        count: 1
      }),
      // {
      //     shopGoodsId: 30002,
      //     ...GoodsInfo[5111],
      //     youxibi: 1,
      //     count: 1
      // },
      __spreadProps(__spreadValues({
        shopGoodsId: 30003
      }, GoodsInfo[5121]), {
        yinbi: 75,
        count: 1
      }),
      // {
      //     shopGoodsId: 30004,
      //     ...GoodsInfo[5121],
      //     youxibi: 2,
      //     count: 1
      // },
      __spreadProps(__spreadValues({
        shopGoodsId: 30005
      }, GoodsInfo[5131]), {
        yinbi: 120,
        count: 1
      }),
      // {
      //     shopGoodsId: 30006,
      //     ...GoodsInfo[5131],
      //     youxibi: 3,
      //     count: 1
      // },
      __spreadProps(__spreadValues({
        shopGoodsId: 30007
      }, GoodsInfo[5141]), {
        yinbi: 150,
        count: 1
      }),
      // {
      //     shopGoodsId: 30008,
      //     ...GoodsInfo[5141],
      //     youxibi: 4,
      //     count: 1
      // },
      __spreadProps(__spreadValues({
        shopGoodsId: 30009
      }, GoodsInfo[5151]), {
        yinbi: 225,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30010
      }, GoodsInfo[5151]), {
        youxibi: 5,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30029
      }, GoodsInfo[5152]), {
        yinbi: 1125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30030
      }, GoodsInfo[5152]), {
        youxibi: 25,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30031
      }, GoodsInfo[5153]), {
        yinbi: 5625,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30032
      }, GoodsInfo[5153]), {
        youxibi: 125,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30011
      }, GoodsInfo[5161]), {
        yinbi: 600,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30012
      }, GoodsInfo[5161]), {
        youxibi: 12,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30025
      }, GoodsInfo[5162]), {
        yinbi: 3e3,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30026
      }, GoodsInfo[5162]), {
        youxibi: 60,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30027
      }, GoodsInfo[5163]), {
        yinbi: 15e3,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30028
      }, GoodsInfo[5163]), {
        youxibi: 300,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30013
      }, GoodsInfo[5171]), {
        yinbi: 1e3,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30014
      }, GoodsInfo[5171]), {
        youxibi: 20,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30021
      }, GoodsInfo[5172]), {
        yinbi: 5e3,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30022
      }, GoodsInfo[5172]), {
        youxibi: 100,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30023
      }, GoodsInfo[5173]), {
        yinbi: 25e3,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30024
      }, GoodsInfo[5173]), {
        youxibi: 500,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30015
      }, GoodsInfo[5181]), {
        yinbi: 1500,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30016
      }, GoodsInfo[5181]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30017
      }, GoodsInfo[5182]), {
        yinbi: 7500,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30018
      }, GoodsInfo[5182]), {
        youxibi: 150,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30019
      }, GoodsInfo[5183]), {
        yinbi: 37500,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30020
      }, GoodsInfo[5183]), {
        youxibi: 750,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30033
      }, GoodsInfo[6001]), {
        yinbi: 300,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30034
      }, GoodsInfo[6001]), {
        youxibi: 6,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30035
      }, GoodsInfo[6002]), {
        yinbi: 300,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30036
      }, GoodsInfo[6002]), {
        youxibi: 6,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30037
      }, GoodsInfo[6003]), {
        yinbi: 300,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30038
      }, GoodsInfo[6003]), {
        youxibi: 6,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30039
      }, GoodsInfo[6004]), {
        yinbi: 300,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30040
      }, GoodsInfo[6004]), {
        youxibi: 6,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30041
      }, GoodsInfo[6005]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30042
      }, GoodsInfo[6006]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30043
      }, GoodsInfo[6007]), {
        youxibi: 30,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 30044
      }, GoodsInfo[6008]), {
        youxibi: 30,
        count: 1
      })
    ],
    "goods": [
      {}
    ],
    "dianquan": [
      __spreadProps(__spreadValues({
        shopGoodsId: 50001
      }, GoodsInfo[4500]), {
        dianquan: 15,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 50002
      }, GoodsInfo[1001]), {
        dianquan: 15e3,
        count: 1
      })
    ],
    "dianka": [
      __spreadProps(__spreadValues({
        shopGoodsId: 60001
      }, GoodsInfo[30]), {
        youxibi: 5e3 * 2,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 60002
      }, GoodsInfo[31]), {
        youxibi: 1e4 * 2,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 60003
      }, GoodsInfo[32]), {
        youxibi: 2e4 * 2,
        count: 1
      }),
      __spreadProps(__spreadValues({
        shopGoodsId: 60004
      }, GoodsInfo[33]), {
        youxibi: 5e4 * 2,
        count: 1
      })
    ]
  };

  // src/entity/ui/Charge.ts
  var Charge = class extends Laya.Sprite {
    constructor(parents, closeCb) {
      super();
      this.rate = 1;
      this.chargeRequest = false;
      this.parents = parents;
      this.closeCb = closeCb;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.init();
    }
    init() {
      this.loadImage(`${roomBgUrl}/empty-panel.png`);
      this.size(500 * PixelRatio * this.rate, 400 * PixelRatio * this.rate);
      let content = new Laya.VBox();
      content.size(this.width, this.height);
      content.pos(0, 0);
      content.space = 10 * PixelRatio * this.rate;
      content.align = "center";
      this.addChild(content);
      let pad3 = new Laya.Sprite();
      pad3.height = 10 * PixelRatio * this.rate;
      content.addChild(pad3);
      let codeImg = new Laya.Image(`${roomBgUrl}/mini-pro.jpg`);
      codeImg.size(259 * 0.8 * PixelRatio * this.rate, 262 * 0.8 * PixelRatio * this.rate);
      content.addChild(codeImg);
      let tishi = new Laya.Label("扫码进入官网小程序，可以签到和充值哦~");
      tishi.fontSize = 14 * PixelRatio * this.rate;
      content.addChild(tishi);
      let tishi2 = new Laya.Label("(签到点券和充值的游戏币正式上线不清空，充值完成后需要刷新游戏才能显示!)");
      tishi2.fontSize = 13 * PixelRatio * this.rate;
      content.addChild(tishi2);
      let optPanel = new Laya.HBox();
      optPanel.width = 200 * PixelRatio * this.rate;
      optPanel.align = "center";
      optPanel.space = 50 * PixelRatio * this.rate;
      content.addChild(optPanel);
      let submitBtn = getSubmitBtn("确定", this.rate);
      submitBtn.y = 10 * PixelRatio * this.rate;
      optPanel.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        this.closeCb.call(this.parents);
      });
      let cancelBtn = getSubmitBtn("取消", this.rate);
      cancelBtn.y = 10 * PixelRatio * this.rate;
      cancelBtn.on(Laya.Event.CLICK, () => {
        this.closeCb.call(this.parents);
      });
      optPanel.addChild(cancelBtn);
    }
  };

  // src/entity/ui/CountPanel.ts
  var CountPanel = class extends Laya.Sprite {
    constructor(parentNode, content, submitCB, param) {
      super();
      this.rate = 1;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.parentNode = parentNode;
      this.submibCB = submitCB;
      this.param = param;
      this.content = content;
      this.init();
    }
    init() {
      this.loadImage(`${roomBgUrl}/buy-panel.png`);
      this.size(this.width * PixelRatio * this.rate, this.height * PixelRatio * this.rate);
      this.pos(this.parentNode.width / 2 - this.width / 2, this.parentNode.height / 2 - this.height / 2);
      this.content.forEach((text, i) => {
        let content = new Laya.Label(text);
        content.pos(45 * PixelRatio * this.rate, (60 + i * 18) * PixelRatio * this.rate);
        content.fontSize = 14 * PixelRatio * this.rate;
        this.addChild(content);
      });
      let count = new Laya.Input();
      count.text = "1";
      count.align = "right";
      count.pos(52 * PixelRatio * this.rate, 120 * PixelRatio * this.rate);
      count.size(48 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
      this.addChild(count);
      let submitBtn = getSubmitBtn("确定", this.rate);
      submitBtn.pos(240 * PixelRatio * this.rate, 180 * PixelRatio * this.rate);
      this.addChild(submitBtn);
      submitBtn.on(Laya.Event.CLICK, () => {
        if (!count.text || isNaN(+count.text))
          return;
        let buyCount = Math.floor(+count.text);
        if (buyCount < 1)
          return;
        let p;
        if (this.param) {
          p = __spreadProps(__spreadValues({}, this.param), { count: buyCount });
        } else {
          p = { count: buyCount };
        }
        this.submibCB && this.submibCB.call(this.parentNode, p);
        this.parentNode.removeChild(this);
      });
      let closeBtn = new Laya.Image(`${roomBtnUrl}/close.png`);
      closeBtn.pos(320 * PixelRatio * this.rate, 15 * PixelRatio * this.rate);
      closeBtn.scale(this.rate, this.rate);
      this.addChild(closeBtn);
      closeBtn.on(Laya.Event.CLICK, () => {
        this.parentNode.removeChild(this);
      });
    }
  };

  // src/entity/ui/ShopLeft.ts
  var ShopLeft = class extends Laya.Sprite {
    constructor() {
      super();
      this.init();
    }
    init() {
      this.loadImage(`${roomBgUrl}/shangcheng-left-bg.png`);
      this.size(this.width * PixelRatio * ScaleRate, DeviceHeight);
    }
  };

  // src/entity/ui/Shop.ts
  var Shop = class extends Laya.Sprite {
    constructor() {
      super();
      this.rate = 1;
      this.leftPart = new ShopLeft();
      this.activeType = "remen";
      this.typeList = [
        { name: "热门", key: "remen" },
        { name: "装备", key: "equip" },
        { name: "材料", key: "cailiao" },
        { name: "道具", key: "goods" },
        { name: "点券", key: "dianquan" },
        { name: "点卡", key: "dianka" }
      ];
      this.equipTypeList = ["shengnv", "nvxia", "heihuo", "jianke"];
      this.activeEquipType = "shengnv";
      this.role = RoleService.getInstance().role;
      this.currentPage = 0;
      this.pageCount = 6;
      this.totalPage = 0;
      this.goodsList = [];
      this.buyFlag = false;
      this.priceRate = 0.5;
      this.init();
      this.renderGoodsList();
      this.renderPage();
    }
    init() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.size(DeviceHeight * bgRate2, DeviceHeight);
      this.pos(-(DeviceWidth - this.width) / 2, 0);
      this.addChild(this.leftPart);
      let close = new Laya.Image(`${roomBtnUrl}/close.png`);
      close.size(close.width * PixelRatio * this.rate, close.height * PixelRatio * this.rate);
      close.pos(this.width - 40 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      close.on(Laya.Event.CLICK, () => {
        this.parentNode && this.parentNode.onCloseShop();
      });
      this.addChild(close);
      this.typeBox = new Laya.HBox();
      for (let i = 0; i < this.typeList.length; i++) {
        let item = this.typeList[i];
        let type = new Laya.Image(`${roomBtnUrl}/btn-${item.key}.png`);
        if (item.key === this.activeType) {
          type.skin = `${roomBtnUrl}/btn-${item.key}-active.png`;
        }
        type.size(type.width * PixelRatio * this.rate, type.height * PixelRatio * this.rate);
        type.name = item.key;
        this.typeBox.addChild(type);
        type.on(Laya.Event.CLICK, () => {
          this.handleClickType(item.key);
        });
      }
      this.typeBox.pos(this.leftPart.width + 2 * PixelRatio * this.rate, 5 * PixelRatio * this.rate);
      this.typeBox.zOrder = 10;
      this.addChild(this.typeBox);
      this.rightBg = new Laya.Sprite();
      this.rightBg.loadImage(`${roomBgUrl}/shangcheng-right-bg.png`);
      this.rightBg.size(this.rightBg.width * PixelRatio * this.rate, this.rightBg.height * PixelRatio * this.rate);
      this.rightBg.pos(this.leftPart.width, 43 * PixelRatio * this.rate);
      this.addChild(this.rightBg);
      this.goodsContainer = new Laya.Sprite();
      this.goodsContainer.size(490 * PixelRatio * this.rate, 305 * PixelRatio * this.rate);
      this.goodsContainer.pos(7 * PixelRatio * this.rate, 44 * PixelRatio * this.rate);
      this.rightBg.addChild(this.goodsContainer);
      let optPanel = new Laya.Sprite();
      optPanel.loadImage(`${roomBgUrl}/shangcheng-tail.png`);
      optPanel.size(optPanel.width * PixelRatio * this.rate, this.height - this.rightBg.height - this.rightBg.y);
      optPanel.pos(this.leftPart.width, this.rightBg.y + this.rightBg.height - 2 * PixelRatio * this.rate);
      this.addChild(optPanel);
      this.yinbiText = new Laya.Text();
      this.yinbiText.width = 130 * PixelRatio * this.rate;
      this.yinbiText.height = 22 * PixelRatio * this.rate;
      this.yinbiText.pos(90 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
      this.yinbiText.text = this.role.gold + "";
      this.yinbiText.fontSize = 12 * PixelRatio * this.rate;
      this.yinbiText.align = "left";
      this.yinbiText.valign = "middle";
      optPanel.addChild(this.yinbiText);
      this.dianquanText = new Laya.Text();
      this.dianquanText.width = 130 * PixelRatio * this.rate;
      this.dianquanText.height = 22 * PixelRatio * this.rate;
      this.dianquanText.pos(90 * PixelRatio * this.rate, 50 * PixelRatio * this.rate);
      this.dianquanText.text = this.role.dianquan + "";
      this.dianquanText.fontSize = 12 * PixelRatio * this.rate;
      this.dianquanText.align = "left";
      this.dianquanText.valign = "middle";
      optPanel.addChild(this.dianquanText);
      this.youxibiText = new Laya.Text();
      this.youxibiText.width = 130 * PixelRatio * this.rate;
      this.youxibiText.height = 22 * PixelRatio * this.rate;
      this.youxibiText.pos(90 * PixelRatio * this.rate, 77 * PixelRatio * this.rate);
      this.youxibiText.text = this.role.youxibi + "";
      this.youxibiText.fontSize = 12 * PixelRatio * this.rate;
      this.youxibiText.align = "left";
      this.youxibiText.valign = "middle";
      optPanel.addChild(this.youxibiText);
      let vipBtn = new MyButton(`${roomBtnUrl}/btn-vip.png`, `${roomBtnUrl}/btn-vip.png`);
      vipBtn.size(75 * PixelRatio * this.rate, 55 * PixelRatio * this.rate);
      vipBtn.pos(240 * PixelRatio * this.rate, 35 * PixelRatio * this.rate);
      optPanel.addChild(vipBtn);
      vipBtn.on(Laya.Event.CLICK, () => {
        let countPanel = new CountPanel(this, ["VIP月卡，价格3000游戏币。", "特权：1.经验获取+20%；2.签到免广告"], (res) => {
          let count = res.count;
          request("area.playerHandler.buyVip", { count }, (res2) => {
            if (res2.code === 200) {
              showTips("购买成功");
              this.role.youxibi -= 3e3 * count;
              this.youxibiText.text = this.role.youxibi + " ";
              this.role.isVip = 1;
            }
          });
        });
        this.addChild(countPanel);
        return;
      });
      let chargeBtn = new MyButton(`${roomBtnUrl}/btn-charge.png`, `${roomBtnUrl}/btn-charge-down.png`);
      chargeBtn.size(75 * PixelRatio * this.rate, 55 * PixelRatio * this.rate);
      chargeBtn.pos(325 * PixelRatio * this.rate, 35 * PixelRatio * this.rate);
      optPanel.addChild(chargeBtn);
      chargeBtn.on(Laya.Event.CLICK, this, () => {
        this.chargeDialog = showDialog(this, new Charge(this, this.closeChange), null, -1, true);
      });
      let returnBtn = new Laya.Image(`${ServiceIp}images/hall/create/create-room-return.png`);
      returnBtn.size(75 * PixelRatio * this.rate, 55 * PixelRatio * this.rate);
      returnBtn.pos(410 * PixelRatio * this.rate, 35 * PixelRatio * this.rate);
      optPanel.addChild(returnBtn);
      returnBtn.on(Laya.Event.CLICK, this, () => {
        this.parentNode && this.parentNode.onCloseShop();
      });
    }
    closeChange() {
      hideDialog(this, this.chargeDialog);
    }
    renderPage() {
      let pre = new Laya.Image(`${ServiceIp}images/hall/pre.png`);
      pre.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      pre.pos(377 * PixelRatio * this.rate, 358 * PixelRatio * this.rate);
      this.rightBg.addChild(pre);
      let next = new Laya.Image(`${ServiceIp}images/hall/next.png`);
      next.size(26 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      next.pos(470 * PixelRatio * this.rate, 358 * PixelRatio * this.rate);
      this.rightBg.addChild(next);
      let sperate = new Laya.Image(`${ServiceIp}images/hall/number/sperate2.png`);
      sperate.size(sperate.width * PixelRatio * this.rate, sperate.height * PixelRatio * this.rate);
      sperate.pos(432 * PixelRatio * this.rate, 364 * PixelRatio * this.rate);
      this.rightBg.addChild(sperate);
      this.currentLabel = new Laya.Label(pad(this.currentPage + 1));
      this.currentLabel.pos(410 * PixelRatio * this.rate, 361 * PixelRatio * this.rate);
      this.currentLabel.fontSize = 20 * PixelRatio * this.rate;
      this.currentLabel.color = "white";
      this.rightBg.addChild(this.currentLabel);
      this.totalPage = Math.ceil(ShopGoods[this.activeType === "equip" ? this.activeType + "_" + this.activeEquipType : this.activeType].length / this.pageCount);
      this.totalLabel = new Laya.Label(pad(this.totalPage));
      this.totalLabel.pos(442 * PixelRatio * this.rate, 361 * PixelRatio * this.rate);
      this.totalLabel.fontSize = 20 * PixelRatio * this.rate;
      this.totalLabel.color = "white";
      this.rightBg.addChild(this.totalLabel);
      pre.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage === 0)
          return;
        this.currentPage--;
        this.currentLabel.text = pad(this.currentPage + 1);
        this.pageChange();
      });
      next.on(Laya.Event.CLICK, this, () => {
        if (this.currentPage === this.totalPage - 1)
          return;
        this.currentPage++;
        this.currentLabel.text = pad(this.currentPage + 1);
        this.pageChange();
      });
    }
    pageChange() {
      this.renderGoodsList();
    }
    setPage() {
      this.currentLabel.text = pad(this.currentPage + 1);
      this.totalPage = Math.ceil(ShopGoods[this.activeType === "equip" ? this.activeType + "_" + this.activeEquipType : this.activeType].length / this.pageCount);
      this.totalLabel.text = pad(this.totalPage);
    }
    renderGoodsList() {
      if (this.activeType === "equip") {
        this.goodsList = ShopGoods[this.activeType + "_" + this.activeEquipType].slice(this.currentPage * this.pageCount, this.pageCount * (this.currentPage + 1));
      } else {
        this.goodsList = ShopGoods[this.activeType].slice(this.currentPage * this.pageCount, this.pageCount * (this.currentPage + 1));
      }
      this.goodsContainer.removeChildren();
      if (!this.goodsList.length || !this.goodsList[0].shopGoodsId)
        return;
      this.goodsList.forEach((item, i) => {
        let goods = new Laya.Sprite();
        goods.size(235 * PixelRatio * this.rate, 91 * PixelRatio * this.rate);
        goods.pos(5 * PixelRatio * this.rate + i % 2 * (goods.width + 12.5 * PixelRatio * this.rate), 5 * PixelRatio * this.rate + Math.floor(i / 2) * (goods.height + 11.8 * PixelRatio * this.rate));
        this.goodsContainer.addChild(goods);
        let goodsImg = new BagGoods(item);
        goodsImg.pos(11 * PixelRatio * this.rate, 11 * PixelRatio * this.rate);
        goodsImg.size(goodsImg.width * this.rate, goodsImg.height * this.rate);
        goods.addChild(goodsImg);
        let goodsName = new Laya.Text();
        goodsName.pos(goodsImg.width + goodsImg.x + 10 * PixelRatio * this.rate, goodsImg.y + 2 * PixelRatio * this.rate);
        goodsName.text = item.name;
        goodsName.fontSize = 12 * PixelRatio * this.rate;
        goodsName.color = QutityColor[item.qutity];
        goods.addChild(goodsName);
        let goodsPrice = new Laya.Text();
        goodsPrice.pos(goodsName.x, goodsName.y + 20 * PixelRatio * this.rate);
        goodsPrice.text = "价格：";
        goodsPrice.fontSize = 12 * PixelRatio * this.rate;
        if (item.yinbi) {
          goodsPrice.color = "white";
          goodsPrice.text += item.yinbi * this.priceRate + " 银币";
        } else if (item.youxibi) {
          goodsPrice.color = "yellow";
          goodsPrice.text += item.youxibi * this.priceRate + " 游戏币";
        } else if (item.dianquan) {
          goodsPrice.color = "#4cfa09";
          goodsPrice.text += item.dianquan + " 点券";
        }
        goods.addChild(goodsPrice);
        let buyBtn = getSubmitBtn("立即购买", this.rate);
        buyBtn.pos(130 * PixelRatio * this.rate, 60 * PixelRatio * this.rate);
        goods.addChild(buyBtn);
        buyBtn.on(Laya.Event.CLICK, () => {
          let countPanel = new CountPanel(this, ["", "请输入购买数量"], this.buy, item);
          this.addChild(countPanel);
          return;
        });
      });
    }
    buy(item) {
      if (this.buyFlag)
        return;
      this.buyFlag = true;
      let type = this.activeType === "equip" ? this.activeType + "_" + this.activeEquipType : this.activeType;
      request("area.playerHandler.buyGoods", { type, shopGoodsId: item.shopGoodsId, count: item.count || 1 }, (res) => {
        this.buyFlag = false;
        if (res.code === 200) {
          showTips("购买成功");
          if (item.yinbi) {
            this.role.gold -= item.yinbi * this.priceRate * item.count;
            this.yinbiText.text = this.role.gold + "";
          } else if (item.youxibi) {
            this.role.youxibi -= item.youxibi * this.priceRate * item.count;
            this.youxibiText.text = this.role.youxibi + "";
          } else if (item.dianquan) {
            this.role.dianquan -= item.dianquan * this.priceRate * item.count;
            this.dianquanText.text = this.role.dianquan + "";
          }
          this.role.addGoods(item.type, item.type, item.count);
        } else {
          showTips("购买失败");
        }
      });
    }
    renderEquipType() {
      if (!this.equipTypePanel) {
        this.equipTypePanel = new Laya.HBox();
        this.equipTypePanel.space = 3 * PixelRatio * this.rate;
        this.equipTypePanel.pos(this.leftPart.width + 30 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
        this.addChild(this.equipTypePanel);
        for (let i = 0; i < this.equipTypeList.length; i++) {
          let name = this.equipTypeList[i];
          let equipType = new Laya.Image(`${roomBtnUrl}/btn-${name}.png`);
          equipType.name = name;
          if (this.activeEquipType === name) {
            equipType.skin = `${roomBtnUrl}/btn-${name}-active.png`;
          }
          equipType.size(equipType.width * PixelRatio * this.rate, equipType.height * PixelRatio * this.rate);
          this.equipTypePanel.addChild(equipType);
          equipType.on(Laya.Event.CLICK, () => {
            this.handleClickEquipType(name);
          });
        }
      } else {
        for (let i = 0; i < this.equipTypeList.length; i++) {
          let name = this.equipTypeList[i];
          let equipType = this.equipTypePanel.getChildByName(name);
          if (this.activeEquipType === name) {
            equipType.skin = `${roomBtnUrl}/btn-${name}-active.png`;
          } else {
            equipType.skin = `${roomBtnUrl}/btn-${name}.png`;
          }
        }
        this.addChild(this.equipTypePanel);
      }
    }
    handleClickType(key) {
      if (key === this.activeType)
        return;
      let type = this.typeBox.getChildByName(this.activeType);
      type.skin = `${roomBtnUrl}/btn-${this.activeType}.png`;
      this.activeType = key;
      type = this.typeBox.getChildByName(this.activeType);
      type.skin = `${roomBtnUrl}/btn-${this.activeType}-active.png`;
      if (this.activeType === "equip") {
        this.renderEquipType();
      } else {
        this.removeChild(this.equipTypePanel);
        this.activeEquipType = "shengnv";
      }
      this.currentPage = 0;
      this.renderGoodsList();
      this.setPage();
    }
    handleClickEquipType(key) {
      if (key === this.activeEquipType)
        return;
      let type = this.equipTypePanel.getChildByName(this.activeEquipType);
      type.skin = `${roomBtnUrl}/btn-${this.activeEquipType}.png`;
      this.activeEquipType = key;
      type = this.equipTypePanel.getChildByName(this.activeEquipType);
      type.skin = `${roomBtnUrl}/btn-${this.activeEquipType}-active.png`;
      this.currentPage = 0;
      this.renderGoodsList();
      this.setPage();
    }
  };

  // src/runtime/HallHeadPerfab.generated.ts
  var HallHeadPerfabBase = class extends Laya.Box {
  };

  // src/runtime/HallHeadPerfab.ts
  var { regClass: regClass17 } = Laya;
  var HallHeadPerfab = class extends HallHeadPerfabBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.size(800 * PixelRatio * this.rate, 67 * PixelRatio * this.rate);
      this.loadImage(`${ServiceIp}images/login/select-role-head.png`);
      let shop = new Laya.Sprite();
      shop.size(69 * PixelRatio * this.rate, 50 * PixelRatio * this.rate);
      shop.pos(185 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      shop.loadImage(`${ServiceIp}images/hall/menu/shop-btn.png`);
      this.addChild(shop);
      shop.on(Laya.Event.CLICK, this, this.onClickShop);
      let jishou = new Laya.Sprite();
      jishou.size(69 * PixelRatio * this.rate, 50 * PixelRatio * this.rate);
      jishou.pos(260 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      jishou.loadImage(`${ServiceIp}images/hall/menu/jishou-btn.png`);
      this.addChild(jishou);
      let pet = new Laya.Sprite();
      pet.size(69 * PixelRatio * this.rate, 50 * PixelRatio * this.rate);
      pet.pos(335 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      pet.loadImage(`${ServiceIp}images/hall/menu/pet-btn.png`);
      this.addChild(pet);
      let family = new Laya.Sprite();
      family.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      family.pos(415 * PixelRatio * this.rate, 3 * PixelRatio * this.rate);
      family.loadImage(`${ServiceIp}images/hall/menu/menu-family.png`);
      this.addChild(family);
      let bag2 = new Laya.Sprite();
      bag2.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      bag2.pos(470 * PixelRatio * this.rate, 4 * PixelRatio * this.rate);
      bag2.loadImage(`${ServiceIp}images/hall/menu/menu-bag.png`);
      this.addChild(bag2);
      bag2.on(Laya.Event.CLICK, this, this.onClickBag);
      let task = new Laya.Sprite();
      task.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      task.pos(525 * PixelRatio * this.rate, 4 * PixelRatio * this.rate);
      task.loadImage(`${ServiceIp}images/hall/menu/menu-task.png`);
      this.addChild(task);
      let trade = new Laya.Sprite();
      trade.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      trade.pos(580 * PixelRatio * this.rate, 2 * PixelRatio * this.rate);
      trade.loadImage(`${ServiceIp}images/hall/menu/menu-trade.png`);
      this.addChild(trade);
      let rank = new Laya.Sprite();
      rank.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      rank.pos(635 * PixelRatio * this.rate, 1 * PixelRatio * this.rate);
      rank.loadImage(`${ServiceIp}images/hall/menu/menu-rank.png`);
      this.addChild(rank);
      rank.on(Laya.Event.CLICK, this, this.onClickRank);
      let mail = new Laya.Sprite();
      mail.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      mail.pos(685 * PixelRatio * this.rate, 2 * PixelRatio * this.rate);
      mail.loadImage(`${ServiceIp}images/hall/menu/menu-mail.png`);
      this.addChild(mail);
      let menu = new Laya.Sprite();
      menu.size(50 * PixelRatio * this.rate, 56 * PixelRatio * this.rate);
      menu.pos(737 * PixelRatio * this.rate, 4 * PixelRatio * this.rate);
      menu.loadImage(`${ServiceIp}images/hall/menu/menu-menu.png`);
      this.addChild(menu);
      menu.on(Laya.Event.CLICK, this, this.onClickMenu);
    }
    onClickMenu() {
      if (!this.menuList) {
        this.menuList = new MenuList(this);
        this.menuList.pos(685 * PixelRatio * this.rate, 60 * PixelRatio * this.rate);
      }
      if (!this.contains(this.menuList)) {
        this.addChild(this.menuList);
      } else {
        this.removeChild(this.menuList);
      }
    }
    onCloseMenu() {
      hideDialog(this.parentPanel, this.menuDialog);
    }
    onClickShop() {
      if (this.shopDialog)
        return;
      let shop = new Shop();
      this.shopDialog = showDialog(this.parentPanel, shop, null, -1, true);
      shop.parentNode = this;
    }
    onCloseShop() {
      hideDialog(this.parentPanel, this.shopDialog);
      this.shopDialog = null;
    }
    onClickRank() {
      if (this.rankDialog)
        return;
      let rank = new Rank();
      this.rankDialog = showDialog(this.parentPanel, rank, null, -1, true);
      rank.parentNode = this;
    }
    onCloseRank() {
      hideDialog(this.parentPanel, this.rankDialog);
      this.rankDialog = null;
    }
    onClickBag() {
      if (!RoleService.getInstance().role.getBag()) {
        request("area.playerHandler.getPlayerBag", { type: 0 }, (res) => {
          if (res.code === 200) {
            let role = RoleService.getInstance().role;
            role.setBag(res.data.content);
            this.showBag();
          }
        });
      } else {
        this.showBag();
      }
    }
    showBag() {
      let bag2 = getMyBag(this.closeBag, this);
      bag2.scale(this.rate, this.rate);
      this.bagDialog = showDialog(this.parentPanel, bag2, null, -1);
    }
    closeBag() {
      hideDialog(this.parentPanel, this.bagDialog);
    }
    onAwake() {
      this.initUI();
    }
  };
  HallHeadPerfab = __decorateClass([
    regClass17("_7fTKraJQdaTTcg470geVQ")
  ], HallHeadPerfab);

  // src/runtime/LoginScene.generated.ts
  var LoginSceneBase = class extends Laya.Scene {
  };

  // src/runtime/LoginScene.ts
  var { regClass: regClass18 } = Laya;
  var LoginScene = class extends LoginSceneBase {
    constructor() {
      super(...arguments);
      this.roleService = RoleService.getInstance();
      this.rate = 1;
      this.login = new MyButton(`${ServiceIp}images/login/login-btn.png`, `${ServiceIp}images/login/login-btn-down.png`);
      this.register = new MyButton(`${ServiceIp}images/login/registe-btn.png`, `${ServiceIp}images/login/registe-btn-down.png`);
      this.loginFlag = false;
      this.registerFlag = false;
    }
    onEnable() {
    }
    onOpened(param) {
      if (param && param.from === "exit") {
        init_default();
      }
    }
    initUI() {
      let phone = localStorage.getItem("phone") || "";
      let pwd = localStorage.getItem("password") || "";
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.bg.size(DeviceHeight * bgRate2, DeviceHeight);
      this.bg.pos((DeviceWidth - this.bg.width) / 2, 0);
      this.bg.loadImage(`${ServiceIp}images/login/login-ui.jpg`);
      this.rate = this.bg.width / bgInfo2.width;
      this.phone.text = phone;
      this.phone.size(240 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      this.phone.pos(250 * PixelRatio * this.rate, 405 * PixelRatio * this.rate);
      this.password.text = pwd;
      this.password.size(146 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      this.password.pos(250 * PixelRatio * this.rate, 435 * PixelRatio * this.rate);
      let loginInfo = ResRate["login-btn"];
      this.login.size(loginInfo.width * this.rate, loginInfo.height * this.rate);
      this.login.pos(510 * PixelRatio * this.rate, 397 * PixelRatio * this.rate);
      this.bg.addChild(this.login);
      let registerInfo = ResRate["registe-btn"];
      this.register.size(registerInfo.width * this.rate, registerInfo.height * this.rate);
      this.register.pos(510 * PixelRatio * this.rate, 475 * PixelRatio * this.rate);
      this.bg.addChild(this.register);
    }
    onAwake() {
      this.initUI();
      this.login.on(Laya.Event.CLICK, this, this.handleLogin);
      this.register.on(Laya.Event.CLICK, this, this.handleRegister);
      if (Laya.LayaEnv.isConch && Laya.Browser.userAgent.indexOf("LayaBox/") != -1) {
        this.phone.text = "111";
        this.password.text = "111";
      }
    }
    handleRegister() {
      if (this.registerPanel)
        return;
      let dialogInfo = ResRate["register-panel"];
      this.registerPanel = new Laya.Dialog();
      let bg = new Laya.Image(`${ServiceIp}images/login/register.png`);
      bg.size(dialogInfo.width * this.rate, dialogInfo.height * this.rate);
      this.registerPanel.addChild(bg);
      let phone = new Laya.Input();
      phone.prompt = "请输入手机号";
      phone.size(190 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
      phone.pos(100 * PixelRatio * this.rate, 59 * PixelRatio * this.rate);
      this.registerPanel.addChild(phone);
      let pwd1 = new Laya.Input();
      pwd1.size(190 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
      pwd1.pos(100 * PixelRatio * this.rate, 90 * PixelRatio * this.rate);
      this.registerPanel.addChild(pwd1);
      let codeLabel = new Laya.Label("验 证 码");
      codeLabel.font = "宋体 bold";
      codeLabel.fontSize = 22;
      codeLabel.color = "#590909";
      codeLabel.pos(30 * PixelRatio * this.rate, 120 * PixelRatio * this.rate);
      this.registerPanel.addChild(codeLabel);
      let code = new Laya.Input();
      code.fontSize = 16;
      code.prompt = "暂未开启";
      code.borderColor = "#590909";
      code.editable = false;
      code.size(196 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      code.pos(96 * PixelRatio * this.rate, 118 * PixelRatio * this.rate);
      this.registerPanel.addChild(code);
      let pwd2 = new Laya.Input();
      pwd2.size(190 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
      pwd2.pos(100 * PixelRatio * this.rate, 140 * PixelRatio * this.rate);
      this.registerPanel.addChild(pwd2);
      this.submit.label = "确  定";
      this.submit.size(80 * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      this.submit.pos(100 * PixelRatio * this.rate, 210 * PixelRatio * this.rate);
      this.submit.on(Laya.Event.CLICK, this, () => {
        if (!phone.text) {
          showTips("手机号不能为空");
          return;
        }
        if (!pwd1.text || !pwd2.text) {
          showTips("密码不能为空");
          return;
        }
        if (pwd1.text !== pwd2.text) {
          showTips("密码不一致");
          return;
        }
        var route = "area.gameHandler.register";
        if (this.registerFlag)
          return;
        this.registerFlag = true;
        request(route, {
          phone: phone.text,
          pwd: pwd1.text,
          code: code.text
        }, (res) => {
          this.registerFlag = false;
          if (res.code === 200) {
            localStorage.setItem("phone", phone.text);
            localStorage.setItem("password", pwd1.text);
            this.registerPanel.close();
            this.registerPanel = null;
            Laya.Scene.open("scene/createRole.ls", true, { phone: phone.text });
          } else {
            showTips("注册失败，手机号重复。");
          }
        });
      });
      this.registerPanel.addChild(this.submit);
      this.cancel.label = "取  消";
      this.cancel.size(80 * PixelRatio * this.rate, 30 * PixelRatio * this.rate);
      this.cancel.pos(220 * PixelRatio * this.rate, 210 * PixelRatio * this.rate);
      this.cancel.on(Laya.Event.CLICK, this, () => {
        this.registerPanel = null;
      });
      this.registerPanel.addChild(this.cancel);
      this.registerPanel.show();
    }
    showLoginLoading() {
      if (!this.loginBg) {
        Laya.stage.width = DeviceWidth;
        Laya.stage.height = DeviceHeight;
        let bgInfo2 = ResRate["login-bg"];
        let bgRate2 = bgInfo2.width / bgInfo2.height;
        this.loginBg = new Laya.Sprite();
        this.loginBg.size(DeviceHeight * bgRate2, DeviceHeight);
        this.loginBg.pos((DeviceWidth - this.bg.width) / 2, 0);
        this.loginBg.loadImage(`${ServiceIp}images/login/loading-ui.jpg`);
        this.loginBg.zOrder = 10;
        this.addChild(this.loginBg);
        let loading = new Laya.Animation();
        loading.source = `${ServiceIp}images/login/login-loading.atlas`;
        loading.pos(240 * PixelRatio * this.rate, 400 * PixelRatio * this.rate);
        loading.scale(this.rate * PixelRatio, this.rate * PixelRatio);
        loading.interval = 100;
        loading.play(false);
        this.loginBg.addChild(loading);
      } else {
        this.addChild(this.loginBg);
      }
    }
    hideLoginLoading() {
      this.removeChild(this.loginBg);
    }
    handleLogin() {
      var phone = this.phone.text;
      var pwd = this.password.text;
      var route = "area.gameHandler.login";
      if (!phone) {
        showTips("手机号不能为空");
        return;
      }
      if (!pwd) {
        showTips("密码不能为空");
        return;
      }
      this.showLoginLoading();
      if (this.loginFlag)
        return;
      this.loginFlag = true;
      request(route, {
        phone,
        pwd
      }, (res) => {
        if (res.code !== 200) {
          this.loginFlag = false;
          showTips(res.msg);
          this.hideLoginLoading();
          return;
        }
        localStorage.setItem("phone", phone);
        localStorage.setItem("password", pwd);
        if (res.data) {
          let role = res.data;
          request("connector.entryHandler.entry", { playerId: role.id, areaId: role.areaId }, (data) => {
            this.loginFlag = false;
            if (data.code === 200) {
              this.roleService.initAndAddRole(role);
              window.pomelo.on("logout", (res2) => {
                showTips("您已被踢下线");
                window.pomelo.off("logout");
                setTimeout(() => {
                  Laya.Scene.open("scene/login.ls", true);
                }, 2e3);
              });
              window.heartTimer = setInterval(() => {
                request("area.gameHandler.heart", null);
              }, 15e3);
              Laya.Scene.open("scene/gameHall.ls", true);
            }
          });
        } else {
          Laya.Scene.open("scene/createRole.ls", true, { phone });
        }
      });
    }
  };
  LoginScene = __decorateClass([
    regClass18("gvy59_njQEGZfCAa8LeiKg")
  ], LoginScene);

  // src/entity/ui/roomSetting.ts
  var getRoomSetting = (closeCB, target) => {
    let panel = new Laya.Sprite();
    panel.loadImage(`${roomBgUrl}/room-setting.png`);
    panel.size(panel.width * PixelRatio, panel.height * PixelRatio);
    let nameInput = new Laya.Input();
    nameInput.size(150 * PixelRatio, 20 * PixelRatio);
    nameInput.pos(120 * PixelRatio, 62 * PixelRatio);
    nameInput.fontSize = 12 * PixelRatio;
    panel.addChild(nameInput);
    let pwdInput = new Laya.Input();
    pwdInput.fontSize = 12 * PixelRatio;
    pwdInput.size(110 * PixelRatio, 20 * PixelRatio);
    pwdInput.pos(120 * PixelRatio, 90 * PixelRatio);
    panel.addChild(pwdInput);
    let levelInput = new Laya.Input();
    levelInput.fontSize = 12 * PixelRatio;
    levelInput.size(30 * PixelRatio, 20 * PixelRatio);
    levelInput.pos(120 * PixelRatio, 116 * PixelRatio);
    panel.addChild(levelInput);
    let close = new Laya.Image(`${roomBtnUrl}/close.png`);
    close.size(close.width * PixelRatio, close.height * PixelRatio);
    close.pos(330 * PixelRatio, 10 * PixelRatio);
    close.on(Laya.Event.CLICK, target, closeCB, [{ name: nameInput, pwd: pwdInput, level: levelInput }]);
    panel.addChild(close);
    return panel;
  };

  // src/runtime/PveMapPanelPrefab.generated.ts
  var PveMapPanelPrefabBase = class extends Laya.Box {
  };

  // src/runtime/PveMapPanelPrefab.ts
  var { regClass: regClass19 } = Laya;
  var mapCardImgMap = {
    "21": "1",
    "22": "2",
    "23": "3",
    "24": "4",
    "25": "5",
    "26": "6",
    "27": "7",
    "28": "8",
    "29": "9"
  };
  var PveMapPanelPrefab = class extends PveMapPanelPrefabBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
      this.currentLevel = 0;
      this.normal = new Laya.Sprite();
      this.gaoshou = new Laya.Sprite();
      this.kuangren = new Laya.Sprite();
    }
    init(room, mapInfo) {
      this.room = room;
      this.mapInfo = mapInfo;
    }
    setMapInfo(mapInfo) {
      this.mapInfo = mapInfo;
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.mapPart = new Laya.Sprite();
      this.mapPart.size(316 * PixelRatio * this.rate, 417 * PixelRatio * this.rate);
      this.mapPart.loadImage(`${roomBgUrl}/guanka-part.png`);
      this.addChild(this.mapPart);
      let idStr = pad(this.room.id, 3);
      for (let i = 0; i < idStr.length; i++) {
        let roomIdImage = new Laya.Image();
        roomIdImage.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/roomId${idStr.charAt(i)}.png`);
        this.mapPart.addChild(roomIdImage);
        roomIdImage.size(roomIdImage.width * PixelRatio * this.rate, roomIdImage.height * this.rate * PixelRatio);
        roomIdImage.pos((2 + i * 22) * PixelRatio * this.rate, 2 * PixelRatio * this.rate);
      }
      this.nameLabel = new Laya.Label(this.room.name);
      this.nameLabel.fontSize = 14 * PixelRatio * this.rate;
      this.nameLabel.color = "white";
      this.nameLabel.pos(75 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      this.mapPart.addChild(this.nameLabel);
      if (this.room.playerId === RoleService.getInstance().role.id) {
        let settingBtn = new MyButton(`${roomBtnUrl}/btn-normal.png`, `${roomBtnUrl}/btn-normal-down.png`);
        settingBtn.pos(240 * PixelRatio * this.rate, 7 * PixelRatio * this.rate);
        settingBtn.size(60 * PixelRatio * this.rate, 21 * PixelRatio * this.rate);
        this.mapPart.addChild(settingBtn);
        settingBtn.on(Laya.Event.CLICK, this, this.openRoomSetting);
        let label = new Laya.Label("房间设置");
        label.size(settingBtn.width, settingBtn.height);
        label.pos(0, 1 * PixelRatio);
        label.fontSize = 12 * PixelRatio * this.rate;
        label.color = "white";
        label.valign = "middle";
        label.align = "center";
        settingBtn.addChild(label);
      }
      let mapSelect = new MyButton(`${roomBtnUrl}/select-guanka.png`, `${roomBtnUrl}/select-guanka.png`);
      mapSelect.size(60 * PixelRatio * this.rate, 75 * this.rate * PixelRatio);
      mapSelect.pos(14 * PixelRatio * this.rate, 224 * this.rate * PixelRatio);
      this.mapPart.addChild(mapSelect);
      mapSelect.on(Laya.Event.CLICK, this, () => {
        Laya.stage.event("showMapPanel");
      });
      this.renderMapInfo(this.mapInfo);
    }
    openRoomSetting() {
      if (!this.settingDialog) {
        let setting = getRoomSetting(this.closeSetting, this);
        this.settingDialog = showDialog(this.parentPanel, setting, null, -1);
      }
    }
    closeSetting(param) {
      let name = param.name.text;
      let pwd = param.pwd.text;
      let level = param.level.text;
      if (!name && !pwd && !level) {
        hideDialog(null, this.settingDialog);
        this.settingDialog = null;
        return;
      }
      if (name.length > 10) {
        showTips("房间名不能超过10个字");
        return;
      }
      if (level && isNaN(+level)) {
        showTips("等级必须为数字");
        return;
      }
      hideDialog(this.parentPanel, this.settingDialog);
      this.settingDialog = null;
      request("area.roomHandler.setting", { name, pwd, level: +level }, (res) => {
        if (res.code === 200) {
          if (name) {
            this.room.name = name;
          }
          if (level) {
            this.room.name = `${this.room.name} [${level}]`;
          }
          this.nameLabel.text = this.room.name;
        }
      });
    }
    /**
     * 
     * @returns 0: 一个困难模式也没有，1：有一个简单，2：简单和高手，3：简单高手狂人
     */
    getStarLevel() {
      let mapId = this.mapInfo.id;
      let level = RoomRoleService.getInstance().getFangdong().level;
      let id = +mapId.split("-")[0];
      if (id < 10) {
        switch (id) {
          case 1:
            return level < 20 ? 1 : level < 30 ? 2 : 3;
          case 2:
            return level < 30 ? 1 : level < 40 ? 2 : 4;
        }
      }
      return 0;
    }
    renderMapInfo(mapInfo) {
      this.setMapInfo(mapInfo);
      this.mapPart.removeChild(this.mapInfoS);
      this.mapInfoS = new Laya.Sprite();
      this.mapPart.addChild(this.mapInfoS);
      let mapCard = new Laya.Sprite();
      mapCard.size(285 * PixelRatio * this.rate, 102 * PixelRatio * this.rate);
      mapCard.pos(14 * PixelRatio * this.rate, 68 * PixelRatio * this.rate);
      let mapIdFirst = mapInfo.id.split("-")[0];
      mapCard.loadImage(`${ServiceIp}images/room/label/map-${mapCardImgMap[mapIdFirst] || mapIdFirst}.png`);
      this.mapInfoS.addChild(mapCard);
      let mapCardName = new Laya.Label(mapInfo.name);
      mapCardName.fontSize = 14 * PixelRatio * this.rate;
      mapCardName.color = "#a05203";
      mapCardName.pos(45 * PixelRatio * this.rate, 80 * PixelRatio * this.rate);
      this.mapInfoS.addChild(mapCardName);
      let level = this.getStarLevel();
      let fangdong = RoomRoleService.getInstance().getFangdong();
      let self = RoleService.getInstance().role;
      if (level > 0 && !this.mapInfoS.contains(this.normal)) {
        this.normal.size(72 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
        this.normal.pos(78 * PixelRatio * this.rate, 181 * PixelRatio * this.rate);
        this.normal.loadImage(`${ServiceIp}images/room/label/level-normal-select.png`);
        this.mapInfoS.addChild(this.normal);
        if (fangdong.id === self.id) {
          this.normal.on(Laya.Event.CLICK, this, () => {
            if (this.currentLevel === 0)
              return;
            this.renderStar(0);
            request("area.roomHandler.selectStar", { star: this.currentLevel });
          });
        }
      }
      if (level > 1 && !this.mapInfoS.contains(this.gaoshou)) {
        this.gaoshou.size(72 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
        this.gaoshou.pos(152 * PixelRatio * this.rate, 181 * PixelRatio * this.rate);
        this.gaoshou.loadImage(`${ServiceIp}images/room/label/level-high.png`);
        this.mapInfoS.addChild(this.gaoshou);
        if (fangdong.id === self.id) {
          this.gaoshou.on(Laya.Event.CLICK, this, () => {
            if (this.currentLevel === 1)
              return;
            this.renderStar(1);
            request("area.roomHandler.selectStar", { star: this.currentLevel });
          });
        }
      }
      if (level > 2 && !this.mapInfoS.contains(this.kuangren)) {
        this.kuangren.size(72 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
        this.kuangren.pos(226 * PixelRatio * this.rate, 181 * PixelRatio * this.rate);
        this.kuangren.loadImage(`${ServiceIp}images/room/label/level-kuangren.png`);
        this.mapInfoS.addChild(this.kuangren);
        if (fangdong.id === self.id) {
          this.kuangren.on(Laya.Event.CLICK, this, () => {
            if (this.currentLevel === 2)
              return;
            this.renderStar(2);
            request("area.roomHandler.selectStar", { star: this.currentLevel });
          });
        }
      }
      if (level < 0 && this.mapInfoS.contains(this.normal)) {
        this.mapInfoS.removeChild(this.normal);
        this.mapInfoS.removeChild(this.gaoshou);
        this.mapInfoS.removeChild(this.kuangren);
        this.normal.offAll(Laya.Event.CLICK);
        this.gaoshou.offAll(Laya.Event.CLICK);
        this.kuangren.offAll(Laya.Event.CLICK);
      }
      let mapDesc = new Laya.Sprite();
      mapDesc.size(220 * PixelRatio * this.rate, 72 * PixelRatio * this.rate);
      mapDesc.pos(87 * PixelRatio * this.rate, 225 * PixelRatio * this.rate);
      this.mapInfoS.addChild(mapDesc);
      let mapTitle = new Laya.Label(mapInfo.name);
      mapTitle.fontSize = 16 * PixelRatio * this.rate;
      mapTitle.y = 2 * PixelRatio * this.rate;
      mapDesc.addChild(mapTitle);
      let mapDescText = new Laya.Text();
      mapDescText.width = 220 * PixelRatio * this.rate;
      mapDescText.text = mapInfo.desc;
      mapDescText.fontSize = 12 * PixelRatio * this.rate;
      mapDescText.y = 20 * PixelRatio * this.rate;
      mapDescText.html = true;
      mapDescText.ubb = true;
      mapDescText.wordWrap = true;
      mapDesc.addChild(mapDescText);
      this.renderPosition(mapInfo);
    }
    renderStar(star) {
      this.currentLevel = star;
      switch (this.currentLevel) {
        case 0:
          this.normal.loadImage(`${ServiceIp}images/room/label/level-normal-select.png`);
          this.gaoshou.loadImage(`${ServiceIp}images/room/label/level-high.png`);
          this.kuangren.loadImage(`${ServiceIp}images/room/label/level-kuangren.png`);
          break;
        case 1:
          this.gaoshou.loadImage(`${ServiceIp}images/room/label/level-high-select.png`);
          this.kuangren.loadImage(`${ServiceIp}images/room/label/level-kuangren.png`);
          this.normal.loadImage(`${ServiceIp}images/room/label/level-normal.png`);
          break;
        case 2:
          this.gaoshou.loadImage(`${ServiceIp}images/room/label/level-high.png`);
          this.kuangren.loadImage(`${ServiceIp}images/room/label/level-kuangren-select.png`);
          this.normal.loadImage(`${ServiceIp}images/room/label/level-normal.png`);
          break;
      }
    }
    renderPosition(mapInfo) {
      this.mapInfoS.removeChild(this.mapPositionPanel);
      this.mapPositionPanel = new Laya.Sprite();
      this.mapPositionPanel.size(49 * 6 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      this.mapPositionPanel.pos(9 * PixelRatio * this.rate, 347 * PixelRatio * this.rate);
      this.mapInfoS.addChild(this.mapPositionPanel);
      let players = this.room.players;
      for (let i in players) {
        let index = +i;
        if (index > mapInfo.maxCount) {
          this.renderDisabledPosition(index);
          continue;
        }
        if (players[i] && players[i] !== -1) {
          this.renderPlayerPosition(players[i], index);
          continue;
        } else {
          this.renderEmptyPosition(players[i], index);
        }
      }
    }
    renderDisabledPosition(i) {
      let disabled = new Laya.Image(`${ServiceIp}images/room/label/position-diabled.png`);
      disabled.size(47 * PixelRatio * this.rate, 46 * PixelRatio * this.rate);
      disabled.pos(((i - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      this.mapPositionPanel.addChild(disabled);
    }
    renderPlayerPosition(player, index) {
      let position = new Laya.Sprite();
      position.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      position.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      position.loadImage(`${ServiceIp}images/room/label/position1.png`);
      this.mapPositionPanel.addChild(position);
      if (player.id === this.room.playerId) {
        let fangdong = new Laya.Image(`${ServiceIp}images/room/label/fangdong.png`);
        fangdong.size(37 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
        fangdong.pos(6 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
        position.addChild(fangdong);
      } else if (player.isReady) {
        let ready = new Laya.Image(`${ServiceIp}images/room/label/ready.png`);
        ready.size(33 * PixelRatio * this.rate, 17 * PixelRatio * this.rate);
        ready.pos(7 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
        position.addChild(ready);
      }
      position.on(Laya.Event.CLICK, this, () => {
        request("area.roomHandler.kick", { index });
      });
    }
    renderEmptyPosition(player, index) {
      let positionEmpty = new Laya.Sprite();
      let positionClose = new Laya.Image(`${ServiceIp}images/room/label/position-close.png`);
      positionClose.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      positionClose.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      positionEmpty.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      positionEmpty.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      if (player === -1) {
        this.mapPositionPanel.addChild(positionClose);
      } else {
        this.mapPositionPanel.addChild(positionEmpty);
      }
      positionEmpty.on(Laya.Event.CLICK, this, () => {
        if (RoleService.getInstance().role.id !== RoomRoleService.getInstance().room.playerId)
          return;
        request("area.roomHandler.closePosition", { index });
      });
      positionClose.on(Laya.Event.CLICK, this, () => {
        if (RoleService.getInstance().role.id !== RoomRoleService.getInstance().room.playerId)
          return;
        request("area.roomHandler.openPosition", { index });
      });
    }
    onAwake() {
    }
  };
  PveMapPanelPrefab = __decorateClass([
    regClass19("uFdBvgOJQm6ukWLUbBkHew")
  ], PveMapPanelPrefab);

  // src/runtime/PvpMapPanelPrefab.generated.ts
  var PvpMapPanelPrefabBase = class extends Laya.Box {
  };

  // src/runtime/PvpMapPanelPrefab.ts
  var { regClass: regClass20 } = Laya;
  var PvpMapPanelPrefab = class extends PvpMapPanelPrefabBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
    }
    init(room, mapInfo, role) {
      this.room = room;
      this.mapInfo = mapInfo;
      this.role = role;
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.mapPart = new Laya.Sprite();
      this.mapPart.size(316 * PixelRatio * this.rate, 417 * PixelRatio * this.rate);
      this.mapPart.loadImage(`${roomBgUrl}/guanka-part2.png`);
      this.addChild(this.mapPart);
      let idStr = pad(this.room.id, 3);
      for (let i = 0; i < idStr.length; i++) {
        let roomIdImage = new Laya.Image();
        roomIdImage.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/roomId${idStr.charAt(i)}.png`);
        this.mapPart.addChild(roomIdImage);
        roomIdImage.size(roomIdImage.width * PixelRatio * this.rate, roomIdImage.height * this.rate * PixelRatio);
        roomIdImage.pos((2 + i * 22) * PixelRatio * this.rate, 2 * PixelRatio * this.rate);
      }
      this.nameLabel = new Laya.Label(this.room.name);
      this.nameLabel.fontSize = 14 * PixelRatio * this.rate;
      this.nameLabel.color = "white";
      this.nameLabel.pos(75 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      this.mapPart.addChild(this.nameLabel);
      if (this.room.playerId === RoleService.getInstance().role.id) {
        let settingBtn = new MyButton(`${roomBtnUrl}/btn-normal.png`, `${roomBtnUrl}/btn-normal-down.png`);
        settingBtn.pos(240 * PixelRatio * this.rate, 7 * PixelRatio * this.rate);
        settingBtn.size(60 * PixelRatio * this.rate, 21 * PixelRatio * this.rate);
        this.mapPart.addChild(settingBtn);
        settingBtn.on(Laya.Event.CLICK, this, this.openRoomSetting);
        let label = new Laya.Label("房间设置");
        label.size(settingBtn.width, settingBtn.height);
        label.pos(0, 1 * PixelRatio);
        label.fontSize = 12 * PixelRatio * this.rate;
        label.color = "white";
        label.valign = "middle";
        label.align = "center";
        settingBtn.addChild(label);
      }
      let mapSelect = new MyButton(`${roomBtnUrl}/select-guanka-long.png`, `${roomBtnUrl}/select-guanka-long-down.png`);
      mapSelect.size(111 * PixelRatio * this.rate, 56 * this.rate * PixelRatio);
      mapSelect.pos(19 * PixelRatio * this.rate, 142 * this.rate * PixelRatio);
      this.mapPart.addChild(mapSelect);
      mapSelect.on(Laya.Event.CLICK, this, () => {
        Laya.stage.event("showMapPanel");
      });
      this.renderMapInfo(this.mapInfo);
    }
    openRoomSetting() {
      if (!this.settingDialog) {
        let setting = getRoomSetting(this.closeSetting, this);
        this.settingDialog = showDialog(null, setting, null, -1);
      }
    }
    renderMapInfo(mapInfo) {
      this.mapPart.removeChild(this.mapInfoS);
      this.mapInfoS = new Laya.Sprite();
      this.mapPart.addChild(this.mapInfoS);
      let mapCard = new Laya.Sprite();
      mapCard.size(157 * PixelRatio * this.rate, 146 * PixelRatio * this.rate);
      mapCard.pos(139 * PixelRatio * this.rate, 77 * PixelRatio * this.rate);
      mapCard.loadImage(`${ServiceIp}images/room/label/map-${mapInfo.id}.png`);
      this.mapInfoS.addChild(mapCard);
      let mapCardName = new Laya.Label(mapInfo.name);
      mapCardName.fontSize = 14 * PixelRatio * this.rate;
      mapCardName.color = "#a05203";
      mapCardName.pos(40 * PixelRatio * this.rate, 113 * PixelRatio * this.rate);
      this.mapInfoS.addChild(mapCardName);
      this.renderPosition(mapInfo);
      this.renderTeam();
    }
    renderPosition(mapInfo) {
      this.mapInfoS.removeChild(this.positionPanel);
      this.positionPanel = new Laya.Sprite();
      this.positionPanel.size(49 * 6 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      this.positionPanel.pos(8 * PixelRatio * this.rate, 273 * PixelRatio * this.rate);
      this.mapInfoS.addChild(this.positionPanel);
      let players = this.room.players;
      for (let i in players) {
        let index = +i;
        if (index > mapInfo.maxCount) {
          this.renderDisabledPosition(index);
          continue;
        }
        if (players[i] && players[i] !== -1) {
          this.renderPlayerPosition(players[i], index);
          continue;
        } else {
          this.renderEmptyPosition(players[i], index);
        }
      }
    }
    renderDisabledPosition(i) {
      let disabled = new Laya.Image(`${ServiceIp}images/room/label/position-diabled.png`);
      disabled.size(47 * PixelRatio * this.rate, 46 * PixelRatio * this.rate);
      disabled.pos(((i - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      this.positionPanel.addChild(disabled);
    }
    renderPlayerPosition(player, index) {
      let position = new Laya.Sprite();
      position.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      position.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      position.loadImage(`${ServiceIp}images/room/label/position${player.teamId}.png`);
      this.positionPanel.addChild(position);
      if (player.id === this.room.playerId) {
        let fangdong = new Laya.Image(`${ServiceIp}images/room/label/fangdong.png`);
        fangdong.size(37 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
        fangdong.pos(6 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
        position.addChild(fangdong);
      } else if (player.isReady) {
        let ready = new Laya.Image(`${ServiceIp}images/room/label/ready.png`);
        ready.size(33 * PixelRatio * this.rate, 17 * PixelRatio * this.rate);
        ready.pos(7 * PixelRatio * this.rate, 24 * PixelRatio * this.rate);
        position.addChild(ready);
      }
    }
    closeSetting(param) {
      let name = param.name.text;
      let pwd = param.pwd.text;
      let level = param.level.text;
      if (!name && !pwd && !level) {
        hideDialog(null, this.settingDialog);
        this.settingDialog = null;
        return;
      }
      if (name.length > 10) {
        showTips("房间名不能超过10个字");
        return;
      }
      if (level && isNaN(+level)) {
        showTips("等级必须位数字");
        return;
      }
      hideDialog(null, this.settingDialog);
      this.settingDialog = null;
      request("area.roomHandler.setting", { name, pwd, level: +level }, (res) => {
        if (res.code === 200) {
          if (name) {
            this.room.name = name;
          }
          if (level) {
            this.room.name = `${this.room.name} [${level}]`;
          }
          this.nameLabel.text = this.room.name;
        }
      });
    }
    renderEmptyPosition(player, index) {
      let positionEmpty = new Laya.Sprite();
      let positionClose = new Laya.Image(`${ServiceIp}images/room/label/position-close.png`);
      positionClose.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      positionClose.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      positionEmpty.size(49 * PixelRatio * this.rate, 48 * PixelRatio * this.rate);
      positionEmpty.pos(((index - 1) * 49 + 2) * PixelRatio * this.rate, 0);
      if (player === -1) {
        this.positionPanel.addChild(positionClose);
      } else {
        this.positionPanel.addChild(positionEmpty);
      }
      positionEmpty.on(Laya.Event.CLICK, this, () => {
        if (RoleService.getInstance().role.id !== RoomRoleService.getInstance().room.playerId)
          return;
        request("area.roomHandler.closePosition", { index });
      });
      positionClose.on(Laya.Event.CLICK, this, () => {
        if (RoleService.getInstance().role.id !== RoomRoleService.getInstance().room.playerId)
          return;
        request("area.roomHandler.openPosition", { index });
      });
    }
    renderTeam() {
      this.mapInfoS.removeChild(this.teamPanel);
      this.teamPanel = new Laya.Sprite();
      this.teamPanel.pos(30 * PixelRatio * this.rate, 355 * PixelRatio * this.rate);
      this.mapInfoS.addChild(this.teamPanel);
      let teamArr = [1, 2, 3, 4, 5, 6];
      teamArr.forEach((id) => {
        let team = new Laya.Sprite();
        team.size(43 * PixelRatio * this.rate, 43 * PixelRatio * this.rate);
        team.pos((id - 1) * 42 * PixelRatio * this.rate, 0);
        if (this.role.teamId === id) {
          team.loadImage(`${ServiceIp}images/room/label/team${id}-ready.png`);
        } else {
          team.loadImage(`${ServiceIp}images/room/label/team${id}.png`);
        }
        team.on(Laya.Event.CLICK, this, () => {
          if (RoleService.getInstance().role.isReady)
            return;
          request("area.playerHandler.changeTeam", { teamId: id });
        });
        this.teamPanel.addChild(team);
      });
    }
  };
  PvpMapPanelPrefab = __decorateClass([
    regClass20("a4kD7nbkS-qwbfDQEQRlHg")
  ], PvpMapPanelPrefab);

  // src/runtime/RoomItemPrefab.generated.ts
  var RoomItemPrefabBase = class extends Laya.Box {
  };

  // src/runtime/RoomItemPrefab.ts
  var { regClass: regClass21 } = Laya;
  var RoomTypeMap = {
    1: "gaming",
    2: "waiting",
    3: "fulling"
  };
  var RoomItemPrefab = class extends RoomItemPrefabBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
      this.status = "empty";
      this.roomInfo = {};
    }
    init(roomInfo) {
      this.roomInfo = roomInfo;
      this.status = RoomTypeMap[roomInfo.status];
    }
    initUI() {
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.size(222 * PixelRatio * this.rate, 113 * PixelRatio * this.rate);
      this.renderRoom();
    }
    moveInRoom() {
      if (this.status !== "empty")
        return;
      this.status = "create";
      this.renderRoom();
    }
    moveOutRoom() {
      if (this.status !== "create")
        return;
      this.status = "empty";
      this.renderRoom();
    }
    renderRoom() {
      if (this.status === "gaming") {
        let roomAni = new Laya.Animation();
        roomAni.source = `${ServiceIp}images/hall/room/room-item-gaming.atlas`;
        roomAni.scale(PixelRatio * this.rate, PixelRatio * this.rate);
        roomAni.play();
        roomAni.pos(3 * PixelRatio * this.rate, 3 * PixelRatio * this.rate);
        this.addChild(roomAni);
      } else {
        this.loadImage(`${ServiceIp}images/hall/room/room-bg/room-item-${this.status}.png`);
      }
      if (this.status === "empty" || this.status === "create")
        return;
      let idStr = pad(this.roomInfo.id, 3);
      for (let i = 0; i < idStr.length; i++) {
        let roomIdImage = new Laya.Image();
        roomIdImage.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/roomId${idStr.charAt(i)}.png`);
        this.addChild(roomIdImage);
        roomIdImage.size(roomIdImage.width * PixelRatio * this.rate, roomIdImage.height * this.rate * PixelRatio);
        roomIdImage.pos((5 + i * 22) * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      }
      let roomTypeImage = new Laya.Image();
      if (this.roomInfo.type !== "pve" /* pve */) {
        roomTypeImage.source = Laya.loader.getRes(`${ServiceIp}images/hall/room-type/flag/${this.roomInfo.type}.png`);
      } else {
        let mapType = this.roomInfo.mapId.split("-")[0];
        roomTypeImage.source = Laya.loader.getRes(`${ServiceIp}images/hall/room-type/flag/${MapIdToName[mapType]}.png`);
      }
      this.addChild(roomTypeImage);
      if (this.roomInfo.type === "luandou") {
        roomTypeImage.size(roomTypeImage.width * 0.8 * PixelRatio * this.rate, roomTypeImage.height * 0.8 * PixelRatio * this.rate);
      } else {
        roomTypeImage.size(roomTypeImage.width * PixelRatio * this.rate, roomTypeImage.height * PixelRatio * this.rate);
      }
      roomTypeImage.pos(15 * PixelRatio * this.rate, 45 * PixelRatio * this.rate);
      let creator = new Laya.Label(this.roomInfo.name);
      creator.size(115 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      creator.pos(85 * PixelRatio * this.rate, 15 * PixelRatio * this.rate);
      creator.overflow = "hidden";
      creator.color = "white";
      creator.font = "宋体";
      creator.fontSize = 12 * PixelRatio * this.rate;
      creator.strokeColor = "#fa715a";
      creator.stroke = 1 * PixelRatio * this.rate;
      creator.valign = "middle";
      this.addChild(creator);
      let current2 = new Laya.Image();
      current2.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/count${this.roomInfo.currentCount}.png`);
      this.addChild(current2);
      current2.size(current2.width * PixelRatio * this.rate, current2.height * PixelRatio * this.rate);
      current2.pos(90 * PixelRatio * this.rate, 70 * PixelRatio * this.rate);
      let sperate = new Laya.Image();
      sperate.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/sperate.png`);
      this.addChild(sperate);
      sperate.size(sperate.width * PixelRatio * this.rate, sperate.height * PixelRatio * this.rate);
      sperate.pos(103 * PixelRatio * this.rate, 70 * PixelRatio * this.rate);
      let total = new Laya.Image();
      total.source = Laya.loader.getRes(`${ServiceIp}images/hall/number/room-number/count${this.roomInfo.maxCount}.png`);
      this.addChild(total);
      total.size(total.width * PixelRatio * this.rate, total.height * PixelRatio * this.rate);
      total.pos(118 * PixelRatio * this.rate, 70 * PixelRatio * this.rate);
    }
    onAwake() {
      this.on(Laya.Event.MOUSE_MOVE, this, this.moveInRoom);
      this.on(Laya.Event.MOUSE_OUT, this, this.moveOutRoom);
    }
  };
  RoomItemPrefab = __decorateClass([
    regClass21("QRG-kuAzTVePMTuu3yjUfQ")
  ], RoomItemPrefab);

  // src/runtime/RoomScene.generated.ts
  var RoomSceneBase = class extends Laya.Scene {
  };

  // src/entity/role/RoleDescPanel.ts
  var RoleDescPanel = class extends Laya.VBox {
    constructor(player) {
      super();
      this.rate = 1;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.player = player;
      this.renderPlayerInfo();
    }
    renderPlayerInfo() {
      this.space = 4 * PixelRatio * this.rate;
      this.loadImage(`${myUiUrl}/goods-desc-panel.png`);
      this.zOrder = 1e4;
      this.size(90 * PixelRatio * this.rate, 80 * PixelRatio * this.rate);
      let space = new Laya.Sprite();
      space.height = 10 * PixelRatio * this.rate;
      this.addChild(space);
      this.nameLabel = new Laya.Label(`昵称：${this.player.name.substring(0, 7)} `);
      this.nameLabel.fontSize = 8 * PixelRatio * this.rate;
      this.nameLabel.color = "white";
      this.nameLabel.x = 6 * PixelRatio * this.rate;
      this.addChild(this.nameLabel);
      this.levelLabel = new Laya.Label(`等级：${this.player.level} `);
      this.levelLabel.fontSize = 8 * PixelRatio * this.rate;
      this.levelLabel.color = "white";
      this.levelLabel.x = 6 * PixelRatio * this.rate;
      this.addChild(this.levelLabel);
      this.hpLabel = new Laya.Label(`生命：${this.player.props.hp} `);
      this.hpLabel.fontSize = 8 * PixelRatio * this.rate;
      this.hpLabel.color = "white";
      this.hpLabel.x = 6 * PixelRatio * this.rate;
      this.addChild(this.hpLabel);
      this.powerLabel = new Laya.Label(`力量：${this.player.props.power} `);
      this.powerLabel.fontSize = 8 * PixelRatio * this.rate;
      this.powerLabel.color = "white";
      this.powerLabel.x = 6 * PixelRatio * this.rate;
      this.addChild(this.powerLabel);
    }
    setRoleInfo(player) {
      this.player = player;
      this.nameLabel.text = `昵称：${this.player.name.substring(0, 7)} `;
      this.levelLabel.text = `等级：${this.player.level} `;
      this.hpLabel.text = `生命：${this.player.props.hp} `;
      this.powerLabel.text = `力量：${this.player.props.power} `;
    }
  };

  // src/runtime/RoomScene.ts
  var { regClass: regClass22 } = Laya;
  var RoomScene = class extends RoomSceneBase {
    constructor() {
      super(...arguments);
      this.rate = 1;
      this.roomService = RoomService.getInstance();
      this.roomRoleService = RoomRoleService.getInstance();
      this.roleService = RoleService.getInstance();
      this.role = this.roleService.role;
      this.mapList = [];
      this.autoStart = true;
      this.startGameTimer = null;
      this.autoStartTimer = null;
      this.cutdownText = new Laya.Text();
      this.autoFlag = true;
      this.cancelBtn = new MyButton(`${roomBtnUrl}/cancel.png`, `${roomBtnUrl}/cancel-down.png`);
      this.startGamepadPress = false;
    }
    onOpened(param) {
      var _a;
      if (!param)
        return;
      let { room, players, mapInfo } = param;
      this.room = room;
      this.room.players = players;
      this.mapInfo = mapInfo;
      this.roomRoleService.initRoom(this.room);
      this.initData();
      this.initUI();
      this.pomeloEvent();
      playMusic(`${ServiceIp}music/default.mp3`);
      if ((_a = this.role.gameConfig) == null ? void 0 : _a.startHandle) {
        if (window.hasGamepad) {
          this.updateGamepad();
        } else {
          window.addEventListener("gamepadconnected", this.gamepadconnected.bind(this));
          window.addEventListener("gamepaddisconnected", this.gamepaddisconnected.bind(this));
        }
      }
    }
    gamepadconnected() {
      this.updateGamepad();
    }
    gamepaddisconnected() {
      cancelAnimationFrame(this.requestFrameId);
      window.hasGamepad = false;
    }
    updateGamepad() {
      const gamepads = navigator.getGamepads ? navigator.getGamepads() : [];
      if (gamepads[0]) {
        window.hasGamepad = true;
        if (gamepads[0].buttons[0].pressed) {
          if (this.startGamepadPress)
            return;
          this.startGamepadPress = true;
          setTimeout(() => {
            this.startGamepadPress = false;
          }, 1e3);
          if (this.isCreator(this.role.id)) {
            this.startGame();
          } else {
            this.ready();
          }
        }
      }
      this.requestFrameId = requestAnimationFrame(() => {
        this.updateGamepad();
      });
    }
    onDisable() {
      this.requestFrameId && cancelAnimationFrame(this.requestFrameId);
    }
    initUI() {
      var _a;
      Laya.stage.width = DeviceWidth;
      Laya.stage.height = DeviceHeight;
      let bgInfo2 = ResRate["login-bg"];
      let bgRate2 = bgInfo2.width / bgInfo2.height;
      this.rate = DeviceHeight * bgRate2 / bgInfo2.width;
      this.bg.size(DeviceHeight * bgRate2, DeviceHeight);
      this.bg.pos((DeviceWidth - this.bg.width) / 4, 0);
      this.bg.graphics.drawRect(0, 0, this.bg.width, this.bg.height, "#000000ee");
      Laya.loader.load("prefab/hallHead.lh", Laya.Handler.create(this, (res) => {
        let head = res.create();
        head.zOrder = 10;
        this.bg.addChild(head);
        head.parentPanel = this.bg;
      }));
      this.renderRoomInfo();
      this.renderPlayerPart();
      this.renderMapPart();
      this.renderBottomChat();
      this.chatPanel = getChatPanel((DeviceWidth - this.bg.width) / 2 * bgRate2, DeviceHeight);
      this.chatPanel.pos(this.bg.width + this.bg.x, 0);
      this.addChild(this.chatPanel);
      (_a = chatChannel) == null ? void 0 : _a.changeChannel(2 /* room */);
    }
    renderBottomChat() {
      let bottomChatPanel = new Laya.Sprite();
      bottomChatPanel.size(481 * PixelRatio * this.rate, 39 * PixelRatio * this.rate);
      bottomChatPanel.pos(1 * PixelRatio * this.rate, 564 * PixelRatio * this.rate);
      bottomChatPanel.zOrder = 100;
      bottomChatPanel.loadImage(`${ServiceIp}images/system/panelAtlas/bottom-chat-panel.png`);
      this.bg.addChild(bottomChatPanel);
      this.bottomChatInput = new Laya.Input();
      this.bottomChatInput.size(440 * PixelRatio * this.rate, 26 * PixelRatio * this.rate);
      this.bottomChatInput.pos(10 * PixelRatio * this.rate, 5 * PixelRatio * this.rate);
      this.bottomChatInput.color = "white";
      this.bottomChatInput.fontSize = 12 * PixelRatio * this.rate;
      this.bottomChatInput.on(Laya.Event.KEY_DOWN, this, (e) => {
        if (e.keyCode === 13) {
          this.sendMsg();
        }
      });
      bottomChatPanel.addChild(this.bottomChatInput);
      let sendBtn = new Laya.Image(`${ServiceIp}images/hall/send.png`);
      sendBtn.size(23 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      sendBtn.pos(447 * PixelRatio * this.rate, 7 * PixelRatio * this.rate);
      bottomChatPanel.addChild(sendBtn);
      sendBtn.on(Laya.Event.CLICK, this, this.sendMsg);
    }
    renderRoomInfo() {
      let positionPanel = new Laya.Sprite();
      positionPanel.zOrder = 20;
      positionPanel.size(483 * PixelRatio * this.rate, 71 * PixelRatio * this.rate);
      positionPanel.pos(0, 67 * PixelRatio * this.rate);
      positionPanel.loadImage(`${roomBgUrl}/room-top.png`);
      this.bg.addChild(positionPanel);
      let position = new Laya.Sprite();
      position.size(290 * PixelRatio * this.rate, 22 * PixelRatio * this.rate);
      position.pos(27 * PixelRatio * this.rate, 9 * PixelRatio * this.rate);
      position.loadImage(`${roomBgUrl}/position-panel.png`);
      positionPanel.addChild(position);
      let xiaoma = new Laya.Image(`${ServiceIp}images/room/label/xiaoma.png`);
      xiaoma.size(45 * PixelRatio * this.rate, 49 * PixelRatio * this.rate);
      xiaoma.pos(27 * PixelRatio * this.rate, -20 * PixelRatio * this.rate);
      positionPanel.addChild(xiaoma);
      let positionText = new Laya.Label("普通区 普通1");
      positionText.color = "white";
      positionText.font = "宋体";
      positionText.fontSize = 12 * PixelRatio * this.rate;
      positionText.strokeColor = "#333333";
      positionText.stroke = 1 * PixelRatio * this.rate;
      positionText.pos(148 * PixelRatio * this.rate, 15 * PixelRatio * this.rate);
      positionPanel.addChild(positionText);
      let network = new Laya.Sprite();
      network.size(104 * PixelRatio * this.rate, 21 * PixelRatio * this.rate);
      network.pos(330 * PixelRatio * this.rate, 8 * PixelRatio * this.rate);
      network.loadImage(`${ServiceIp}images/room/label/newwork-default.png`);
      positionPanel.addChild(network);
      let normal = new Laya.Image(`${ServiceIp}images/room/label/network-normal.png`);
      normal.size(68 * PixelRatio * this.rate, 18 * PixelRatio * this.rate);
      normal.pos(36 * PixelRatio * this.rate, 2 * PixelRatio * this.rate);
      network.addChild(normal);
    }
    // renderNotice () {
    //     let noticePanel = new Laya.Sprite()
    //     noticePanel.size(483 * PixelRatio * this.rate, 22 * PixelRatio * this.rate)
    //     noticePanel.pos(0, 108 * PixelRatio * this.rate)
    //     noticePanel.loadImage(`${roomBgUrl}/head-bg.png`)
    //     this.bg.addChild(noticePanel)
    // }
    renderPlayerPart() {
      this.playerPart = new Laya.Sprite();
      this.playerPart.size(478 * PixelRatio * this.rate, 420 * PixelRatio * this.rate);
      this.playerPart.pos(2 * PixelRatio * this.rate, 140 * PixelRatio * this.rate);
      this.playerPart.loadImage(`${ServiceIp}images/room/room-part.jpg`);
      this.bg.addChild(this.playerPart);
      let players = this.room.players;
      for (let index in players) {
        if (players[index] && players[index] !== -1) {
          this.renderPlayer(players[index], index);
        }
      }
    }
    removePlayer(playerId) {
      this.playerPart.removeChildByName(playerId + "");
    }
    renderPlayer(player, index, teamId = 1) {
      this.playerPart.removeChildByName(player.id + "");
      let playerS = new Laya.Sprite();
      playerS.name = player.id + "";
      player.direction = 4 /* DOWN */;
      player.state = "default" /* default */;
      playerS.pos((50 + (parseInt(index) - 1) % 3 * 140) * PixelRatio * this.rate, (110 + Math.floor(parseInt(index) / 4) * 180) * PixelRatio * this.rate);
      this.playerPart.addChild(playerS);
      player.zOrder = 10;
      player.scale(this.rate, this.rate);
      playerS.addChild(player);
      let playerMask = new Laya.Sprite();
      playerMask.pos(-5 * PixelRatio * this.rate, -45 * PixelRatio * this.rate);
      playerMask.size(50 * PixelRatio * this.rate, 80 * PixelRatio * this.rate);
      playerMask.zOrder = 11;
      playerS.addChild(playerMask);
      playerMask.on(Laya.Event.MOUSE_MOVE, (e) => {
        this.showPlayerDescPanel(player, playerS);
      });
      playerMask.on(Laya.Event.MOUSE_OUT, (e) => {
        playerS.removeChild(this.playerDescPanel);
      });
      playerMask.on(Laya.Event.MOUSE_DOWN, (e) => {
        this.showPlayerDescPanel(player, playerS);
      });
      if (this.isCreator(player.id)) {
        let fangdong = new Laya.Image(`${ServiceIp}images/room/label/fangdong.png`);
        fangdong.size(37 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
        fangdong.pos(0 * PixelRatio * this.rate, -88 * PixelRatio * this.rate);
        playerS.addChild(fangdong);
      } else if (player.isReady) {
        let playerReady = new Laya.Image(`${ServiceIp}images/room/label/ready-ok.png`);
        playerReady.size(68 * PixelRatio * this.rate, 20 * PixelRatio * this.rate);
        playerReady.pos(-13 * PixelRatio * this.rate, -88 * PixelRatio * this.rate);
        playerS.addChild(playerReady);
      }
    }
    showPlayerDescPanel(player, parent) {
      if (!this.playerDescPanel) {
        this.playerDescPanel = new RoleDescPanel(player);
        this.playerDescPanel.pos(40 * PixelRatio * this.rate, -40 * PixelRatio * this.rate);
        this.playerDescPanel.zOrder = 1e4;
      } else {
        this.playerDescPanel.setRoleInfo(player);
      }
      if (!parent.contains(this.playerDescPanel)) {
        parent.addChild(this.playerDescPanel);
      }
    }
    renderMapPart() {
      this.bg.removeChild(this.mapPart);
      this.mapPart = new Laya.Sprite();
      this.mapPart.size(316 * PixelRatio * this.rate, 417 * PixelRatio * this.rate);
      this.mapPart.pos(483 * PixelRatio * this.rate, 67 * PixelRatio * this.rate);
      this.bg.addChild(this.mapPart);
      this.mapPrefab = null;
      if (this.room.type === "pve") {
        Laya.loader.load("prefab/room/pveMapPanel.lh", Laya.Handler.create(this, (res) => {
          this.mapPrefab = res.create();
          this.mapPrefab.init(this.room, this.mapInfo);
          this.mapPrefab.initUI();
          this.mapPrefab.renderStar(this.room.star);
          this.mapPart.addChild(this.mapPrefab);
          Laya.stage.on("showMapPanel", this, this.showMapSelect);
        }));
      } else {
        Laya.loader.load("prefab/room/pvpMapPanel.lh", Laya.Handler.create(this, (res) => {
          this.mapPrefab = res.create();
          this.mapPrefab.init(this.room, this.mapInfo, this.role);
          this.mapPrefab.initUI();
          this.mapPart.addChild(this.mapPrefab);
          Laya.stage.on("showMapPanel", this, this.showMapSelect);
        }));
      }
      let roomPanel = new Laya.Sprite();
      roomPanel.size(103 * PixelRatio * this.rate, 32 * this.rate * PixelRatio);
      roomPanel.pos(3 * PixelRatio * this.rate, 414 * PixelRatio * this.rate);
      roomPanel.loadImage(`${roomBtnUrl}/room-panel-select.png`);
      this.mapPart.addChild(roomPanel);
      let playerPanel = new Laya.Sprite();
      playerPanel.size(103 * PixelRatio * this.rate, 32 * this.rate * PixelRatio);
      playerPanel.pos(104 * PixelRatio * this.rate, 414 * PixelRatio * this.rate);
      playerPanel.loadImage(`${roomBtnUrl}/player-list.png`);
      this.mapPart.addChild(playerPanel);
      let playPanel = new Laya.Sprite();
      playPanel.size(103 * PixelRatio * this.rate, 32 * this.rate * PixelRatio);
      playPanel.pos(205 * PixelRatio * this.rate, 414 * PixelRatio * this.rate);
      playPanel.loadImage(`${roomBtnUrl}/play-method.png`);
      this.mapPart.addChild(playPanel);
      this.optPanel = new Laya.Sprite();
      this.optPanel.loadImage(`${ServiceIp}images/hall/opt-panel.png`);
      this.mapPart.addChild(this.optPanel);
      this.optPanel.size(318 * PixelRatio * this.rate, 88 * PixelRatio * this.rate);
      this.optPanel.pos(0, 448 * PixelRatio * this.rate);
      if (this.isCreator(this.role.id)) {
        this.startBtn = new MyButton(`${roomBtnUrl}/start.png`, `${roomBtnUrl}/start-down.png`);
        this.startBtn.size(131 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
        this.startBtn.pos(5 * PixelRatio * this.rate, 12 * PixelRatio * this.rate);
        this.optPanel.addChild(this.startBtn);
        this.startBtn.on(Laya.Event.CLICK, this, this.startGame);
        this.autoStartTimer = setInterval(() => {
          this.checkAutoGame();
        }, 3e3);
      } else {
        let ready = new MyButton(`${roomBtnUrl}/ready.png`, `${roomBtnUrl}/ready-down.png`);
        ready.size(131 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
        ready.pos(5 * PixelRatio * this.rate, 12 * PixelRatio * this.rate);
        this.optPanel.addChild(ready);
        ready.on(Laya.Event.CLICK, this, this.ready);
      }
      this.cancelBtn.on(Laya.Event.CLICK, this, this.onClickCancelGame);
      let request2 = new MyButton(`${roomBtnUrl}/request.png`, `${roomBtnUrl}/request-down.png`);
      request2.size(90 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      request2.pos(136 * PixelRatio * this.rate, 12 * PixelRatio * this.rate);
      this.optPanel.addChild(request2);
      request2.on(Laya.Event.CLICK, this, this.requestPalyer);
      let returnBtn = new MyButton(`${ServiceIp}images/hall/create/create-room-return.png`, `${ServiceIp}images/hall/create/create-room-return-down.png`);
      returnBtn.size(90 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
      returnBtn.pos(226 * PixelRatio * this.rate, 12 * PixelRatio * this.rate);
      this.optPanel.addChild(returnBtn);
      returnBtn.on(Laya.Event.CLICK, this, this.goHall);
    }
    checkAutoGame() {
      if (this.startGameTimer)
        return;
      let roleList = this.roomRoleService.roleList;
      if (roleList.length > 1) {
        for (let i = 0; i < roleList.length; i++) {
          if (roleList[i].id === this.role.id)
            continue;
          if (!roleList[i].isReady) {
            return;
          }
        }
        this.startGame();
      }
    }
    renderMapSelect() {
      this.mapDialog = new Laya.Dialog();
      let mapPanel = new Laya.Sprite();
      mapPanel.size(204 * PixelRatio * this.rate, 525 * PixelRatio * this.rate);
      mapPanel.loadImage(`${roomBgUrl}/select-guanka-bg.png`);
      this.mapDialog.addChild(mapPanel);
      let close = new Laya.Image(`${roomBtnUrl}/close.png`);
      close.size(29 * PixelRatio * this.rate, 29 * PixelRatio * this.rate);
      close.pos(167 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      mapPanel.addChild(close);
      close.on(Laya.Event.CLICK, this, () => {
        this.mapDialog.close();
      });
      let panel = new Laya.Panel();
      panel.size(185 * PixelRatio * this.rate, 384 * PixelRatio * this.rate);
      panel.pos(10 * PixelRatio * this.rate, 43 * PixelRatio * this.rate);
      panel.vScrollBarSkin = "atlas/comp/vscroll.png";
      mapPanel.addChild(panel);
      let mapBg = new Laya.VBox();
      panel.graphics.drawRect(0, 0, 158 * PixelRatio * this.rate, 384 * PixelRatio * this.rate, "#8b7a72");
      panel.addChild(mapBg);
      if (this.room.type === "pve" /* pve */) {
        this.mapList.forEach((map, i) => {
          let mapType = new Laya.Image(`${ServiceIp}images/room/label/guanka-flag-${map.name}.png`);
          mapType.size(158 * PixelRatio * this.rate, 38 * PixelRatio * this.rate);
          mapBg.addChild(mapType);
          let mapChildren = this.initMapChildren(map);
          let expand = false;
          mapType.on(Laya.Event.CLICK, this, () => {
            if (!this.currentMapType) {
              mapBg.addChildAt(mapChildren, i + 1);
            } else {
              mapBg.removeChildAt(this.currentMapType.index + 1);
              mapBg.addChildAt(mapChildren, i + 1);
            }
            this.currentMapType = {
              index: i,
              node: mapType
            };
          });
        });
      } else {
        let mapType = new Laya.Image(`${ServiceIp}images/room/label/guanka-flag-luandou.png`);
        mapType.size(158 * PixelRatio * this.rate, 38 * PixelRatio * this.rate);
        mapBg.addChild(mapType);
        let mapChildren = this.initMapChildren({ children: this.mapList });
        mapBg.addChild(mapChildren);
      }
      let submit = new MyButton(`${roomBtnUrl}/map-long.png`, `${roomBtnUrl}/map-long-down.png`);
      submit.size(100 * PixelRatio * this.rate, 29 * PixelRatio * this.rate);
      submit.pos(50 * PixelRatio * this.rate, 485 * PixelRatio * this.rate);
      mapPanel.addChild(submit);
      let submitText = new Laya.Text();
      submitText.text = "确  定";
      submitText.pos(30 * PixelRatio * this.rate, 10 * PixelRatio * this.rate);
      submitText.color = "white";
      submitText.fontSize = 12 * PixelRatio * this.rate;
      submit.addChild(submitText);
      submit.on(Laya.Event.CLICK, this, () => {
        this.mapDialog.close();
      });
    }
    showMapSelect() {
      var _a;
      (_a = this.mapDialog) == null ? void 0 : _a.show();
    }
    initMapChildren(map) {
      let mapPanel = new Laya.Sprite();
      let mapHeight = 0;
      map.children.forEach((item, i) => {
        let label = new Laya.Label(`  ${item.name}${item.limit && item.count ? "[限" + item.count + "次]" : ""}`);
        label.size(158 * PixelRatio * this.rate, 25 * PixelRatio * this.rate);
        label.pos(0, i * 25 * PixelRatio * this.rate);
        label.color = "white";
        label.fontSize = 12 * PixelRatio * this.rate;
        label.valign = "middle";
        mapPanel.addChild(label);
        mapHeight = (i + 1) * 25 * PixelRatio * this.rate;
        label.on(Laya.Event.CLICK, this, () => {
          this.mapChange(item.id, label);
        });
        if (item.id === this.room.mapId) {
          this.setCurrentMap(label);
        }
      });
      mapPanel.size(158 * PixelRatio * this.rate, mapHeight);
      return mapPanel;
    }
    mapChange(id, label) {
      if (label.text === this.currentMap.text)
        return;
      if (label) {
        this.setCurrentMap(label);
      }
      this.requestMapInfo(id);
    }
    setCurrentMap(label) {
      if (this.currentMap)
        this.currentMap.bgColor = "";
      this.currentMap = label;
      this.currentMap.bgColor = "#00000033";
    }
    cancelGame() {
      clearInterval(this.startGameTimer);
      this.startGameTimer = null;
      this.optPanel.removeChild(this.cutdownText);
      this.optPanel.removeChild(this.cancelBtn);
      if (this.startBtn) {
        this.optPanel.addChild(this.startBtn);
      }
    }
    onClickCancelGame() {
      request("area.roomHandler.readyGame", { status: 0 });
    }
    startGame() {
      if (this.startGameTimer || this.readyGameRequest)
        return;
      let roleList = this.roomRoleService.roleList;
      if (roleList.length > 1) {
        for (let i = 0; i < roleList.length; i++) {
          if (roleList[i].id === this.role.id)
            continue;
          if (!roleList[i].isReady) {
            showTips("有玩家未准备");
            return;
          }
        }
      }
      this.readyGameRequest = true;
      request("area.roomHandler.readyGame", { status: 1 }, (res) => {
        this.readyGameRequest = false;
      });
    }
    onReadyGame(playerId, status) {
      if (status) {
        let time = 2;
        this.optPanel.removeChild(this.startBtn);
        this.cancelBtn.size(131 * PixelRatio * this.rate, 65 * PixelRatio * this.rate);
        this.cancelBtn.pos(5 * PixelRatio * this.rate, 12 * PixelRatio * this.rate);
        this.optPanel.addChild(this.cancelBtn);
        this.cutdownText.pos(60 * PixelRatio * this.rate, 16 * PixelRatio * this.rate);
        this.cutdownText.text = time + "";
        this.cutdownText.fontSize = 56 * PixelRatio * this.rate;
        this.cutdownText.color = "#d9d7d7";
        this.cutdownText.bold = true;
        this.optPanel.addChild(this.cutdownText);
        this.startGameTimer = setInterval(() => {
          time--;
          if (time === 0) {
            clearInterval(this.startGameTimer);
            this.startGameTimer = null;
            if (this.isCreator(this.role.id)) {
              if (this.startGameRequest)
                return;
              this.startGameRequest = true;
              request("area.roomHandler.startGame", null, (res) => {
                this.startGameRequest = false;
                if (res.code !== 200) {
                  showTips(res.msg);
                  this.cancelGame();
                }
              });
            }
          } else {
            this.cutdownText.text = time + "";
          }
        }, 1e3);
      } else {
        this.cancelGame();
        if (this.role.id === playerId) {
          this.ready();
        }
      }
    }
    ready() {
      if (this.readyRequest)
        return;
      this.readyRequest = true;
      request("area.roomHandler.ready", { playerId: this.role.id, roomId: this.room.id, isReady: !this.role.isReady }, (res) => {
        this.readyRequest = false;
      });
    }
    requestPalyer() {
    }
    goHall() {
      request("area.roomHandler.leaveRoom", null, (res) => {
        if (res.code === 200) {
          this.role.isReady = false;
          this.role.status = 0 /* IDLE */;
          this.role.setTeamId(1);
          if (this.role.id === this.room.playerId) {
            Laya.stage.off("showMapPanel", this.showMapSelect);
          }
          Laya.Scene.open("scene/gameHall.ls", true);
        } else {
          showTips("离开失败");
        }
      });
    }
    sendMsg() {
      let role = this.role;
      if (role.accountStatus === 1 /* Forbidden */ && Date.now() <= role.deadline) {
        showTips("您已被禁言，解禁日期：" + new Date(role.deadline).toLocaleString());
        return;
      }
      request("area.chatHandler.sendMsg", { channel: 2 /* room */, msg: this.bottomChatInput.text }, (res) => {
        if (res.code === 200) {
          this.bottomChatInput.text = "";
        }
      });
    }
    onClosed() {
      this.bg.removeChildren();
      if (this.autoStartTimer) {
        clearInterval(this.autoStartTimer);
        this.autoStartTimer = null;
      }
      if (this.startGameTimer) {
        clearInterval(this.startGameTimer);
        this.startGameTimer = null;
      }
      let pomelo = window.pomelo;
      pomelo.off("readyGame");
      pomelo.off("onStarChange");
      pomelo.off("onPlayerJoinRoom");
      pomelo.off("onPlayerLeaveRoom");
      pomelo.off("onStartGame");
      pomelo.off("onPlayerReady");
      pomelo.off("onRoomChange");
      pomelo.off("onClosePosition");
      pomelo.off("onOpenPosition");
      pomelo.off("onTeamChange");
      pomelo.off("onMapChange");
      pomelo.off("onReceiveMsg");
      if (this.mapDialog) {
        this.mapDialog.destroy();
        this.mapDialog = null;
      }
      Laya.stage.off("showMapPanel", this.showMapSelect);
    }
    requestMapInfo(id) {
      request("area.mapHandler.getMapDetail", { mapId: id, fangdongId: this.room.playerId, roomId: this.room.id }, (res) => {
        if (res.code === 200) {
          this.mapInfo = res.data;
          this.mapPrefab.renderMapInfo(this.mapInfo);
        } else {
          showTips("获取地图数据失败");
        }
      });
    }
    /**
     * 是否是房东即房间创建者
     * @returns
     */
    isCreator(roleId) {
      return roleId === this.room.playerId;
    }
    initData() {
      if (this.isCreator(this.role.id)) {
        request("area.mapHandler.getMapList", { type: this.room.type }, (res) => {
          if (res.code === 200) {
            this.mapList = res.data;
            this.renderMapSelect();
          } else {
            showTips("获取地图列表失败");
          }
        });
      }
    }
    pomeloEvent() {
      let pomelo = window.pomelo;
      pomelo.on("readyGame", (res) => {
        this.onReadyGame(res.data.playerId, res.data.status);
      });
      pomelo.on("onStarChange", (res) => {
        let star = res.data.star;
        this.mapPrefab.renderStar(star);
      });
      pomelo.on("onPlayerJoinRoom", (res) => {
        let { player, index } = res.data;
        let role = this.roomRoleService.addPlayerToRoom(player, index);
        this.renderPlayer(role, index);
        this.mapPrefab.renderPosition(this.mapInfo);
      });
      pomelo.on("onPlayerLeaveRoom", (res) => {
        let { playerId, index } = res.data;
        let result = this.roomRoleService.removePlayerFromRoom(playerId, index);
        if (this.role.id === playerId) {
          Laya.stage.off("showMapPanel", this.showMapSelect);
          Laya.Scene.open("scene/gameHall.ls", true);
          return;
        }
        if (result) {
          this.removePlayer(playerId);
          this.mapPrefab.renderPosition(this.mapInfo);
        }
      });
      pomelo.on("onMapChange", (res) => {
        this.mapInfo = res.data.mapInfo;
        this.mapPrefab.renderMapInfo(this.mapInfo);
      });
      pomelo.on("onClosePosition", (res) => {
        let index = res.data.index;
        this.room.players[index] = -1;
        this.mapPrefab.renderPosition(this.mapInfo);
      });
      pomelo.on("onOpenPosition", (res) => {
        let index = res.data.index;
        this.room.players[index] = null;
        this.mapPrefab.renderPosition(this.mapInfo);
      });
      pomelo.on("onStartGame", (res) => {
        setGameRandomSeed(res.data.seed);
        this.mapInfo.starLevel = res.data.starLevel;
        if (bottomChatInput) {
          bottomChatInput.focus = false;
        }
        Laya.Scene.open("scene/gameScene.ls", true, { room: this.room, mapInfo: this.mapInfo, mapData: res.data.mapData });
      });
      pomelo.on("onPlayerReady", (res) => {
        let playerId = res.data.playerId;
        let player = this.roomRoleService.getRoomPlayerById(playerId);
        let index = this.roomRoleService.getPlayerRoomPosition(playerId);
        player.isReady = res.data.isReady;
        this.renderPlayer(player, index);
        this.mapPrefab.renderPosition(this.mapInfo);
        if (player.isReady)
          playSound(`${ServiceIp}sound/ready.wav`);
      });
      pomelo.on("onRoomChange", (res) => {
        this.onClosed();
        this.onOpened(__spreadProps(__spreadValues({}, res.data), { players: this.transferPlayers(res.data.players) }));
      });
      pomelo.on("onTeamChange", (res) => {
        let { playerId, teamId } = res.data;
        let player = this.roomRoleService.getRoomPlayerById(playerId);
        player.setTeamId(teamId);
        let index = this.roomRoleService.getPlayerRoomPosition(playerId);
        this.renderPlayer(player, index, teamId);
        this.mapPrefab.renderPosition(this.mapInfo);
        this.mapPrefab.renderTeam();
      });
      pomelo.on("onReceiveMsg", (res) => {
        addChat(res.data);
        let role = this.roomRoleService.getRoomPlayerById(res.data.playerId);
        if (role) {
          role.showChatDialog(res.data.msg);
        }
      });
    }
    transferPlayers(players) {
      let result = {};
      this.roomRoleService.roleList = [];
      for (let key in players) {
        if (!players[key] || players[key] === -1) {
          result[key] = players[key];
        } else {
          result[key] = players[key].id === this.role.id ? this.role : this.roleService.transferRole(players[key]);
          this.roomRoleService.roleList.push(result[key]);
        }
      }
      return result;
    }
  };
  RoomScene = __decorateClass([
    regClass22("qBD8HEyASF2vMdvs6EcHIg")
  ], RoomScene);
})();
